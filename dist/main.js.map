{"version":3,"sources":["./src/constants/discount-types.ts","./src/app/core/services/audits/audits.service.ts","./projects/table-generator/src/lib/table-generator.module.ts","./src/app/core/services/resources/resources.service.ts","./projects/http-error/src/lib/dialog/http-error-dialog.component.ts","./projects/http-error/src/lib/dialog/http-error-dialog.component.html","./projects/http-error/src/lib/material.module.ts","./src/app/core/services/incidents/incidents.service.ts","./projects/dynamic-form/src/lib/directives/dynamic-component.directive.ts","./projects/dynamic-form/src/lib/components/slider/slider.component.ts","./projects/dynamic-form/src/lib/components/slider/slider.component.html","./src/app/shared/components/toolbar/config/toolsMenu.ts","./src/app/pages/create-edit-incident/create-edit-incident.component.ts","./src/app/pages/create-edit-incident/create-edit-incident.component.html","./projects/http-error/src/public-api.ts","./src/app/core/services/tabs/tabs.service.ts","./src/app/shared/components/clock/clock.component.ts","./src/app/shared/components/clock/clock.component.html","./src/app/shared/components/change-roles-dialog/change-roles-dialog.component.ts","./src/app/shared/components/change-roles-dialog/change-roles-dialog.component.html","./projects/http-error/src/lib/interceptor/http-error.interceptor.ts","./src/app/core/services/attachments/attachments.service.ts","./src/app/shared/components/toolbar/config/addMenu.ts","./src/app/pages/search-organization/search-organization.component.ts","./src/app/pages/search-organization/search-organization.component.html","./projects/dynamic-form/src/lib/components/select/select.component.ts","./projects/dynamic-form/src/lib/components/select/select.component.html","./src/app/pages/domain-manager/components/domain-parameters/domain-parameters.component.ts","./src/app/pages/domain-manager/components/domain-parameters/domain-parameters.component.html","./src/environments/environment.ts","./src/app/core/services/quick-search/quick-search.service.ts","./projects/dynamic-form/src/lib/components/checkbox/checkbox.component.ts","./projects/dynamic-form/src/lib/components/checkbox/checkbox.component.html","./projects/loading/src/lib/configuration/loading.configuration.ts","./projects/dynamic-form/src/lib/material.module.ts","./projects/dynamic-form/src/lib/directives/set-date-on-key-press.directive.ts","./projects/dynamic-form/src/lib/components/autocomplete/autocomplete.component.ts","./projects/dynamic-form/src/lib/components/autocomplete/autocomplete.component.html","./projects/dynamic-form/src/lib/utils/helpers/get.ts","./projects/loading/src/lib/service/loading.service.ts","./src/app/core/services/notes/notes.service.ts","./projects/loading/src/public-api.ts","./projects/loading/src/lib/loading.module.ts","./src/app/shared/components/autocomplete-async/autocomplete-async.component.ts","./src/app/shared/components/autocomplete-async/autocomplete-async.component.html","./src/constants/domain-entities.ts","./src/app/shared/components/quick-search/quick-search.component.ts","./src/app/shared/components/quick-search/quick-search.component.html","./src/app/core/models/models.ts","./src/app/core/services/transmissions/transmissions.service.ts","./projects/dynamic-form/src/lib/components/toggle/toggle.component.ts","./projects/dynamic-form/src/lib/components/toggle/toggle.component.html","./src/app/core/services/events/events.service.ts","./projects/http-error/src/lib/http-error.module.ts","./projects/dynamic-form/src/public-api.ts","./src/app/shared/components/tree/tree.component.ts","./src/app/shared/components/tree/tree.component.html","./src/app/shared/components/menu/menu.component.html","./src/app/shared/components/menu/menu.component.ts","./src/app/pages/create-edit-incident/components/incident-summary/incident-summary.component.ts","./src/app/pages/create-edit-incident/components/incident-summary/incident-summary.component.html","./src/app/pages/create-edit-incident/components/incident-update-history/incident-update-history.component.ts","./src/app/pages/create-edit-incident/components/incident-update-history/incident-update-history.component.html","./src/app/shared/shared.module.ts","./src/app/pages/create-edit-incident/components/add-organization-dialog/add-organization-dialog.component.ts","./src/app/pages/create-edit-incident/components/add-organization-dialog/add-organization-dialog.component.html","./projects/http-error/src/lib/http-error.component.ts","./src/app/pages/domain-manager/domain-manager.component.ts","./src/app/pages/domain-manager/domain-manager.component.html","./src/constants/entities.ts","./src/constants/app-user-groups.ts","./src/app/shared/components/toolbar/config/searchMenu.ts","./projects/dynamic-form/src/lib/components/datetime/datetime.component.ts","./projects/dynamic-form/src/lib/components/datetime/datetime.component.html","./src/app/shared/components/toolbar/toolbar.component.ts","./src/app/shared/components/toolbar/toolbar.component.html","./projects/dynamic-form/src/lib/components/radio/radio.component.ts","./projects/dynamic-form/src/lib/components/radio/radio.component.html","./src/app/app.component.ts","./src/app/app.component.html","./projects/dynamic-form/src/lib/cdk/collections/selection-model.ts","./projects/dynamic-form/src/lib/utils/errors/error-control.ts","./src/app/pages/search-event/search-event.component.ts","./src/app/pages/search-event/search-event.component.html","./projects/loading/src/lib/loading.component.ts","./projects/loading/src/lib/loading.component.html","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/shared/components/confirmation-dialog/confirmation-dialog.component.html","./projects/dynamic-form/src/lib/dynamic-form.component.ts","./projects/dynamic-form/src/lib/dynamic-form.component.html","./src/app/pages/domain-manager/components/domain-parameter-item-dialog/domain-parameter-item-dialog.component.ts","./src/app/pages/domain-manager/components/domain-parameter-item-dialog/domain-parameter-item-dialog.component.html","./src/app/pages/search-event/form/form.component.ts","./src/app/pages/search-event/form/form.component.html","./src/app/app.module.ts","./src/app/shared/components/toolbar/config/aboutMenu.ts","./projects/dynamic-form/src/lib/dynamic-form.module.ts","./src/app/pages/create-edit-incident/components/add-resource-dialog/add-resource-dialog.component.ts","./src/app/pages/create-edit-incident/components/add-resource-dialog/add-resource-dialog.component.html","./projects/loading/src/lib/interceptor/loading.interceptor.ts","./projects/dynamic-form/src/lib/utils/validators/validators.ts","./src/app/shared/components/toolbar/toolbar-menu-items.service.ts","./src/constants/app-routes.ts","./src/environments/environment.prod.ts","./src/app/shared/validators/date-greater-than-validator.ts","./projects/http-error/src/lib/service/http-error.service.ts","./src/app/shared/components/user-group-dialog/user-group-dialog.component.ts","./src/app/shared/components/user-group-dialog/user-group-dialog.component.html","./src/app/pages/create-edit-incident/components/incident-attachments/incident-attachments.component.ts","./src/app/pages/create-edit-incident/components/incident-attachments/incident-attachments.component.html","./projects/dynamic-form/src/lib/pipe/get/get.pipe.ts","./src/app/pages/domain-manager/components/domain-parameter-dialog/domain-parameter-dialog.component.ts","./src/app/pages/domain-manager/components/domain-parameter-dialog/domain-parameter-dialog.component.html","./projects/table-generator/src/lib/models/models.ts","./projects/dynamic-form/src/lib/components/input/input.component.ts","./projects/dynamic-form/src/lib/components/input/input.component.html","./src/app/pages/domain-manager/components/domain-mappings/domain-mappings.component.ts","./src/app/pages/domain-manager/components/domain-mappings/domain-mappings.component.html","./src/app/core/services/domains/domains.service.ts","./projects/table-generator/src/lib/table-generator.component.ts","./projects/table-generator/src/lib/table-generator.component.html","./projects/table-generator/src/public-api.ts","./src/app/shared/utils/helpers.ts","./src/app/core/services/roles/roles.service.ts","./src/app/core/services/users/users.service.ts","./src/app/core/services/navigation-history/navigation-history.service.ts","./projects/dynamic-form/src/lib/components/textarea/textarea.component.ts","./projects/dynamic-form/src/lib/components/textarea/textarea.component.html","./projects/table-generator/src/lib/material.module.ts","./src/app/shared/components/discount-manager-dialog/discount-manager-dialog.component.ts","./src/app/shared/components/discount-manager-dialog/discount-manager-dialog.component.html","./src/app/shared/components/add-remove-table/add-remove-table.component.ts","./src/app/shared/components/add-remove-table/add-remove-table.component.html","./src/app/core/services/api/api.service.ts","./projects/loading/src/lib/material.module.ts","./src/constants/app-roles.ts","./src/app/app-routing.module.ts","./projects/dynamic-form/src/lib/pipe/safe-html/safe-html.pipe.ts","./src/app/material.module.ts","./projects/dynamic-form/src/lib/utils/validators/has-validator.ts","./src/app/core/services/organizations/organizations.service.ts","./src/main.ts","./src/app/shared/components/tabbed-container/tabbed-container.component.ts","./src/app/shared/components/tabbed-container/tabbed-container.component.html","./src/app/pages/create-edit-incident/components/add-transmission-dialog/add-transmission-dialog.component.ts","./src/app/pages/create-edit-incident/components/add-transmission-dialog/add-transmission-dialog.component.html","./$_lazy_route_resource lazy namespace object","./projects/dynamic-form/src/lib/components/empty/empty.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum DiscountType {\n  FIXED = 'FIXED',\n  PERCENT = 'PERCENT',\n}\n","import { Injectable } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { EntityAuditDTO } from '@models/entity-audit-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuditsService {\n  private _endpointURL = '/audits';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getAuditsByEntityId(\n    entity: EntityType,\n    entityId: number\n  ): Observable<EntityAuditDTO[]> {\n    return this.apiService.read<EntityAuditDTO[]>(\n      `${this._endpointURL}/${entity.toUpperCase()}/${entityId}`\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from './material.module';\nimport { TableGeneratorComponent } from './table-generator.component';\n\n@NgModule({\n  declarations: [TableGeneratorComponent],\n  imports: [CommonModule, FormsModule, TranslateModule, MaterialModule],\n  exports: [TableGeneratorComponent],\n})\nexport class TableGeneratorModule {}\n","import { Injectable } from '@angular/core';\nimport { ResourceLightDTO } from '@models/resource-light-dto.model';\nimport { ResourceWithProfileAndEventLightDTO } from '@models/resource-with-profile-and-event-light-dto.model';\nimport { SunOutageAvailabilityDefinitionDTO } from '@models/sun-outage-availability-definition-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResourcesService {\n  private _endpointURL = '/resources';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getResourcesByTransmissionIdList(\n    transmissionIds: number[]\n  ): Observable<ResourceWithProfileAndEventLightDTO[]> {\n    return this.apiService.create<ResourceWithProfileAndEventLightDTO[]>(\n      `${this._endpointURL}/findResourceList`,\n      {\n        body: transmissionIds,\n      }\n    );\n  }\n\n  getFilteredResources(\n    searchCriteria: string,\n    limit = 1000\n  ): Observable<ResourceLightDTO[]> {\n    return this.apiService.create<ResourceLightDTO[]>(\n      `${this._endpointURL}/search`,\n      {\n        body: {\n          first: 0,\n          max: limit,\n          orders: [{ identifier: 'code', asc: true }],\n          terms: [\n            {\n              identifier: 'code',\n              value: searchCriteria,\n              type: 'Like',\n              likeType: 'BEGIN',\n              operator: true,\n            },\n          ],\n          relations: [],\n          values: {},\n        },\n      }\n    );\n  }\n\n  getSatellites(limit = 1000): Observable<ResourceLightDTO[]> {\n    return this.apiService.create<ResourceLightDTO[]>(\n      `${this._endpointURL}/search`,\n      {\n        body: {\n          first: 0,\n          max: limit,\n          orders: [\n            {\n              identifier: 'code',\n              asc: true,\n            },\n          ],\n          terms: [\n            {\n              identifier: null,\n              value: null,\n              type: 'And',\n              terms: [\n                {\n                  identifier: 'status',\n                  value: ['ACTIVE'],\n                  type: 'In',\n                },\n              ],\n            },\n          ],\n          relations: [\n            {\n              type: 'Join',\n              relationEntity: 'resourceProfile',\n              terms: [\n                {\n                  identifier: 'code',\n                  value: 'SAT',\n                  type: 'Eq',\n                  privateOperator: true,\n                },\n              ],\n              subJoin: null,\n              joinType: 'INNER',\n            },\n          ],\n          values: {},\n        },\n      }\n    );\n  }\n\n  saveSunOutageBySatelliteId(\n    satelliteId: number,\n    sunOutages: SunOutageAvailabilityDefinitionDTO[]\n  ): Observable<string[]> {\n    return this.apiService.create<string[]>(\n      `${this._endpointURL}/sun-outages/satellite/${satelliteId}`,\n      {\n        body: sunOutages,\n      }\n    );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'talan-http-error-dialog',\n  templateUrl: './http-error-dialog.component.html',\n  styleUrls: ['./http-error-dialog.component.scss'],\n})\nexport class HttpErrorDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<HttpErrorDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public message: string\n  ) {}\n}\n","<button\n  mat-icon-button\n  class=\"close-button\"\n  [mat-dialog-close]=\"message\">\n  <mat-icon>close</mat-icon>\n</button>\n\n<h1 mat-dialog-title>Error</h1>\n\n<mat-dialog-content [innerHTML]=\"message\"></mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n  <button\n    mat-button\n    [mat-dialog-close]=\"message\"\n    cdkFocusInitial>\n    Close\n  </button>\n</mat-dialog-actions>\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  exports: [MatDialogModule, MatButtonModule, MatIconModule],\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { CategoryIncidentDTO } from '@models/category-incident-dto.model';\nimport { IncidentDTO } from '@models/incident-dto.model';\nimport { IncidentOwnerDTO } from '@models/incident-owner-dto.model';\nimport { SaveIncidentRequestDTO } from '@models/save-incident-request-dto.model';\nimport { SubcategoryIncidentDTO } from '@models/subcategory-incident-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  private _endpointURL = '/incidents';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getIncident(incidentId: number | string): Observable<IncidentDTO> {\n    return this.apiService.read<IncidentDTO>(\n      `${this._endpointURL}/${incidentId}?full=true`\n    );\n  }\n\n  saveIncident(incidentDto: SaveIncidentRequestDTO): Observable<IncidentDTO> {\n    return this.apiService.create<IncidentDTO>(this._endpointURL, {\n      body: incidentDto,\n    });\n  }\n\n  getFilteredCategories(\n    searchCriteria: string\n  ): Observable<CategoryIncidentDTO[]> {\n    return this.apiService.create<CategoryIncidentDTO[]>(\n      `${this._endpointURL}/category/search`,\n      {\n        body: {\n          orders: [{ identifier: 'sequence', asc: true }],\n          terms: [\n            {\n              identifier: 'description',\n              value: searchCriteria,\n              type: 'Like',\n              likeType: 'BEGIN',\n              operator: true,\n            },\n            {\n              identifier: 'active',\n              value: true,\n              type: 'Eq',\n              privateOperator: true,\n            },\n          ],\n        },\n      }\n    );\n  }\n\n  getSubcategoriesByCategoryId(\n    categoryId: number\n  ): Observable<SubcategoryIncidentDTO[]> {\n    return this.apiService.create<SubcategoryIncidentDTO[]>(\n      `${this._endpointURL}/subcategory/search`,\n      {\n        body: {\n          orders: [\n            {\n              identifier: 'sequence',\n              asc: true,\n            },\n          ],\n          terms: [\n            {\n              identifier: 'active',\n              value: true,\n              type: 'Eq',\n              privateOperator: true,\n            },\n          ],\n          relations: [\n            {\n              type: 'Join',\n              relationEntity: 'incidentCategory',\n              terms: [\n                {\n                  identifier: 'id',\n                  value: categoryId,\n                  type: 'Eq',\n                  privateOperator: true,\n                },\n              ],\n              subjoin: null,\n              joinType: 'INNER',\n            },\n          ],\n        },\n      }\n    );\n  }\n\n  getAllOwners(): Observable<IncidentOwnerDTO[]> {\n    return this.apiService.create<IncidentOwnerDTO[]>(\n      `${this._endpointURL}/owner/search`,\n      {\n        body: {\n          orders: [{ identifier: 'sequence', asc: true }],\n          terms: [\n            {\n              identifier: 'active',\n              value: true,\n              type: 'Eq',\n              privateOperator: true,\n            },\n          ],\n        },\n      }\n    );\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { FieldConfiguration } from '../models/models';\n\n@Directive({\n  selector: '[talanDynamicComponent]',\n})\nexport class DynamicComponentDirective implements OnChanges {\n  /**\n   * The component instance\n   */\n  @Input() component: any;\n\n  /**\n   * All inputs properties\n   */\n  @Input() inputs!: {\n    field: FieldConfiguration;\n    control: AbstractControl | undefined;\n  };\n\n  /**\n   * DOM field order\n   */\n  @Input() index!: number;\n\n  /**\n   * The nativeElement to add classes, width...\n   *\n   * @HostBiding is not working because use ng-container with dynamic component\n   */\n  private get nativeElement(): HTMLElement {\n    return (this.viewContainerRef.get(0) as any).rootNodes[0] as HTMLElement;\n  }\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.loadComponent();\n  }\n\n  /**\n   * Creates `dynamic-form-${index}` & `dynamic-form-${field.type}` classes and add `field.classes` too\n   */\n  computeClasses(field: FieldConfiguration, index: number): string[] {\n    let arr = [];\n\n    if (field.classes instanceof Array) {\n      arr = field.classes;\n    } else {\n      arr = field.classes?.split(' ') || [];\n    }\n\n    // Remove spaces\n    arr = arr.map((item) => item.replace(/\\s+/g, '')).filter(Boolean);\n\n    return [...arr, `dynamic-form-${index}`, `dynamic-form-${field.type}`];\n  }\n\n  /**\n   * Load component with inputs properties\n   */\n  loadComponent(): void {\n    if (this.component) {\n      const componentFactory =\n        this.componentFactoryResolver.resolveComponentFactory(this.component);\n      const componentRef: ComponentRef<any> = componentFactory.create(\n        this.viewContainerRef.injector\n      );\n\n      // Asignar las propiedades de entrada al componente\n      for (const key in this.inputs) {\n        if (this.inputs.hasOwnProperty(key)) {\n          componentRef.instance[key] = (this.inputs as any)[key];\n        }\n      }\n\n      this.viewContainerRef.clear();\n      this.viewContainerRef.insert(componentRef.hostView);\n\n      this.addClass();\n      this.addWidth();\n      this.toggleHidden();\n    }\n  }\n\n  addClass(): void {\n    this.nativeElement.classList.add(\n      ...this.computeClasses(this.inputs.field, this.index)\n    );\n  }\n\n  addWidth(): void {\n    this.setStyle(this.nativeElement, 'width', this.inputs.field.width);\n  }\n\n  toggleHidden(): void {\n    if (this.inputs.field.hidden) {\n      this.nativeElement.setAttribute('hidden', '');\n    } else {\n      this.nativeElement.removeAttribute('hidden');\n    }\n  }\n\n  setStyle(el: HTMLElement, ruleName: string, value?: string): void {\n    if (value) {\n      el.style[ruleName as any] = value;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SliderConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss'],\n})\nexport class SliderComponent {\n  private _field!: SliderConfiguration;\n\n  get field(): SliderConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: SliderConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n\n  displayWith(value: number): string | number {\n    return this.field && this.field.displayWith\n      ? this.field.displayWith(value)\n      : value;\n  }\n}\n","<mat-form-field\n  *ngIf=\"!field.noFormField\"\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\"\n  floatLabel=\"always\"\n  class=\"mat-form-field--no-underline\">\n  <mat-label *ngIf=\"field.label\">{{ field.label }}</mat-label>\n\n  <input\n    matInput\n    hidden\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\" />\n\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n\n  <mat-hint align=\"start\">\n    <ng-container\n      *ngIf=\"!control.touched || (field.hintStart && control.valid)\">\n      {{ field.hintStart }}\n    </ng-container>\n\n    <!-- Fixing mat-form-field problem not show mat-error with this trick -->\n    <ng-container *ngIf=\"control.touched && control.invalid\">\n      <mat-error\n        [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n    </ng-container>\n  </mat-hint>\n\n  <mat-hint\n    *ngIf=\"!control.touched || (field.hintEnd && control.valid)\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n</mat-form-field>\n\n<div *ngIf=\"field.noFormField\">\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n</div>\n\n<!-- Default template -->\n<ng-template #default>\n  <mat-slider\n    [formControl]=\"control\"\n    [required]=\"required\"\n    [invert]=\"field.invert\"\n    [max]=\"field.max\"\n    [min]=\"field.min\"\n    [step]=\"field.step\"\n    [thumbLabel]=\"field.thumbLabel\"\n    [displayWith]=\"displayWith\"\n    [tickInterval]=\"field.tickInterval\"\n    [vertical]=\"field.vertical\"></mat-slider>\n</ng-template>\n","import { MatDialog } from '@angular/material/dialog';\nimport { appRoutes } from '@constants/app-routes';\nimport { EntityType } from '@constants/entities';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { ChangeRolesDialogComponent } from '@shared/components/change-roles-dialog/change-roles-dialog.component';\nimport { UserGroupDialogComponent } from '@shared/components/user-group-dialog/user-group-dialog.component';\nimport { DomainManagerComponent } from 'src/app/pages/domain-manager/domain-manager.component';\nimport { MenuDivider, NeosMenuItem } from '../../menu/menu.component';\n\nexport const getToolsMenu = (\n  tabsService: TabsService,\n  dialog: MatDialog\n): NeosMenuItem[] => [\n  // {\n  //   icon: 'bug_report',\n  //   iconColor: 'red',\n  //   labelTranslateKey: 'reportIssue',\n  // },\n  // MenuDivider,\n\n  {\n    icon: 'settings',\n    labelTranslateKey: 'domainsManager',\n    callback: () =>\n      tabsService.addUniqueTab(\n        'domainsManager',\n        DomainManagerComponent,\n        EntityType.TOOLS,\n        {},\n        [appRoutes.DOMAIN_MANAGER]\n      ),\n  },\n  {\n    icon: 'settings',\n    labelTranslateKey: 'discountManager',\n    callback: () =>\n      tabsService.addUniqueTab(\n        'discountManager',\n        DomainManagerComponent,\n        EntityType.TOOLS,\n        {},\n        [appRoutes.DISCOUNT_MANAGER]\n      ),\n  },\n  MenuDivider,\n\n  {\n    icon: 'settings',\n    labelTranslateKey: 'changeRoles',\n    callback: () =>\n      dialog.open(ChangeRolesDialogComponent, {\n        width: '800px',\n        disableClose: true,\n      }),\n  },\n  {\n    icon: 'settings',\n    labelTranslateKey: 'userGroups',\n    callback: () =>\n      dialog.open(UserGroupDialogComponent, {\n        width: '800px',\n        disableClose: true,\n      }),\n  },\n\n  // MenuDivider,\n  // {\n  //   icon: 'monitor_heart',\n  //   labelTranslateKey: 'monitorApplication',\n  // },\n];\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryIncidentDTO } from '@models/category-incident-dto.model';\nimport { IncidentOwnerDTO } from '@models/incident-owner-dto.model';\nimport { SaveIncidentRequestDTO } from '@models/save-incident-request-dto.model';\nimport { SubcategoryIncidentDTO } from '@models/subcategory-incident-dto.model';\nimport { TransmissionLightDTO } from '@models/transmission-light-dto.model';\nimport { IncidentsService } from '@services/incidents/incidents.service';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogData,\n} from '@shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { dateToLocalDate } from '@shared/utils/helpers';\nimport { dateGreaterThan } from '@shared/validators/date-greater-than-validator';\nimport { intervalToDuration } from 'date-fns';\nimport { LoadingService } from 'loading';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-create-edit-incident',\n  templateUrl: './create-edit-incident.component.html',\n  styleUrls: ['./create-edit-incident.component.scss'],\n})\nexport class CreateEditIncidentComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  private _onDestroy$ = new Subject<void>();\n  incidentForm!: FormGroup;\n  formDefaultValue: any;\n  isEditMode: boolean = false;\n  isSaving: boolean = false;\n  availableCategories: Observable<CategoryIncidentDTO[]>;\n  availableSubcategories: SubcategoryIncidentDTO[] = [];\n  availableOwners: Observable<IncidentOwnerDTO[]>;\n  body: 'home' | 'notes' | 'attachment' | 'history' = 'home';\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly formBuilder: FormBuilder,\n    private readonly tabsService: TabsService,\n    private readonly snackBar: MatSnackBar,\n    private readonly incidentsService: IncidentsService,\n    private readonly loadingService: LoadingService\n  ) {\n    this.availableCategories = this.incidentsService.getFilteredCategories('');\n    this.availableOwners = this.incidentsService.getAllOwners();\n    this.loadingService.useInterceptor = false;\n  }\n\n  ngOnInit(): void {\n    this.incidentForm = this.formBuilder.group({\n      incidentNo: new FormControl({ value: null, disabled: true }),\n      status: new FormControl('OPEN', [Validators.required]),\n      id: new FormControl(),\n      version: new FormControl(0),\n      entityTrackerIdBean: new FormControl(),\n      timingStartDate: new FormControl(null, [Validators.required]),\n      timingEndDate: new FormControl({ value: null, disabled: true }, [\n        Validators.required,\n        dateGreaterThan('timingStartDate'),\n      ]),\n      duringTransmission: new FormControl(null, [Validators.required]),\n      duration: new FormControl({ value: null, disabled: true }),\n      isReviewed: new FormControl(false),\n      isServiceRestablished: new FormControl(false),\n      category: new FormControl(null, [Validators.required]),\n      subcategory: new FormControl({ value: null, disabled: true }, [\n        Validators.required,\n      ]),\n      owner: new FormControl(null, [Validators.required]),\n      duringProgram: new FormControl(null, [Validators.required]),\n      essaResponsible: new FormControl(),\n      refeed: new FormControl(),\n      region: new FormControl(),\n      displayOnReport: new FormControl(false),\n      serviceAffecting: new FormControl(null, [Validators.required]),\n      subject: new FormControl(),\n      summary: this.formBuilder.group({\n        description: new FormControl(),\n        informationToCaller: new FormControl(\n          'Thank you. We are aware that this transmission is experiencing technical problems. Our team is working to restore the service as soon as possible. We apologise for any inconvenience caused.'\n        ),\n        action: new FormControl(),\n        resolution: new FormControl(),\n        transmissions: new FormControl([]),\n        resources: new FormControl([]),\n        organizations: new FormControl([]),\n      }),\n      notes: this.formBuilder.group({\n        all: new FormControl([]),\n        changed: new FormControl([]),\n        removed: new FormControl([]),\n      }),\n      attachments: new FormControl([]),\n      xrmManagedIncident: new FormControl(false),\n      identifier: new FormControl(''),\n    });\n    this.formDefaultValue = this.incidentForm.value;\n  }\n\n  ngAfterViewInit(): void {\n    const tabContext = this.tabsService.getActiveTabData().contextData;\n    this.isEditMode = false;\n    if (tabContext) {\n      if (tabContext.incidentForm) {\n        this.incidentForm.patchValue(tabContext.incidentForm);\n      }\n\n      if (tabContext.isEditMode) {\n        this.isEditMode = tabContext.isEditMode;\n      }\n    }\n\n    this.incidentForm.valueChanges\n      .pipe(\n        debounceTime(500),\n        tap(() => {\n          this.tabsService.setTabEditing(this.tabsService.activeTabId, true);\n          if (this.incidentForm.value.timingStartDate) {\n            this.incidentForm.controls.timingEndDate.enable();\n          }\n          this.updateDuration();\n          this.tabsService.patchActiveTabContext({\n            incidentForm: this.incidentForm.value,\n          });\n        }),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe();\n\n    this.incidentForm.controls.category.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        filter((value) => value && value.id),\n        switchMap((selectedCategory: CategoryIncidentDTO) =>\n          this.incidentsService.getSubcategoriesByCategoryId(\n            selectedCategory.id\n          )\n        ),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((subcategories) => {\n        this.availableSubcategories = subcategories;\n        this.incidentForm.controls.subcategory.enable();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n    this.snackBar.dismiss();\n    this.loadingService.useInterceptor = true;\n  }\n\n  openSaveDialog(): Promise<boolean> {\n    const confirmationDialogRef = this.dialog.open(\n      ConfirmationDialogComponent,\n      {\n        width: '500px',\n        data: {\n          titleTranslateKey: 'incidentNotifiedENT',\n          titleIcon: 'info',\n        } as ConfirmationDialogData,\n      }\n    );\n\n    return confirmationDialogRef\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n\n  getRequestDTOFromForm(): SaveIncidentRequestDTO {\n    const formValue = this.incidentForm.value;\n    return {\n      id: formValue.id,\n      version: formValue.version,\n      entityTrackerIdBean: formValue.entityTrackerIdBean,\n      no: formValue.incidentNo || null,\n      description: formValue.summary.description,\n      startDate: dateToLocalDate(formValue.timingStartDate),\n      endDate: dateToLocalDate(formValue.timingEndDate),\n      category: formValue.category,\n      subCategory: formValue.subcategory,\n      status: formValue.status,\n      reviewed: formValue.isReviewed,\n      region: formValue.region,\n      responsible: formValue.essaResponsible,\n      reFeed: formValue.refeed,\n      serviceAffecting: formValue.serviceAffecting,\n      transmissions: formValue.summary.transmissions.map(\n        (tx: TransmissionLightDTO) => ({\n          id: null,\n          version: 0,\n          entityTrackerIdBean: null,\n          transmission: tx,\n        })\n      ),\n      resources: formValue.summary.resources,\n      organizations: formValue.summary.organizations,\n      action: formValue.summary.action,\n      owner: formValue.owner,\n      informationToCaller: formValue.summary.informationToCaller,\n      resolution: formValue.summary.resolution,\n      notes: formValue.notes.all,\n      noteChanges: {\n        notesChanged: formValue.notes.changed,\n        notesRemoved: formValue.notes.removed,\n      },\n      attachments: formValue.attachments,\n      subject: formValue.subject,\n      serviceReestablished: formValue.isServiceRestablished,\n      duringTransmission: formValue.duringTransmission,\n      duringProgram: formValue.duringProgram,\n      displayOnReport: formValue.displayOnReport,\n      identifier: formValue.identifier,\n      defaultEntityType: 'INCIDENT',\n      entityNameEnum: 'INCIDENT',\n      entityType: 'INCIDENT',\n      xrmManagedIncident: formValue.xrmManagedIncident,\n      name: String(formValue.summary.description).slice(0, 25).concat('(...)'),\n      code: formValue.incidentNo || null,\n    };\n  }\n\n  async saveChanges() {\n    if (this.incidentForm.valid) {\n      const userConfirmed = await this.openSaveDialog();\n      if (userConfirmed) {\n        this.incidentsService\n          .saveIncident(this.getRequestDTOFromForm())\n          .pipe(\n            tap(() => {\n              this.snackBar.dismiss();\n              this.isSaving = true;\n            }),\n            catchError(() => {\n              this.snackBar.open('Failed to save', 'Close', {\n                panelClass: ['neos-snackbar-error'],\n              });\n              return of({});\n            })\n          )\n          .subscribe(() => {\n            this.isSaving = false;\n            this.snackBar.open('Saved successfully', 'Close', {\n              panelClass: ['neos-snackbar-success'],\n            });\n            this.tabsService.setTabEditing(this.tabsService.activeTabId, false);\n            // TODO: Show incident in edit mode after creation - Pending more info.\n            // this.incidentForm.controls.incidentNo.setValue('01-1111-11');\n            // // ----------------------------------\n            // this.tabsService.patchActiveTabContext({\n            //   incidentForm: this.incidentForm.value,\n            // });\n            // this.tabsService.getActiveTabData().label = '01-1111-11';\n            // this.tabsService.setTabEditing(this.tabsService.activeTabId, false);\n          });\n      }\n    }\n  }\n\n  closePage() {\n    this.tabsService.removeTab(this.tabsService.activeTabId);\n  }\n\n  mergeTimingDateTime(selectedTime: Date, controlName: string) {\n    const selectedTimingDate: Date = this.incidentForm.get(controlName)?.value;\n\n    if (!selectedTimingDate) {\n      this.incidentForm.get(controlName)?.setValue(selectedTime);\n\n      return;\n    }\n\n    selectedTimingDate.setHours(\n      selectedTime.getHours(),\n      selectedTime.getMinutes(),\n      selectedTime.getSeconds()\n    );\n    this.incidentForm.updateValueAndValidity();\n  }\n\n  updateDuration() {\n    const formValue = this.incidentForm.value;\n\n    if (!formValue.timingStartDate || !formValue.timingEndDate) {\n      this.incidentForm.controls.duration.setValue(null);\n      return;\n    }\n\n    const duration = intervalToDuration({\n      start: formValue.timingStartDate,\n      end: formValue.timingEndDate,\n    });\n\n    let durationLabel = '';\n    Object.entries(duration).forEach(([key, value]) => {\n      if (value) {\n        durationLabel += `${value}${key[0]} `;\n      }\n    });\n\n    this.incidentForm.controls.duration.setValue(durationLabel);\n  }\n}\n","<form\n  [formGroup]=\"incidentForm\"\n  (ngSubmit)=\"saveChanges()\"\n  class=\"incident-form\">\n  <div class=\"incident-form__header\">\n    <!-- //////////////////////////////////////////////// -->\n    <!-- TODO: Use the dynamic form between these markers,\n         when it is completed -->\n    <div class=\"left-input-container\">\n      <mat-form-field>\n        <mat-label>{{ 'incidentNo' | translate | uppercase }}</mat-label>\n\n        <input\n          formControlName=\"incidentNo\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'status' | translate | uppercase }}</mat-label>\n\n        <mat-select\n          required\n          formControlName=\"status\">\n          <mat-option value=\"OPEN\"\n            >{{ 'open' | translate | uppercase }}\n          </mat-option>\n\n          <mat-option value=\"IN_PROGRESS\"\n            >{{ 'inProgress' | translate | uppercase }}\n          </mat-option>\n\n          <mat-option value=\"CLOSED\"\n            >{{ 'closed' | translate | uppercase }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class=\"center-form-section\">\n      <div class=\"center-top-input-container\">\n        <div class=\"timing-input\">\n          <div class=\"date-time-selectors\">\n            <mat-form-field>\n              <mat-label>{{ 'timingStart' | translate | uppercase }}</mat-label>\n\n              <input\n                matInput\n                required\n                talanSetDateOnKeyPress\n                formControlName=\"timingStartDate\"\n                [matDatepicker]=\"timingStartDate\"\n                [max]=\"incidentForm.controls.timingEndDate.value\" />\n\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"timingStartDate\"></mat-datepicker-toggle>\n\n              <mat-datepicker #timingStartDate></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-label>{{ 'time' | translate | uppercase }}</mat-label>\n\n              <input\n                [value]=\"incidentForm.controls.timingStartDate.value\"\n                (timeChange)=\"mergeTimingDateTime($event, 'timingStartDate')\"\n                matTimepicker />\n            </mat-form-field>\n          </div>\n\n          <span>-</span>\n\n          <div class=\"date-time-selectors\">\n            <mat-form-field>\n              <mat-label>{{ 'timingEnd' | translate | uppercase }}</mat-label>\n\n              <input\n                *ngIf=\"!incidentForm.controls.timingStartDate.value\"\n                matInput\n                disabled />\n\n              <input\n                matInput\n                required\n                talanSetDateOnKeyPress\n                *ngIf=\"incidentForm.controls.timingStartDate.value\"\n                formControlName=\"timingEndDate\"\n                [matDatepicker]=\"timingEndDate\"\n                [min]=\"incidentForm.controls.timingStartDate.value\" />\n\n              <mat-datepicker-toggle\n                matSuffix\n                [for]=\"timingEndDate\"></mat-datepicker-toggle>\n\n              <mat-datepicker #timingEndDate></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <mat-label>{{ 'time' | translate | uppercase }}</mat-label>\n\n              <input\n                *ngIf=\"!incidentForm.controls.timingStartDate.value\"\n                matInput\n                disabled />\n\n              <input\n                matTimepicker\n                *ngIf=\"incidentForm.controls.timingStartDate.value\"\n                [value]=\"incidentForm.controls.timingEndDate.value\"\n                (timeChange)=\"mergeTimingDateTime($event, 'timingEndDate')\" />\n            </mat-form-field>\n          </div>\n        </div>\n\n        <mat-form-field>\n          <mat-label>{{ 'duringTXM' | translate | uppercase }}</mat-label>\n\n          <mat-select\n            required\n            formControlName=\"duringTransmission\">\n            <mat-option [value]=\"true\">{{\n              'yes' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option [value]=\"false\">{{\n              'no' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'duration' | translate | uppercase }}</mat-label>\n          <input\n            formControlName=\"duration\"\n            matInput />\n        </mat-form-field>\n\n        <div class=\"checkboxes\">\n          <mat-checkbox\n            color=\"primary\"\n            labelPosition=\"before\"\n            formControlName=\"isReviewed\"\n            >{{ 'reviewed' | translate }}</mat-checkbox\n          >\n\n          <mat-checkbox\n            color=\"primary\"\n            labelPosition=\"before\"\n            formControlName=\"isServiceRestablished\"\n            >{{ 'serviceReestablished' | translate }}</mat-checkbox\n          >\n        </div>\n      </div>\n\n      <div class=\"center-bottom-input-container\">\n        <mat-form-field>\n          <mat-label>{{ 'category' | translate | uppercase }}</mat-label>\n\n          <mat-select\n            formControlName=\"category\"\n            required\n            ><mat-option\n              *ngFor=\"let category of availableCategories | async\"\n              [value]=\"category\"\n              >{{ category.value }}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'subCategory' | translate | uppercase }}</mat-label>\n\n          <mat-select\n            formControlName=\"subcategory\"\n            required>\n            <mat-option\n              *ngFor=\"let subcategory of availableSubcategories\"\n              [value]=\"subcategory\">\n              {{ subcategory.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'owner' | translate | uppercase }}</mat-label>\n\n          <mat-select\n            formControlName=\"owner\"\n            required>\n            ><mat-option\n              *ngFor=\"let owner of availableOwners | async\"\n              [value]=\"owner\">\n              {{ owner.label }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'duringProg' | translate | uppercase }}</mat-label>\n\n          <mat-select\n            formControlName=\"duringProgram\"\n            required>\n            <mat-option [value]=\"true\">{{\n              'yes' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option [value]=\"false\">{{\n              'no' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'essaResponsible' | translate | uppercase }}</mat-label>\n\n          <mat-select formControlName=\"essaResponsible\">\n            <mat-option value=\"NO\">{{\n              'no' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"UNKNOWN\">{{\n              'unknown' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"YES\">{{\n              'yes' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'refeed' | translate | uppercase }}</mat-label>\n\n          <mat-select formControlName=\"refeed\">\n            <mat-option value=\"EVC_RECORDING\">{{\n              'evcRecording' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"NO\">{{\n              'no' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"ORIGIN\">{{\n              'origin' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'region' | translate | uppercase }}</mat-label>\n\n          <mat-select formControlName=\"region\">\n            <mat-option value=\"ALL\">{{\n              'all' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"AMERICA\">AMERICA</mat-option>\n\n            <mat-option value=\"ASIA\">ASIA</mat-option>\n\n            <mat-option value=\"EUROPE\">EUROPE</mat-option>\n\n            <mat-option value=\"FIBER\">FIBER</mat-option>\n\n            <mat-option value=\"OTHER\">{{\n              'other' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-checkbox\n          color=\"primary\"\n          labelPosition=\"before\"\n          formControlName=\"displayOnReport\"\n          >{{ 'displayOnReport' | translate }}</mat-checkbox\n        >\n        <mat-form-field>\n          <mat-label>{{\n            'serviceAffecting' | translate | uppercase\n          }}</mat-label>\n\n          <mat-select\n            required\n            formControlName=\"serviceAffecting\">\n            <mat-option value=\"NO\">{{\n              'no' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"UNKNOWN\">{{\n              'unknown' | translate | uppercase\n            }}</mat-option>\n\n            <mat-option value=\"YES\">{{\n              'yes' | translate | uppercase\n            }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"last-input\">\n          <mat-label>{{ 'subject' | translate | uppercase }}</mat-label>\n          <input\n            formControlName=\"subject\"\n            matInput />\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"right-buttons-container\">\n      <div class=\"buttons\">\n        <button\n          mat-mini-fab\n          id=\"button-save\"\n          [matTooltip]=\"'save' | translate\"\n          [class.spinner]=\"isSaving\"\n          [disabled]=\"isSaving\"\n          [matTooltipDisabled]=\"isSaving\"\n          type=\"submit\"\n          color=\"primary\">\n          <mat-icon>save</mat-icon>\n        </button>\n\n        <button\n          id=\"button-send-mail\"\n          type=\"button\"\n          mat-mini-fab\n          [matTooltip]=\"'resendNotification' | translate\"\n          [matTooltipDisabled]=\"!isEditMode\"\n          [disabled]=\"!isEditMode\"\n          color=\"primary\">\n          <mat-icon>mail</mat-icon>\n        </button>\n\n        <button\n          id=\"button-reload-tab\"\n          type=\"button\"\n          mat-mini-fab\n          [matTooltip]=\"'reload' | translate\"\n          [matTooltipDisabled]=\"!isEditMode\"\n          [disabled]=\"!isEditMode\"\n          color=\"primary\">\n          <mat-icon>sync</mat-icon>\n        </button>\n\n        <button\n          type=\"button\"\n          mat-mini-fab\n          [matTooltip]=\"'delete' | translate\"\n          [matTooltipDisabled]=\"!isEditMode\"\n          [disabled]=\"!isEditMode\"\n          color=\"primary\">\n          <mat-icon>delete</mat-icon>\n        </button>\n\n        <button\n          id=\"button-close-tab\"\n          type=\"button\"\n          mat-mini-fab\n          [matTooltip]=\"'close' | translate\"\n          (click)=\"closePage()\"\n          color=\"primary\">\n          <mat-icon>close</mat-icon>\n        </button>\n\n        <button\n          id=\"button-share\"\n          type=\"button\"\n          *ngIf=\"isEditMode\"\n          mat-mini-fab\n          [matTooltip]=\"'share' | translate\"\n          color=\"primary\">\n          <mat-icon>share</mat-icon>\n        </button>\n      </div>\n\n      <span\n        [matTooltip]=\"'creationUser' | translate\"\n        class=\"last-edit\">\n        <mat-icon class=\"icon\">border_color</mat-icon>legrand{{ '@' }}GVA.EBU.CH\n        - 15/09/2023 - 09:12</span\n      >\n    </div>\n    <!-- //////////////////////////////////////////////// -->\n  </div>\n  <div class=\"incident-form__body\">\n    <div class=\"body-selectors\">\n      <span\n        [matTooltip]=\"'displayDashboard' | translate\"\n        (click)=\"body = 'home'\"\n        class=\"selector\"\n        [ngClass]=\"{ active: body === 'home' }\"\n        ><mat-icon>home</mat-icon></span\n      >\n      <span\n        [matTooltip]=\"'displayNotes' | translate\"\n        [matTooltipDisabled]=\"true\"\n        class=\"selector disabled\"\n        [ngClass]=\"{ active: body === 'notes' }\"\n        ><mat-icon>assignment</mat-icon></span\n      >\n      <span\n        [matTooltip]=\"'displayAttachments' | translate\"\n        [matTooltipDisabled]=\"true\"\n        class=\"selector disabled\"\n        [ngClass]=\"{ active: body === 'attachment' }\"\n        ><mat-icon>attachment</mat-icon></span\n      >\n      <span\n        [matTooltip]=\"'auditLogs' | translate\"\n        class=\"selector\"\n        (click)=\"body = 'history'\"\n        [ngClass]=\"{ active: body === 'history' }\"\n        ><mat-icon>history</mat-icon></span\n      >\n    </div>\n\n    <div class=\"body-container\">\n      <app-incident-summary\n        [hidden]=\"body !== 'home'\"\n        formGroupName=\"summary\">\n      </app-incident-summary>\n\n      <app-incident-attachments [hidden]=\"body !== 'attachment'\">\n      </app-incident-attachments>\n\n      <app-incident-update-history\n        *ngIf=\"body === 'history'\"\n        [incidentId]=\"65538\">\n      </app-incident-update-history>\n    </div>\n  </div>\n</form>\n","/*\n * Public API Surface of http-error\n */\n\nexport * from './lib/dialog/http-error-dialog.component';\nexport * from './lib/http-error.component';\nexport * from './lib/http-error.module';\nexport * from './lib/interceptor/http-error.interceptor';\nexport * from './lib/service/http-error.service';\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { appRoutes } from '@constants/app-routes';\nimport { EntityType, propertiesByEntityType } from '@constants/entities';\nimport { NavigationHistoryService } from '@services/navigation-history/navigation-history.service';\nimport {\n  ConfirmationDialogComponent,\n  ConfirmationDialogData,\n} from '@shared/components/confirmation-dialog/confirmation-dialog.component';\nimport { v4 as uuid } from 'uuid';\n\nexport interface TabDetail {\n  id: string;\n  label: string;\n  component: any;\n  isEdited: boolean;\n  tabRoute: string[];\n  contextData?: any;\n  entity?: EntityType;\n  color?: string;\n  icon?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabsService {\n  constructor(\n    private readonly navigationHistoryService: NavigationHistoryService,\n    private readonly dialog: MatDialog,\n    private readonly router: Router\n  ) {\n    this.navigationHistoryService.navigationRequested$.subscribe(\n      ({ tabDetails }) => {\n        const { id, component, entity, contextData, tabRoute } = tabDetails;\n\n        this.addUniqueTab(id, component, entity, contextData, tabRoute);\n      }\n    );\n  }\n\n  private _activeTabIndex = 0;\n\n  get activeTabIndex() {\n    return this._activeTabIndex;\n  }\n\n  set activeTabIndex(newIndex: number) {\n    if (newIndex < 0 || newIndex >= this._openedTabs.length) {\n      return;\n    }\n\n    this._activeTabIndex = newIndex;\n  }\n\n  private _activeTabId = '';\n  private _openedTabs: TabDetail[] = [];\n\n  public get activeTabId(): string {\n    return this._activeTabId;\n  }\n\n  public set activeTabId(newId: string) {\n    if (this._openedTabs.some((tab) => tab.id === newId)) {\n      this._activeTabId = newId;\n    }\n  }\n\n  public get openedTabs(): TabDetail[] {\n    return this._openedTabs;\n  }\n\n  /**\n   * This method is used to open an entity search tab which could be\n   * duplicated\n   * @param label Tab label to be displayed\n   * @param component Component to be rendered inside the tab\n   * @param entity Used to retrieve tab icon and bg-color.\n   * @param contextData (Optional) Tab data that want to be stored as long as tab exists.\n   * @param route (Optional) Additional route segments appended between entity and id\n   *\n   */\n  public addTab(\n    label: string,\n    component: ComponentType<any>,\n    entity: EntityType,\n    contextData?: any,\n    route?: string[]\n  ): void {\n    const id = uuid();\n    let icon, color;\n    const tabRoute = [entity, ...(route ?? []), id];\n\n    const entityProperties = propertiesByEntityType.get(entity)!;\n    icon = entityProperties.icon;\n    color = entityProperties.color;\n\n    const tabDetails: TabDetail = {\n      id,\n      entity,\n      component,\n      contextData,\n      tabRoute,\n      label,\n      isEdited: false,\n      color,\n      icon,\n    };\n    const newLength = this.openedTabs.push(tabDetails);\n\n    this.updateActiveTab(newLength - 1);\n  }\n\n  /**\n   * This method is used to open an a tab which could not be duplicated\n   * @param tabId A unique identifier for the tab (usually entity id)\n   * @param component Component to be rendered inside the tab\n   * @param entity (Optional) Used to persist history and retrieve tab icon and bg-color.\n   * @param contextData (Optional) Tab data that want to be stored as long as tab exists.\n   * @param route (Optional) Route segment to identify the tab, otherwise, tabId.\n   */\n  public addUniqueTab(\n    tabId: string,\n    component: ComponentType<any>,\n    entity?: EntityType,\n    contextData?: any,\n    route?: string[]\n  ): void {\n    if (this._openedTabs.some((tab) => tab.id === tabId)) {\n      const reopenTabIndex = this.openedTabs.findIndex(\n        (tab) => tab.id === tabId\n      );\n\n      this.updateActiveTab(reopenTabIndex);\n\n      return;\n    }\n\n    const tabRoute = route ?? [tabId];\n\n    let entityProperties = { color: '', icon: '' };\n\n    if (entity) {\n      entityProperties = propertiesByEntityType.get(entity)!;\n    }\n\n    const { color, icon } = entityProperties;\n\n    const tabDetails: TabDetail = {\n      id: tabId,\n      entity,\n      component,\n      contextData,\n      tabRoute,\n      label: tabId,\n      isEdited: false,\n      color,\n      icon,\n    };\n\n    const newLength = this.openedTabs.push(tabDetails);\n\n    this.navigationHistoryService.addNavigationHistory(\n      entity ?? EntityType.TOOLS,\n      tabId,\n      tabDetails\n    );\n\n    this.updateActiveTab(newLength - 1);\n  }\n\n  /**\n   * This method is used remove a tab with a given Id\n   * @param tabId A unique identifier for the tab\n   * @param entity Entity type. Used to store navigation history\n   */\n  public async removeTab(tabIdToRemove: string): Promise<void> {\n    const removeTabIndex = this.openedTabs.findIndex(\n      (tab) => tab.id === tabIdToRemove\n    );\n\n    if (removeTabIndex === -1) {\n      return;\n    }\n\n    if (this.openedTabs[removeTabIndex].isEdited) {\n      const userConfirmedDiscard = await this._openDiscardDialog();\n\n      if (!userConfirmedDiscard) {\n        return;\n      }\n    }\n\n    const tabCount = this.openedTabs.length;\n\n    if (tabCount === 1) {\n      this._openedTabs = [];\n      this._activeTabId = '';\n\n      this.router.navigate([appRoutes.HOME]);\n\n      return;\n    }\n\n    if (tabIdToRemove === this.activeTabId) {\n      let tabIdToFocus: string;\n\n      if (removeTabIndex === tabCount - 1) {\n        tabIdToFocus = this._openedTabs[removeTabIndex - 1].id;\n      } else {\n        tabIdToFocus = this._openedTabs[removeTabIndex + 1].id;\n      }\n\n      this._openedTabs = this._openedTabs.filter(\n        (tab) => tab.id !== tabIdToRemove\n      );\n\n      const index = this.openedTabs.findIndex((tab) => tab.id === tabIdToFocus);\n\n      this.updateActiveTab(index);\n\n      return;\n    }\n  }\n\n  /**\n   * Update active tab state by a given index\n   * @param newTabIndex tab index to set as active\n   */\n  public updateActiveTab(newTabIndex: number) {\n    // This first navigation to a base path is not visible to the user but\n    // allow us to re-render a component when navigating between different tabs\n    // with same content.\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this._activeTabId = this.openedTabs[newTabIndex].id;\n      this._activeTabIndex = newTabIndex;\n      this.router.navigate(this.openedTabs[newTabIndex].tabRoute);\n    });\n  }\n\n  public setTabEditing(tabId: string, editValue: boolean): void {\n    const tabToUpdate = this._openedTabs.find((tab) => tab.id === tabId);\n\n    if (tabToUpdate) {\n      tabToUpdate.isEdited = editValue;\n    }\n  }\n\n  public getActiveTabData(): TabDetail {\n    return this.openedTabs.find((tab) => tab.id === this._activeTabId)!;\n  }\n\n  public setActiveTabContext(contextData: any): TabDetail {\n    const tabToUpdate = this.openedTabs.find(\n      (tab) => tab.id === this._activeTabId\n    );\n\n    if (tabToUpdate) {\n      tabToUpdate.contextData = contextData;\n    }\n\n    return tabToUpdate!;\n  }\n\n  public patchActiveTabContext(contextData: any): TabDetail {\n    const tabToUpdate = this.openedTabs.find(\n      (tab) => tab.id === this._activeTabId\n    );\n\n    if (tabToUpdate) {\n      tabToUpdate.contextData = { ...tabToUpdate.contextData, ...contextData };\n    }\n\n    return tabToUpdate!;\n  }\n\n  private _openDiscardDialog(): Promise<boolean> {\n    const confirmationDialogRef = this.dialog.open(\n      ConfirmationDialogComponent,\n      {\n        width: '500px',\n        data: {\n          titleTranslateKey: 'confirmation',\n          contentTranslateKey: 'modificationsLostContinue',\n          titleIcon: 'info',\n        } as ConfirmationDialogData,\n      }\n    );\n\n    return confirmationDialogRef.afterClosed().toPromise();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-clock',\n  templateUrl: './clock.component.html',\n  styleUrls: ['./clock.component.scss'],\n})\nexport class ClockComponent implements OnInit {\n  @Input() showDate: boolean = false;\n  @Input() showSeconds: boolean = false;\n  @Input() timeZoneLabel: string = 'UTC';\n  @Input() clockTimezone: string = 'UTC';\n\n  clockFormat: string = 'HH:mm';\n\n  ngOnInit(): void {\n    if (this.showDate) {\n      this.clockFormat = `dd/MM/yyyy ${this.clockFormat}`;\n    }\n    if (this.showSeconds) {\n      this.clockFormat = `${this.clockFormat}:ss`;\n    }\n  }\n\n  private _time$: Observable<Date> = timer(0, 1000).pipe(\n    map(() => new Date(Date.now())),\n    shareReplay(1)\n  );\n\n  get time() {\n    return this._time$;\n  }\n}\n","<span class=\"clock\">\n  {{ time | async | date : clockFormat : clockTimezone }} {{ timeZoneLabel }}\n</span>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Role } from '@constants/app-roles';\nimport { RolesService } from '@services/roles/roles.service';\nimport { UsersService } from '@services/users/users.service';\nimport { FieldConfiguration } from 'projects/dynamic-form/src/lib/models/models';\nimport { Subscription, forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-change-roles-dialog',\n  templateUrl: './change-roles-dialog.component.html',\n  styleUrls: ['./change-roles-dialog.component.scss'],\n})\nexport class ChangeRolesDialogComponent implements OnInit, OnDestroy {\n  selected: Role[] = [];\n  forkJoinSubscription: Subscription = new Subscription();\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<ChangeRolesDialogComponent>,\n    private readonly rolesService: RolesService,\n    private readonly usersService: UsersService\n  ) {}\n\n  fields!: FieldConfiguration[];\n\n  formChanges(form: FormGroupDirective) {\n    form.control.get('roles')?.valueChanges.subscribe((value) => {\n      this.selected = value;\n    });\n  }\n\n  ngOnInit(): void {\n    this.forkJoinSubscription = forkJoin([\n      this.rolesService.getAllRoles(),\n      this.usersService.getCurrentUserAuthentication(),\n    ]).subscribe(([roles, currentUserPermissions]) => {\n      const newRoles: any = roles.map((rol) => rol);\n\n      const rolesWithPrefix = [\n        newRoles[0].administrators,\n        newRoles[0].users,\n        newRoles[0].resource_manager,\n        newRoles[0].pricing_admin,\n        newRoles[0].viewer,\n        newRoles[0].billing_admin,\n      ];\n\n      const rolesWithoutPrefix = rolesWithPrefix.map((role) => {\n        const roleName = role\n          .replace('ROLE_', '')\n          .replace(/_/g, ' ')\n          .toLowerCase();\n        return roleName.charAt(0).toUpperCase() + roleName.slice(1);\n      });\n\n      this.fields = [\n        {\n          type: 'select',\n          options: rolesWithoutPrefix,\n          name: 'roles',\n          label: 'Roles',\n          multiple: true,\n          value: currentUserPermissions.roles,\n        },\n      ];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.forkJoinSubscription.unsubscribe();\n  }\n\n  discardChanges(): void {\n    this.dialogRef.close();\n  }\n\n  saveChanges(): void {\n    this.usersService.updateCurrentUserRoles(this.selected).subscribe(() => {\n      this.dialogRef.close();\n    });\n  }\n}\n","<div class=\"change-roles-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'changeRoles' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <talan-dynamic-form\n    [fields]=\"fields\"\n    (changes)=\"formChanges($event)\">\n  </talan-dynamic-form>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      (click)=\"discardChanges()\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!selected || selected.length === 0\"\n      cdkFocusInitial\n      (click)=\"saveChanges()\">\n      {{ 'send' | translate }}\n    </button>\n  </div>\n</div>\n","import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { getReasonPhrase } from 'http-status-codes';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { HttpErrorService } from '../service/http-error.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private httpErrorService: HttpErrorService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      retry(this.httpErrorService.getHttpRetry()),\n      catchError((error) => {\n        this.httpErrorService.add(this.getServerErrorMessage(error));\n\n        return throwError(error);\n      })\n    );\n  }\n\n  private getServerErrorMessage(error: HttpErrorResponse): string {\n    try {\n      return `${error.status} - ${getReasonPhrase(error.status)}: ${\n        error.message\n      }`;\n    } catch (err) {\n      return `${error.message}`;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { AttachmentDTO } from '@models/attachment-dto.model';\nimport { SaveAttachmentResponseDTO } from '@models/save-attachment-response-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AttachmentsService {\n  private _endpointURL = '/attachments';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getAttachmentsByEntityId(\n    entity: EntityType,\n    entityId: number\n  ): Observable<AttachmentDTO[]> {\n    return this.apiService.read<AttachmentDTO[]>(\n      `${this._endpointURL}/searchAttachFileList?entityType=${entity}&entityId=${entityId}`\n    );\n  }\n\n  saveAttachmentsByEntityId(\n    base64File: string,\n    fileName: string,\n    entity: EntityType,\n    entityId: number\n  ): Observable<SaveAttachmentResponseDTO> {\n    return this.apiService.create<SaveAttachmentResponseDTO>(\n      `${this._endpointURL}/attachFile`,\n      {\n        body: {\n          inputFile: base64File,\n          attachment: null,\n          title: fileName,\n          entityId: entityId,\n          entityType: entity.toUpperCase(),\n        },\n      }\n    );\n  }\n}\n","import { TabsService } from '@services/tabs/tabs.service';\nimport { CreateEditIncidentComponent } from 'src/app/pages/create-edit-incident/create-edit-incident.component';\nimport {\n  EntityType,\n  INCIDENT_PROPERTIES,\n} from '../../../../../constants/entities';\nimport { NeosMenuItem } from '../../menu/menu.component';\n\nexport const getAddMenu = (tabsService: TabsService): NeosMenuItem[] => [\n  // {\n  //   icon: CUSTOMER_ORDER_PROPERTIES.icon,\n  //   iconColor: CUSTOMER_ORDER_PROPERTIES.color,\n  //   labelTranslateKey: 'newCustomerOrder',\n  // },\n  // {\n  //   icon: 'file_download',\n  //   labelTranslateKey: 'newParticipations',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: TRANSMISSION_PROPERTIES.icon,\n  //   iconColor: TRANSMISSION_PROPERTIES.color,\n  //   labelTranslateKey: 'newTransmission',\n  // },\n  // {\n  //   icon: 'inventory_2',\n  //   iconColor: '#a75e5c',\n  //   labelTranslateKey: 'newNonTransmission',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: EVENT_PROPERTIES.icon,\n  //   iconColor: EVENT_PROPERTIES.color,\n  //   labelTranslateKey: 'newEvent',\n  // },\n  // {\n  //   icon: 'emoji_events',\n  //   iconColor: '#d78f00',\n  //   labelTranslateKey: 'newParentEvent',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: CITY_PROPERTIES.icon,\n  //   iconColor: CITY_PROPERTIES.color,\n  //   labelTranslateKey: 'newCity',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: RESOURCE_PROPERTIES.icon,\n  //   iconColor: RESOURCE_PROPERTIES.color,\n  //   labelTranslateKey: 'newResource',\n  // },\n  // {\n  //   icon: RESOURCE_PROFILE_PROPERTIES.icon,\n  //   iconColor: RESOURCE_PROFILE_PROPERTIES.color,\n  //   labelTranslateKey: 'newResourceProfile',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: CONTRACT_PROPERTIES.icon,\n  //   iconColor: CONTRACT_PROPERTIES.color,\n  //   labelTranslateKey: 'newContract',\n  // },\n  // {\n  //   icon: RATE_COST_CARD_PROPERTIES.icon,\n  //   iconColor: RATE_COST_CARD_PROPERTIES.color,\n  //   labelTranslateKey: 'newRateCard',\n  // },\n  // {\n  //   icon: RATE_COST_CARD_PROPERTIES.icon,\n  //   iconColor: RATE_COST_CARD_PROPERTIES.color,\n  //   labelTranslateKey: 'newRateCardOld',\n  // },\n  // MenuDivider,\n\n  {\n    icon: INCIDENT_PROPERTIES.icon,\n    iconColor: INCIDENT_PROPERTIES.color,\n    labelTranslateKey: 'New Incident',\n    callback: () => {\n      tabsService.addTab(\n        'newIncident',\n        CreateEditIncidentComponent,\n        EntityType.INCIDENT\n      );\n    },\n  },\n  // MenuDivider,\n  // {\n  //   icon: RATE_COST_CARD_PROPERTIES.icon,\n  //   iconColor: RATE_COST_CARD_PROPERTIES.color,\n  //   labelTranslateKey: 'newRateCardOld',\n  // },\n];\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CityCombobox,\n  Country,\n  DisplayedColumns,\n  FinancialStatusOption,\n  OrganizationSearchResultDTO,\n  SearchOrganizationDataSource,\n  SearchOrganizationFormValue,\n  TypeOption,\n  YesNoOption,\n} from '@models/models';\nimport { OrganizationsService } from '@services/organizations/organizations.service';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { filterObjectArrayByProperty } from '@shared/utils/helpers';\nimport { Subject } from 'rxjs';\nimport { debounceTime, map, takeUntil, tap } from 'rxjs/operators';\nimport { ColumnsConfiguration } from 'table-generator';\n\n@Component({\n  selector: 'app-search-organization',\n  templateUrl: './search-organization.component.html',\n  styleUrls: ['./search-organization.component.scss'],\n})\nexport class SearchOrganizationComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  form!: FormGroup;\n\n  displayedColumns = [\n    DisplayedColumns.Code,\n    DisplayedColumns.Name,\n    DisplayedColumns.Type,\n    DisplayedColumns.Country,\n    DisplayedColumns.City,\n    DisplayedColumns.financialStatusType,\n    DisplayedColumns.Customer,\n    DisplayedColumns.Provider,\n    DisplayedColumns.Active,\n    DisplayedColumns.DefaultPhone,\n    DisplayedColumns.DefaultMail,\n    DisplayedColumns.DefaultSystem,\n    DisplayedColumns.ColumnsSelector,\n  ];\n\n  configuration: ColumnsConfiguration = {\n    code: {\n      translateKey: DisplayedColumns.Code,\n      type: 'string',\n    },\n    name: {\n      translateKey: DisplayedColumns.Name,\n      type: 'number',\n      width: '250px',\n    },\n\n    type: {\n      translateKey: DisplayedColumns.Type,\n      type: 'string',\n    },\n    country: {\n      translateKey: DisplayedColumns.Country,\n      type: 'string',\n    },\n    city: {\n      translateKey: DisplayedColumns.City,\n      type: 'string',\n    },\n    financialStatusType: {\n      translateKey: DisplayedColumns.financialStatusType,\n      type: 'string',\n    },\n    customer: {\n      translateKey: DisplayedColumns.Customer,\n      type: 'string',\n    },\n    provider: {\n      translateKey: DisplayedColumns.Provider,\n      type: 'string',\n    },\n    active: {\n      translateKey: DisplayedColumns.Active,\n      type: 'string',\n    },\n    defaultPhone: {\n      translateKey: DisplayedColumns.DefaultPhone,\n      type: 'string',\n    },\n    defaultMail: {\n      translateKey: DisplayedColumns.DefaultMail,\n      type: 'string',\n    },\n    defaultSystem: {\n      translateKey: DisplayedColumns.DefaultSystem,\n      type: 'string',\n    },\n  };\n\n  typeOptions: TypeOption[] = [\n    TypeOption.MEMB,\n    TypeOption.NMEMB,\n    TypeOption.NA,\n    TypeOption.APPP,\n    TypeOption.ASSM,\n  ];\n\n  financialStatusOptions: FinancialStatusOption[] = [\n    FinancialStatusOption.BL,\n    FinancialStatusOption.PP,\n    FinancialStatusOption.OK,\n  ];\n  yesNoOption = YesNoOption;\n  data!: SearchOrganizationDataSource[];\n  filteredCountries!: Country[];\n  filteredCities!: CityCombobox[];\n  cities: CityCombobox[] = [];\n  countries: Country[] = [];\n\n  private _onDestroy$ = new Subject<void>();\n  private _initialFormValue = {\n    code: '',\n    name: '',\n    type: [],\n    country: [],\n    defaultCity: [],\n    financialStatusType: [],\n    isCustomer: [],\n    isProvider: [],\n    isActive: [],\n    isBilledCurrencyLocked: [],\n    isPoRefMandatory: [],\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private tabsService: TabsService,\n    public route: ActivatedRoute,\n    private organizationsService: OrganizationsService\n  ) {\n    this.form = this.formBuilder.group(this._initialFormValue);\n  }\n\n  ngOnInit(): void {\n    const masterData = this.route.snapshot.data.masterDataResolver;\n    this.cities = masterData.cities;\n    this.countries = masterData.countries;\n\n    this.form\n      .get('defaultCity')!\n      .valueChanges.pipe(\n        map((inputData) =>\n          filterObjectArrayByProperty<CityCombobox>(\n            inputData,\n            this.cities,\n            'name'\n          )\n        ),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((value) => {\n        this.filteredCities = value;\n      });\n\n    this.form\n      .get('country')!\n      .valueChanges.pipe(\n        map((inputData) =>\n          filterObjectArrayByProperty<Country>(\n            inputData,\n            this.countries,\n            'name'\n          )\n        ),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((value) => {\n        this.filteredCountries = value;\n      });\n  }\n\n  ngAfterViewInit(): void {\n    const tabContext = this.tabsService.getActiveTabData().contextData;\n    if (tabContext) {\n      if (tabContext.searchOrganizationForm) {\n        this.form.patchValue(tabContext.searchOrganizationForm);\n      }\n\n      if (tabContext.results) {\n        this.data = tabContext.results;\n      }\n    }\n\n    this.form.valueChanges\n      .pipe(\n        debounceTime(500),\n        tap(() => {\n          this.tabsService.patchActiveTabContext({\n            searchOrganizationForm: this.form.value,\n          });\n        }),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe();\n  }\n\n  displaySelectName(object: Country | CityCombobox): string {\n    return object && object.name ? object.name : '';\n  }\n\n  search() {\n    const formValue: SearchOrganizationFormValue = this.form.value;\n\n    this.organizationsService\n      .searchOrganization(formValue)\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((organizations: OrganizationSearchResultDTO[]) => {\n        const tableData = organizations.map(\n          (org: OrganizationSearchResultDTO) => ({\n            id: org.id,\n            version: org.version,\n            code: org.code,\n            name: org.name,\n            financialStatusType: org.financialStatusType,\n            type: org.type,\n            customer: org.customer,\n            provider: org.provider,\n            active: org.active,\n            defaultPhone: org.defaultPhone,\n            poRefMandatory: org.poRefMandatory,\n            billedCurrencyLocked: org.billedCurrencyLocked,\n            country:\n              typeof org.country === 'string' ? org.country : org.country?.name,\n            city:\n              typeof org.defaultCity === 'string'\n                ? org.defaultCity\n                : org.defaultCity?.name,\n            defaultSystem: org.defaultSystem?.label\n              ? org.defaultSystem?.label\n              : '',\n            defaultMail: org.defaultMail,\n          })\n        );\n\n        this.data = tableData;\n\n        this.tabsService.patchActiveTabContext({\n          results: tableData,\n        });\n      });\n  }\n\n  clear(event: Event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.form.reset(this._initialFormValue);\n  }\n\n  closeTab() {\n    this.tabsService.removeTab(this.tabsService.activeTabId);\n  }\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n}\n","<form\n  [formGroup]=\"form\"\n  (ngSubmit)=\"search()\">\n  <mat-accordion multi>\n    <mat-expansion-panel\n      displayMode=\"flat\"\n      togglePosition=\"before\"\n      [expanded]=\"true\">\n      <mat-expansion-panel-header>\n        <div class=\"expansion-panel-header\">\n          <mat-panel-title>\n            <div class=\"form-title\">\n              <span>{{ 'searchCriteria' | translate }}</span>\n            </div>\n          </mat-panel-title>\n\n          <mat-panel-description>\n            <div class=\"button-wrapper\">\n              <button\n                type=\"submit\"\n                (click)=\"$event.stopPropagation()\"\n                [matTooltip]=\"'search' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>search</mat-icon>\n              </button>\n              <button\n                type=\"button\"\n                (click)=\"clear($event)\"\n                [matTooltip]=\"'eraseForm' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>search_off</mat-icon>\n              </button>\n              <button\n                type=\"button\"\n                (click)=\"closeTab()\"\n                [matTooltip]=\"'close' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>close</mat-icon>\n              </button>\n            </div>\n          </mat-panel-description>\n        </div>\n      </mat-expansion-panel-header>\n\n      <div class=\"row\">\n        <mat-form-field class=\"search-organization-field-large\">\n          <mat-label>{{ 'code' | translate }}</mat-label>\n\n          <input\n            matInput\n            type=\"text\"\n            id=\"code\"\n            name=\"code\"\n            formControlName=\"code\"\n            matInput />\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-large\">\n          <mat-label>{{ 'name' | translate }}</mat-label>\n\n          <input\n            matInput\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            formControlName=\"name\"\n            matInput />\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'type' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"type\"\n            name=\"type\"\n            formControlName=\"type\">\n            <mat-option\n              *ngFor=\"let type of typeOptions\"\n              [value]=\"type\">\n              {{ type }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field class=\"search-organization-field-large\">\n          <mat-label>{{ 'country' | translate }}</mat-label>\n\n          <input\n            matInput\n            formControlName=\"country\"\n            [matAutocomplete]=\"autoCountry\" />\n\n          <mat-autocomplete\n            #autoCountry=\"matAutocomplete\"\n            [displayWith]=\"displaySelectName\">\n            <mat-option\n              *ngFor=\"let country of filteredCountries\"\n              [value]=\"country\">\n              {{ country.code }} - {{ country.name }}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-large\">\n          <mat-label>{{ 'city' | translate }}</mat-label>\n\n          <input\n            matInput\n            formControlName=\"defaultCity\"\n            [matAutocomplete]=\"autoCity\" />\n\n          <mat-autocomplete\n            #autoCity=\"matAutocomplete\"\n            [displayWith]=\"displaySelectName\">\n            <mat-option\n              *ngFor=\"let city of filteredCities\"\n              [value]=\"city\">\n              {{ city.code }} - {{ city.name }}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'financialStatusType' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"financialStatusType\"\n            name=\"financialStatusType\"\n            formControlName=\"financialStatusType\">\n            <mat-option\n              *ngFor=\"let option of financialStatusOptions\"\n              [value]=\"option\">\n              {{ option }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'customer' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"isCustomer\"\n            name=\"isCustomer\"\n            formControlName=\"isCustomer\">\n            <mat-option\n              *ngFor=\"let option of yesNoOption | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'provider' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"isProvider\"\n            name=\"isProvider\"\n            formControlName=\"isProvider\">\n            <mat-option\n              *ngFor=\"let option of yesNoOption | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'active' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"isActive\"\n            name=\"isActive\"\n            formControlName=\"isActive\">\n            <mat-option\n              *ngFor=\"let option of yesNoOption | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'billedCurrencyLocked' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"billedCurrencyLocked\"\n            name=\"billedCurrencyLocked\"\n            formControlName=\"isBilledCurrencyLocked\">\n            <mat-option\n              *ngFor=\"let option of yesNoOption | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"search-organization-field-medium\">\n          <mat-label>{{ 'poRefMandatory' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"poRefMandatory\"\n            name=\"poRefMandatory\"\n            formControlName=\"isPoRefMandatory\">\n            <mat-option\n              *ngFor=\"let option of yesNoOption | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</form>\n\n<talan-table-generator\n  [data]=\"data || []\"\n  [allColumns]=\"displayedColumns\"\n  [columnsConfiguration]=\"configuration\">\n</talan-table-generator>\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SelectConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent {\n  private _field!: SelectConfiguration;\n\n  get field(): SelectConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: SelectConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n\n  /**\n   * Default compare function for flat array\n   *\n   * Function to compare the option values with the selected values. The first argument is a value from an option. The second is a value from the selection. A boolean should be returned.\n   */\n  compareFn(option: any, selection: any): boolean {\n    return this.field && this.field.compareFn\n      ? this.field.compareFn(option, selection)\n      : option === selection;\n  }\n\n  /**\n   * Default display function for flat array\n   */\n  displayWith(option: string): string {\n    return this.field.displayWith ? this.field.displayWith(option) : option;\n  }\n}\n","<mat-form-field\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\">\n  <!-- If 'field.label' doesn't exist mat-select use 'field.placeholder' as 'label'  -->\n  <mat-label *ngIf=\"field.label\">{{ field.label }}</mat-label>\n\n  <!-- Show model difference between MultipleSelectConfiguration & SimpleSelectConfiguration -->\n  <mat-select\n    [formControl]=\"control\"\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\"\n    [multiple]=\"field.multiple\"\n    [compareWith]=\"compareFn\">\n    <mat-option\n      *ngFor=\"let option of field.options\"\n      [value]=\"option\">\n      {{ displayWith(option) }}\n    </mat-option>\n  </mat-select>\n\n  <mat-hint\n    *ngIf=\"field.hintStart\"\n    align=\"start\"\n    >{{ field.hintStart }}</mat-hint\n  >\n\n  <mat-hint\n    *ngIf=\"field.hintEnd\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n\n  <mat-error\n    *ngIf=\"control.invalid\"\n    [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n</mat-form-field>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DomainItem } from '@models/domain-item.model';\nimport { DomainParameter } from '@models/domain-parameter.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport {\n  ColumnsConfiguration,\n  DataColumnName,\n  NoDataColumnName,\n  RowActionEvent,\n  RowEvent,\n  TableOptions,\n} from 'table-generator';\nimport {\n  DomainParameterDialogComponent,\n  DomainParameterDialogData,\n} from '../domain-parameter-dialog/domain-parameter-dialog.component';\nimport {\n  DomainParameterItemDialogComponent,\n  DomainParameterItemDialogData,\n} from '../domain-parameter-item-dialog/domain-parameter-item-dialog.component';\n\nexport enum Actions {\n  ADD_RECORD = 'add_record',\n  EDIT_RECORD = 'edit_record',\n  REMOVE_RECORD = 'remove_record',\n}\n\nexport enum TableId {\n  MAIN = 'main',\n  ITEMS = 'items',\n}\n\n@Component({\n  selector: 'app-domain-parameters',\n  templateUrl: './domain-parameters.component.html',\n  styleUrls: ['./domain-parameters.component.scss'],\n})\nexport class DomainParametersComponent implements OnDestroy {\n  TableId = TableId;\n  @Input() data!: DomainParameter[];\n  @Output() onDataChanged = new EventEmitter<DomainParameter[]>();\n\n  private _onDestroy$ = new Subject<void>();\n  selectedDomainParameter: DomainParameter | null = null;\n\n  tableActions = [\n    {\n      id: Actions.ADD_RECORD,\n      icon: 'add',\n      translateKey: 'add',\n      color: 'primary',\n      disabled: false,\n    },\n  ];\n\n  rowActions = [\n    {\n      id: Actions.REMOVE_RECORD,\n      icon: 'delete',\n      translateKey: 'delete',\n      color: 'warn',\n    },\n  ];\n\n  mainTableColumns: DataColumnName[] = [\n    'groupCode',\n    'code',\n    'label',\n    'externalLabel',\n    'domainStatus',\n    NoDataColumnName.columnsSelector,\n  ];\n\n  mainTableOptions: Partial<TableOptions> = {\n    showResult: false,\n    multipleRowsSelected: false,\n  };\n\n  mainTableConfiguration: ColumnsConfiguration = {\n    groupCode: {\n      translateKey: 'groupCode',\n      type: 'string',\n    },\n    code: {\n      translateKey: 'code',\n      type: 'string',\n    },\n    label: {\n      translateKey: 'label',\n      type: 'string',\n    },\n    externalLabel: {\n      translateKey: 'externalLabel',\n      type: 'string',\n    },\n    domainStatus: {\n      translateKey: 'domainStatus',\n      type: 'string',\n    },\n  };\n\n  itemsTableColumns: DataColumnName[] = [\n    'sequence',\n    'code',\n    'isoCode',\n    'externalCode',\n    'label',\n    'extView',\n    'externalLabel',\n    'status',\n    NoDataColumnName.columnsSelector,\n  ];\n\n  itemsTableOptions: Partial<TableOptions> = {\n    showResult: false,\n    multipleRowsSelected: false,\n    showFilter: false,\n  };\n\n  itemsTableConfiguration: ColumnsConfiguration = {\n    sequence: {\n      translateKey: 'sequence',\n      type: 'number',\n    },\n    code: {\n      translateKey: 'code',\n      type: 'string',\n    },\n    isoCode: {\n      translateKey: 'isoCode',\n      type: 'string',\n    },\n    externalCode: {\n      translateKey: 'externalCode',\n      type: 'string',\n    },\n    label: {\n      translateKey: 'label',\n      type: 'string',\n    },\n    externalLabel: {\n      translateKey: 'externalLabel',\n      type: 'string',\n    },\n    extView: {\n      translateKey: 'published',\n      type: 'boolean',\n    },\n    status: {\n      translateKey: 'status',\n      type: 'string',\n    },\n  };\n\n  constructor(private readonly dialog: MatDialog) {}\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  onRowClicked({ row }: RowEvent<DomainParameter>) {\n    this.selectedDomainParameter = null;\n\n    if (row) {\n      this.selectedDomainParameter = row;\n    }\n  }\n\n  async onRowDoubleClicked(\n    { row }: RowEvent<DomainParameter> | RowEvent<DomainItem>,\n    tableId: TableId\n  ) {\n    if (tableId === TableId.MAIN) {\n      const editedIndex = this.data.findIndex(\n        (domainParam) => domainParam.id === row.id\n      );\n\n      const edited = await this.openParameterDialog(row as DomainParameter);\n\n      if (edited) {\n        this.data[editedIndex] = edited;\n        this.data = [...this.data];\n      }\n    }\n\n    if (tableId === TableId.ITEMS) {\n      const editedIndex = this.data.findIndex(\n        (domainParam) => domainParam.id === this.selectedDomainParameter!.id\n      );\n      const editedItemIndex = this.data[editedIndex].items.findIndex(\n        (item) => item.id === row.id\n      );\n\n      const edited = await this.openItemDialog(row as DomainItem);\n\n      if (edited) {\n        // To be able to save in the API, when we update an item, we need to\n        // mark its parent DomainParameter as modified\n        this.data[editedIndex].isModified = true;\n        this.data[editedIndex].items.splice(editedItemIndex, 1, edited);\n        this.data[editedIndex].items = [...this.data[editedIndex].items];\n      }\n    }\n\n    this.onDataChanged.emit(this.data);\n  }\n\n  async onRowAction(\n    {\n      action: { id },\n      row,\n    }: RowActionEvent<DomainParameter> | RowActionEvent<DomainItem>,\n    tableId: TableId\n  ) {\n    if (tableId === TableId.MAIN) {\n      const editedIndex = this.data.findIndex(\n        (domainParam) => domainParam.id === row.id\n      );\n\n      if (id === Actions.REMOVE_RECORD) {\n        // The API, delete a domain param if it is not found on the list\n        this.data.splice(editedIndex, 1);\n      }\n\n      this.data = [...this.data];\n    }\n\n    if (tableId === TableId.ITEMS) {\n      const editedIndex = this.data.findIndex(\n        (domainParam) => domainParam.id === this.selectedDomainParameter!.id\n      );\n      const editedItemIndex = this.data[editedIndex].items.findIndex(\n        (item) => item.id === row.id\n      );\n\n      if (id === Actions.REMOVE_RECORD) {\n        // The API, to delete a Domain Param item, needs to receive the array\n        // without the removed element, and its parent entity flagged as edited.\n        this.data[editedIndex].isModified = true;\n        this.data[editedIndex].items.splice(editedItemIndex, 1);\n      }\n\n      this.data[editedIndex].items = [...this.data[editedIndex].items];\n    }\n\n    this.onDataChanged.emit(this.data);\n  }\n\n  async onTableAction({ action: { id: actionId } }: any, tableId: TableId) {\n    if (actionId !== Actions.ADD_RECORD) {\n      return;\n    }\n\n    if (tableId === TableId.MAIN) {\n      const newDomainParameter = await this.openParameterDialog();\n\n      if (newDomainParameter) {\n        this.data = [newDomainParameter, ...this.data];\n      }\n    }\n\n    if (tableId === TableId.ITEMS) {\n      const newItem = await this.openItemDialog();\n\n      if (newItem) {\n        const editIndex = this.data.findIndex(\n          (elem) => elem.id === this.selectedDomainParameter!.id\n        );\n\n        // To be able to save in the API we need to mark item parent Domain\n        // parameter as modified\n\n        this.data[editIndex].isModified = true;\n        this.data[editIndex].items = [newItem, ...this.data[editIndex].items];\n        this.data = [...this.data];\n      }\n    }\n\n    this.onDataChanged.emit(this.data);\n  }\n\n  openParameterDialog(\n    domainParameter?: DomainParameter\n  ): Promise<DomainParameter> {\n    const parameterFormDialog = this.dialog.open(\n      DomainParameterDialogComponent,\n      {\n        width: 'fit-content',\n        disableClose: true,\n        data: {\n          domainParameter,\n        } as DomainParameterDialogData,\n      }\n    );\n\n    return parameterFormDialog\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n\n  getNextSequenceId() {\n    const sorted = this.selectedDomainParameter?.items\n      .map((elem) => elem.sequence)\n      .sort((elemA: number, elemB: number) => elemA - elemB)\n      .reverse();\n\n    return sorted && sorted[0] ? sorted[0] + 1 : 1;\n  }\n\n  openItemDialog(domainItem?: DomainItem): Promise<DomainItem> {\n    const itemFormDialog = this.dialog.open(\n      DomainParameterItemDialogComponent,\n      {\n        width: 'fit-content',\n        disableClose: true,\n        data: {\n          domainItem,\n          sequenceId: domainItem?.sequence ?? this.getNextSequenceId(),\n        } as DomainParameterItemDialogData,\n      }\n    );\n\n    return itemFormDialog\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n}\n","<div class=\"domain-parameters\">\n  <div class=\"main-table\">\n    <talan-table-generator\n      [ngClass]=\"{ 'full-height': !selectedDomainParameter }\"\n      [data]=\"data\"\n      [tableOptions]=\"mainTableOptions\"\n      [allColumns]=\"mainTableColumns\"\n      [columnsConfiguration]=\"mainTableConfiguration\"\n      [tableActions]=\"tableActions\"\n      [rowActions]=\"rowActions\"\n      (tableActionEvent)=\"onTableAction($event, TableId.MAIN)\"\n      (rowActionEvent)=\"onRowAction($event, TableId.MAIN)\"\n      (rowClick)=\"onRowClicked($event)\"\n      (rowDblClick)=\"\n        onRowDoubleClicked($event, TableId.MAIN)\n      \"></talan-table-generator>\n  </div>\n\n  <div\n    class=\"items-table\"\n    *ngIf=\"selectedDomainParameter\">\n    <talan-table-generator\n      [data]=\"selectedDomainParameter.items\"\n      [tableOptions]=\"itemsTableOptions\"\n      [allColumns]=\"itemsTableColumns\"\n      [columnsConfiguration]=\"itemsTableConfiguration\"\n      [tableActions]=\"tableActions\"\n      [rowActions]=\"rowActions\"\n      (tableActionEvent)=\"onTableAction($event, TableId.ITEMS)\"\n      (rowActionEvent)=\"onRowAction($event, TableId.ITEMS)\"\n      (rowDblClick)=\"\n        onRowDoubleClicked($event, TableId.ITEMS)\n      \"></talan-table-generator>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nimport { NgxLoggerLevel } from 'ngx-logger';\nimport { LoggerConfig } from 'ngx-logger/lib/logger.config';\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://stargazer-server.onrender.com',\n  logger: {\n    serverLoggingUrl: undefined,\n    level: NgxLoggerLevel.DEBUG,\n    serverLogLevel: NgxLoggerLevel.ERROR,\n    disableConsoleLogging: false,\n  } as LoggerConfig,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { QuickSearchEntity } from '@models/models';\nimport { ApiService } from '@services/api/api.service';\nimport { sortResultsByTypeOrder } from '@shared/utils/helpers';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  constructor(private apiService: ApiService) {}\n\n  search(query: string): Observable<QuickSearchEntity[]> {\n    return this.apiService\n      .read<QuickSearchEntity[]>(\n        `/quick-search/search?criteria=${encodeURIComponent(query)}`\n      )\n      .pipe(\n        map((results) => {\n          return sortResultsByTypeOrder(results);\n        })\n      );\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CheckboxConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n})\nexport class CheckboxComponent {\n  private _field!: CheckboxConfiguration;\n\n  get field(): CheckboxConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: CheckboxConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  *ngIf=\"!field.noFormField\"\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\"\n  floatLabel=\"always\"\n  class=\"mat-form-field--no-underline\">\n  <mat-label *ngIf=\"field.label\">{{ field.label }}</mat-label>\n\n  <input\n    hidden\n    matInput\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\" />\n\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n\n  <mat-hint align=\"start\">\n    <ng-container\n      *ngIf=\"!control.touched || (field.hintStart && control.valid)\">\n      {{ field.hintStart }}\n    </ng-container>\n\n    <!-- Fixing mat-form-field problem not show mat-error with this trick -->\n    <ng-container *ngIf=\"control.touched && control.invalid\">\n      <mat-error\n        [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n    </ng-container>\n  </mat-hint>\n\n  <mat-hint\n    *ngIf=\"!control.touched || (field.hintEnd && control.valid)\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n</mat-form-field>\n\n<div *ngIf=\"field.noFormField\">\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n</div>\n\n<!-- Default template -->\n<ng-template #default>\n  <mat-checkbox\n    [labelPosition]=\"field.labelPosition || 'after'\"\n    [formControl]=\"control\"\n    [required]=\"required\">\n    <ng-container *ngIf=\"field.placeholder\">\n      {{ field.placeholder }}\n      <span *ngIf=\"required\">*</span>\n    </ng-container>\n  </mat-checkbox>\n</ng-template>\n","import { InjectionToken } from '@angular/core';\nimport { LoadingComponent } from '../loading.component';\n\nexport interface LoadingConfiguration {\n  loadingComponent: any;\n  excludeUrls: (string | RegExp)[];\n  skipLoadingHeaderName: string;\n}\n\nexport const LOADING_CONFIGURATION = new InjectionToken(\n  'LOADING_CONFIGURATION'\n);\n\nexport const DEFAULT_LOADING_CONFIGURATION: LoadingConfiguration = {\n  loadingComponent: LoadingComponent,\n  excludeUrls: [],\n  skipLoadingHeaderName: 'X-Skip-Loading',\n};\n","import { Platform } from '@angular/cdk/platform';\nimport { Inject, NgModule, Optional } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {\n  DateAdapter,\n  MAT_DATE_LOCALE,\n  MatNativeDateModule,\n  NativeDateAdapter,\n} from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {\n  MAT_DATETIME_FORMATS,\n  MatDatetimepickerModule,\n  MatNativeDatetimeModule,\n} from '@mat-datetimepicker/core';\n\nexport class CustomDateAdapter extends NativeDateAdapter {\n  constructor(\n    @Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string,\n    platform: Platform\n  ) {\n    super(matDateLocale, platform);\n  }\n\n  getFirstDayOfWeek(): number {\n    return 1;\n  }\n}\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatNativeDatetimeModule,\n    MatDatetimepickerModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: CustomDateAdapter,\n      deps: [MAT_DATE_LOCALE, Platform],\n    },\n    {\n      provide: MAT_DATETIME_FORMATS,\n      useValue: {\n        parse: {},\n        display: {\n          dateInput: {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n          },\n          monthInput: {\n            month: 'long',\n          },\n          datetimeInput: {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n          },\n          timeInput: {\n            hour: '2-digit',\n            minute: '2-digit',\n          },\n          monthYearLabel: {\n            year: 'numeric',\n            month: 'short',\n          },\n          dateA11yLabel: {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n          },\n          monthYearA11yLabel: {\n            year: 'numeric',\n            month: 'long',\n          },\n          popupHeaderDateLabel: {\n            weekday: 'short',\n            month: 'short',\n            day: '2-digit',\n          },\n        },\n      },\n    },\n  ],\n})\nexport class MaterialModule {}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/**\n * @ngModule DynamicFormModule\n *\n * @usageNotes\n *\n * Set a key press listener on 'T' press, that set the Date on the decorated form control.\n *\n * ```\n * <some-element talanSetDateOnKeyPress>...</some-element>\n * ```\n *\n * You can override the default and use a custom key. E.G.: On enter press\n *\n * ```\n * <some-element talanSetDateOnKeyPress=\"Enter\">...</some-element>\n * ```\n *\n * @description\n *\n * An element directive that sets today's Date on the decorated form control.\n * By default, it will listen to 'T' press, but it could be configured to any\n * other key stroke.\n */\n@Directive({\n  selector: '[talanSetDateOnKeyPress]',\n})\nexport class SetDateOnKeyPressDirective {\n  /**\n   * Key press to listen and set date.\n   * @Default `T`\n   */\n  @Input('talanSetDateOnKeyPress') keyToListen: string = '';\n\n  constructor(private control: NgControl) {}\n\n  @HostListener('keypress', ['$event'])\n  onKeyPress(event: KeyboardEvent): void {\n    if (event.key === (this.keyToListen || 't')) {\n      event.preventDefault();\n      this.control.control?.setValue(new Date());\n    }\n  }\n}\n","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  MatAutocompleteSelectedEvent,\n  MatAutocompleteTrigger,\n} from '@angular/material/autocomplete';\nimport { Subject, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { SelectionModel } from '../../cdk/collections/selection-model';\nimport { AutocompleteConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n})\nexport class AutocompleteComponent<T> implements OnInit, OnDestroy {\n  private _field!: AutocompleteConfiguration;\n\n  get field(): AutocompleteConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: AutocompleteConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n\n  displayWith(value: any) {\n    return this.field.displayWith\n      ? this.field.displayWith(value)\n      : (value as string);\n  }\n\n  get showMoreMessageItems() {\n    return this.field.showMoreMessageItems || 2;\n  }\n\n  onTooltip() {\n    return this.optionsSelected.selected\n      .map((option) => this.displayWith(option))\n      .join(', ');\n  }\n\n  //\n  filteredOptions: T[] = [];\n\n  loading = false;\n\n  error = false;\n\n  private _onDestroy$ = new Subject<void>();\n\n  inputControl = new FormControl('');\n  ngOnInit(): void {\n    this.inputControl.valueChanges\n      .pipe(\n        startWith(this.field.startWith || ''),\n        debounceTime(this.field.debounceTime || 300),\n        distinctUntilChanged(),\n        filter((value) => value.length > (this.field.minlength || -1)),\n        tap(() => {\n          this.loading = true;\n          this.error = false;\n          this.filteredOptions = [];\n        }),\n        switchMap((val) => {\n          return this.field.apiMethod(val);\n        }),\n        catchError((_error) => {\n          this.loading = false;\n          this.error = true;\n          return of([]);\n        }),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((data: T[]) => {\n        this.filteredOptions = data;\n        this.loading = false;\n      });\n\n    this.optionsSelected = new SelectionModel<T>(\n      this.field.multiple,\n      [],\n      true,\n      (o1: T, o2: T) => this.displayWith(o1) === this.displayWith(o2)\n    );\n\n    this.optionsSelected.changed.subscribe((_currentValue) => {\n      if (this.field.multiple) {\n        this.control.setValue(this.optionsSelected.selected);\n      } else {\n        this.control.setValue(this.optionsSelected.selected[0]);\n      }\n    });\n  }\n\n  inputValue = '';\n  keyup(event: Event) {\n    this.inputValue = (event.target as HTMLInputElement).value;\n  }\n\n  @ViewChild('input', { read: MatAutocompleteTrigger })\n  matAutocomplete!: MatAutocompleteTrigger;\n\n  optionsSelected!: SelectionModel<T>;\n\n  onOptionSelected(option: MatAutocompleteSelectedEvent) {\n    this.optionsSelected.toggle(option.option.value);\n\n    this.inputControl.setValue(this.inputValue);\n\n    setTimeout(() => {\n      this.matAutocomplete.openPanel();\n    }, 0);\n  }\n\n  isSelected(value: T) {\n    return this.optionsSelected.isSelected(value);\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n}\n","<mat-form-field\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\">\n  <mat-label>{{ field.label }}</mat-label>\n\n  <input\n    #input\n    matInput\n    [matAutocomplete]=\"auto\"\n    [formControl]=\"inputControl\"\n    [required]=\"required\"\n    type=\"text\"\n    [placeholder]=\"field.placeholder || ''\"\n    (keyup)=\"keyup($event)\" />\n\n  <mat-hint\n    [matTooltip]=\"onTooltip()\"\n    align=\"start\">\n    <ng-template [ngTemplateOutlet]=\"optionSelected\"></ng-template>\n  </mat-hint>\n\n  <mat-hint\n    *ngIf=\"field.hintEnd\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n\n  <mat-error\n    *ngIf=\"control.invalid\"\n    [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n</mat-form-field>\n\n<!-- Don't use [displayWith]=\"displayWith\" because remove input value when select -->\n<mat-autocomplete\n  #auto=\"matAutocomplete\"\n  (optionSelected)=\"onOptionSelected($event)\">\n  <!-- TODO: Display selected options -->\n  <mat-option\n    [matTooltip]=\"onTooltip()\"\n    disabled>\n    <ng-template [ngTemplateOutlet]=\"optionSelected\"></ng-template>\n  </mat-option>\n\n  <mat-divider></mat-divider>\n\n  <!-- If we're not loading AND the array length is 0, show this -->\n  <mat-option\n    disabled\n    *ngIf=\"\n      !filteredOptions || (!loading && !error && filteredOptions.length === 0)\n    \">\n    {{ 'dynamicForm.autocomplete.noMatches' | translate }}\n  </mat-option>\n\n  <!-- If request fails -->\n  <mat-option\n    disabled\n    *ngIf=\"error\">\n    {{ 'dynamicForm.autocomplete.failedToFetchOptions' | translate }}\n  </mat-option>\n\n  <!-- If we're loading -->\n  <mat-option\n    disabled\n    *ngIf=\"loading\">\n    <div class=\"loading\"><mat-spinner diameter=\"35\"></mat-spinner></div>\n  </mat-option>\n\n  <!-- If we have results -->\n  <ng-container *ngIf=\"!loading && !error\">\n    <mat-option\n      *ngFor=\"let option of filteredOptions\"\n      [value]=\"option\"\n      [class.option-selected]=\"isSelected(option)\">\n      {{ displayWith(option) }}\n    </mat-option>\n  </ng-container>\n</mat-autocomplete>\n\n<!-- optionSelected template -->\n<ng-template #optionSelected>\n  <ng-container *ngIf=\"optionsSelected.selected.length === 0\">\n    {{ 'dynamicForm.autocomplete.noOptionsSelected' | translate }}\n  </ng-container>\n\n  <ng-container *ngIf=\"optionsSelected.selected.length > 0\">\n    {{ 'dynamicForm.autocomplete.selected' | translate }}\n\n    <ng-container\n      *ngFor=\"\n        let option of optionsSelected.selected;\n        let index = index;\n        let last = last\n      \">\n      <span *ngIf=\"index < showMoreMessageItems\">\n        {{\n          displayWith(option) +\n            (last || index === showMoreMessageItems - 1 ? '' : ', ')\n        }}\n      </span>\n\n      <span *ngIf=\"last && index >= showMoreMessageItems\">\n        {{\n          'dynamicForm.autocomplete.moreMessageItems'\n            | translate\n              : {\n                  value: optionsSelected.selected.length - showMoreMessageItems\n                }\n        }}\n      </span>\n    </ng-container>\n  </ng-container>\n</ng-template>\n","/**\n * @see https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\n */\nexport const get = (obj: any, path: string, defaultValue = undefined) => {\n  const travel = (regexp: any) =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce(\n        (res, key) => (res !== null && res !== undefined ? res[key] : res),\n        obj\n      );\n\n  const result = travel(/[,[\\]]+?/) || travel(/[,[\\].]+?/);\n\n  return result === undefined || result === obj ? defaultValue : result;\n};\n","import { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Inject, Injectable } from '@angular/core';\nimport {\n  LOADING_CONFIGURATION,\n  LoadingConfiguration,\n} from '../configuration/loading.configuration';\n\n@Injectable()\nexport class LoadingService {\n  /**\n   * true - Allow HTTP Request automatically loading (LoadingInterceptor)\n   * false - Prevent HTTP Request automatically loading (LoadingInterceptor)\n   */\n  useInterceptor = true;\n\n  overlayRef = this.overlay.create({\n    positionStrategy: this.overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .centerVertically(),\n    scrollStrategy: this.overlay.scrollStrategies.block(),\n    hasBackdrop: true,\n  });\n\n  constructor(\n    private overlay: Overlay,\n    @Inject(LOADING_CONFIGURATION) private configuration: LoadingConfiguration\n  ) {}\n\n  show() {\n    this.overlayRef.attach(\n      new ComponentPortal(this.configuration.loadingComponent)\n    );\n  }\n\n  hide() {\n    this.overlayRef.detach();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { Note } from '@models/note.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotesService {\n  private _endpointURL = '/notes';\n\n  constructor(private apiService: ApiService) {}\n\n  getNotesByEntityId(id: number, entityType: EntityType): Observable<Note[]> {\n    return this.apiService.read<Note[]>(\n      `${\n        this._endpointURL\n      }/${id}/notes?userGroups=CSD&userGroups=PM&entityType=${entityType.toUpperCase()}`\n    );\n  }\n}\n","/*\n * Public API Surface of loading\n */\n\nexport * from './lib/configuration/loading.configuration';\nexport * from './lib/loading.component';\nexport * from './lib/loading.module';\nexport * from './lib/service/loading.service';\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  DEFAULT_LOADING_CONFIGURATION,\n  LOADING_CONFIGURATION,\n  LoadingConfiguration,\n} from './configuration/loading.configuration';\nimport { LoadingInterceptor } from './interceptor/loading.interceptor';\nimport { LoadingComponent } from './loading.component';\nimport { MaterialModule } from './material.module';\nimport { LoadingService } from './service/loading.service';\n\n@NgModule({\n  declarations: [LoadingComponent],\n  imports: [CommonModule, OverlayModule, MaterialModule],\n  exports: [LoadingComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingInterceptor,\n      multi: true,\n    },\n    LoadingService,\n    { provide: LOADING_CONFIGURATION, useValue: DEFAULT_LOADING_CONFIGURATION },\n  ],\n})\nexport class LoadingModule {\n  static forRoot(\n    configuration: Partial<LoadingConfiguration>\n  ): ModuleWithProviders<LoadingModule> {\n    return {\n      ngModule: LoadingModule,\n      providers: [\n        {\n          provide: LOADING_CONFIGURATION,\n          useValue: { ...DEFAULT_LOADING_CONFIGURATION, ...configuration },\n        },\n      ],\n    };\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subject, of } from 'rxjs';\nimport {\n  catchError,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  startWith,\n  switchMap,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-autocomplete-async',\n  templateUrl: './autocomplete-async.component.html',\n  styleUrls: ['./autocomplete-async.component.scss'],\n})\nexport class AutocompleteAsyncComponent implements OnInit, OnDestroy {\n  @Input() labelTranslateKey?: string;\n  @Input() displayValueFormatter!: (val: any) => string;\n  @Input() searchMethod!: (inputValue: string) => Observable<any[]>;\n  @Output() onSelectedOption = new EventEmitter<any>();\n\n  filteredOptions: any[] = [];\n  loading = false;\n  error = false;\n  private _onDestroy$ = new Subject<void>();\n\n  autocompleteControl = new FormControl();\n\n  ngOnInit(): void {\n    this.autocompleteControl.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(500),\n        distinctUntilChanged(),\n        filter((value) => typeof value === 'string'),\n        tap(() => {\n          this.loading = true;\n          this.error = false;\n          this.filteredOptions = [];\n        }),\n        switchMap((val) => {\n          return this.searchMethod(val);\n        }),\n        catchError((e) => {\n          this.loading = false;\n          this.error = true;\n          return of([]);\n        }),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((transmissionsSearchResult) => {\n        this.filteredOptions = transmissionsSearchResult;\n        this.loading = false;\n      });\n  }\n\n  optionSelectedHandler(selectedValue: any) {\n    this.onSelectedOption.emit(selectedValue);\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n}\n","<mat-form-field class=\"dropdown\">\n  <mat-label *ngIf=\"labelTranslateKey\">{{\n    labelTranslateKey | translate\n  }}</mat-label>\n  <input\n    id=\"input-field\"\n    type=\"text\"\n    [formControl]=\"autocompleteControl\"\n    matInput\n    [matAutocomplete]=\"auto\" />\n  <mat-autocomplete\n    (optionSelected)=\"optionSelectedHandler($event.option.value)\"\n    #auto=\"matAutocomplete\"\n    [displayWith]=\"displayValueFormatter\">\n    <!-- If we're not loading AND the array length is 0, show this -->\n    <mat-option\n      id=\"no-matches-feedback\"\n      disabled\n      *ngIf=\"\n        !filteredOptions || (!loading && !error && filteredOptions.length === 0)\n      \">\n      {{ 'noMatches' | translate }}\n    </mat-option>\n    <!-- If request fails -->\n    <mat-option\n      id=\"error-feedback\"\n      disabled\n      *ngIf=\"error\">\n      {{ 'failedToFetchOptions' | translate }}\n    </mat-option>\n    <!-- If we're loading -->\n    <mat-option\n      id=\"loading-feedback\"\n      disabled\n      *ngIf=\"loading\">\n      <div class=\"loading\"><mat-spinner diameter=\"35\"></mat-spinner></div>\n    </mat-option>\n\n    <!-- If we have results -->\n    <ng-container *ngIf=\"!loading && !error\">\n      <mat-option\n        *ngFor=\"let option of filteredOptions\"\n        [value]=\"option\">\n        {{ displayValueFormatter(option) }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</mat-form-field>\n","export enum DomainEntity {\n  EVENT_TYPE = 'EVENT_TYPE',\n  BUREAU = 'BUREAU',\n  USER_GROUP = 'USER_GROUP',\n  PROPERTY_GROUPS = 'PROPERTY_GROUPS',\n  SERVICE = 'SERVICE',\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { QuickSearchEntity } from '@models/models';\nimport { SearchService } from '@services/quick-search/quick-search.service';\nimport { Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  takeUntil,\n  tap,\n  throttleTime,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-quick-search',\n  templateUrl: './quick-search.component.html',\n  styleUrls: ['./quick-search.component.scss'],\n})\nexport class QuickSearchComponent implements OnInit, OnDestroy {\n  subjectInput = new Subject<string>();\n  quickSearchResults: any[] = [];\n  searchControl = new FormControl();\n\n  destroy$: Subject<void> = new Subject<void>();\n  showResults: boolean = false;\n  selectedOption: string = '';\n\n  constructor(private readonly searchService: SearchService) {}\n\n  ngOnInit(): void {\n    this.searchControl.valueChanges\n      .pipe(\n        tap(() => {\n          this.quickSearchResults = [];\n        }),\n        filter((query) => query.length >= 0),\n        debounceTime(300),\n        throttleTime(300),\n        distinctUntilChanged(),\n        switchMap((query) => {\n          return this.searchService.search(query);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((results) => {\n        this.quickSearchResults = results;\n        this.showResults = results.length > 0;\n      });\n  }\n\n  onQuickSearchClear(): void {\n    this.searchControl.setValue('');\n    this.quickSearchResults = [];\n  }\n\n  selectOption(option: string): void {\n    this.selectedOption = option;\n    this.showResults = false;\n  }\n\n  formatResult(result: QuickSearchEntity): string {\n    let formattedResult = '';\n    if (!result) {\n      return formattedResult;\n    }\n    if (result.type) {\n      formattedResult += result.type + ' ';\n    }\n    if (result.code) {\n      formattedResult += result.code;\n    }\n    if (result.name) {\n      formattedResult += ' - ' + result.name;\n    }\n\n    return formattedResult;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<mat-form-field\n  class=\"search-field\"\n  appearance=\"fill\">\n  <mat-label>{{ 'quickSearch' | translate }}</mat-label>\n  <input\n    id=\"quick-search\"\n    matInput\n    type=\"text\"\n    [formControl]=\"searchControl\"\n    matInput\n    [matAutocomplete]=\"quickSearch\" />\n\n  <button\n    mat-button\n    *ngIf=\"searchControl.value\"\n    matSuffix\n    mat-icon-button\n    aria-label=\"Clear\"\n    (click)=\"onQuickSearchClear()\">\n    <mat-icon>close</mat-icon>\n  </button>\n\n  <mat-autocomplete\n    (optionSelected)=\"selectOption($event.option.value)\"\n    #quickSearch=\"matAutocomplete\"\n    panelWidth=\"40%\"\n    [displayWith]=\"formatResult\">\n    <mat-option\n      id=\"no-matches-feedback\"\n      disabled\n      *ngIf=\"quickSearchResults.length === 0\">\n      {{ 'noMatches' | translate }}\n    </mat-option>\n    <ng-container *ngIf=\"quickSearchResults.length > 0\">\n      <mat-option\n        *ngFor=\"let option of quickSearchResults\"\n        [value]=\"option\">\n        {{ formatResult(option) }}\n      </mat-option>\n    </ng-container>\n  </mat-autocomplete>\n</mat-form-field>\n","/**\n * Screen 1: Toolbar input QUICKSEARCH\n *\n * /quick-search/search?criteria=23-\n * Criteria - string\n *\n * TODO: NEED TO KNOW IS GET OR POST ...\n *\n * Order = 1. EVT | 2. PAR_EVT | 3. TXM | 4. NTXM | 5. CO\n *\n * \"type\" + \" \" + \"code\" + (\" - \" + \"name\")\n *\n * @example\n * \"EVT 23581 - Test event\"\n * \"EVT 23582\"\n */\nexport interface QuickSearchEntity {\n  id: number;\n  code: string;\n  name?: string | null;\n  type: QuickSearchEntityType;\n}\n\nexport enum QuickSearchEntityType {\n  EVT = 'EVT',\n  PAR_EVT = 'PAR_EVT',\n  TXM = 'TXM',\n  NTXM = 'NTXM',\n  CO = 'CO',\n}\n\n/**\n * Screen 2: API form request\n *\n * POST /events/search\n *\n * RequestBody: EventSearchCriteria\n * Response: List of EventSearchResultData\n */\nexport interface EventSearchResultData {\n  no: number;\n  id: number;\n  isParent: boolean;\n  periodBegin: LocalDate;\n  periodEnd: LocalDate;\n  description: string;\n  eventType: string;\n  city: string;\n  contract: string;\n  salesDeal: string;\n  status: string;\n  deadline?: LocalDate;\n  category: string;\n  subCategory: string;\n  office: string;\n  quoteId: string;\n  notes: boolean;\n  isPMO: boolean;\n  parent: boolean;\n}\n\n/**\n * Screen 2: API form request\n *\n * POST /events/search\n *\n * RequestBody: EventSearchCriteria\n * Response: List of EventSearchResultData\n *\n * TODO: What is the \"EVENT\" input?\n */\nexport interface EventSearchCriteria {\n  no: string;\n  periodBegin?: LocalDate;\n  periodEnd?: LocalDate;\n  eventTypeList?: string[];\n  statusList?: string;\n  bureauList?: string;\n  mediaList?: string;\n  isParent?: boolean;\n  isPMO?: boolean;\n  city?: string;\n  quoteId?: string;\n  userGroup?: string[];\n  parent?: boolean;\n}\n\n/**\n * Screen 2: API form request\n * Custom date representation [YEAR, MONTH, DAY, HOUR, MINUTE, SECONDS]\n * @example\n * [2023, 08, 25]\n */\nexport type LocalDate = [number, number, number, number?, number?, number?];\n\n/**\n * Screen 2: Type COMBOBOX\n *\n * /domains/domain/{domainKeyCode}/items\n * domainKeyCode: \"EVENT_TYPE\"\n * Response: list of TypeCombobox\n * TODO: Remove any reference to this interface and use DomainItem model\n */\nexport interface TypeCombobox {\n  version: number;\n  id: number;\n  sequence: number;\n  keyCode: string;\n  code: string;\n  externalCode: string;\n  label: string;\n  extView: boolean;\n  externalLabel: string;\n  itemStatus: string;\n  businessKey: string;\n  new: boolean;\n}\n\n/**\n * Screen 2: Status COMBOBOX\n *\n * @example\n * | Code      | Label       | Tooltip   |\n * |-----------|-------------|-----------|\n * | REQUESTED | 'Requested' | REQUESTED |\n */\n\nexport enum StatusCombobox {\n  REQUESTED = 'REQUESTED',\n  REJECTED = 'REJECTED',\n  CONFIRMED = 'CONFIRMED',\n  PUBLISHED = 'PUBLISHED',\n  PUBLISHED_NO_BOOKINGS = 'PUBLISHED_NO_BOOKINGS',\n  CANCELLED = 'CANCELLED',\n  BINNED = 'BINNED',\n  COMPLETED = 'COMPLETED',\n  DRAFT = 'DRAFT',\n  NO_INTEREST = 'NO_INTEREST',\n}\n\n/**\n * Screen 2: Bureau COMBOBOX\n *\n * /domains/domain/{domainKeyCode}/items\n * domainKeyCode: \"BUREAU\"\n * Response: list of BureauCombobox\n */\nexport interface BureauCombobox {\n  version: number;\n  id: number;\n  sequence: number;\n  keyCode: string;\n  code: string;\n  externalCode: string;\n  label: string;\n  extView: boolean;\n  externalLabel: string;\n  itemStatus: string;\n  businessKey: string;\n  new: boolean;\n}\n\n/**\n * Screen 2: City COMBOBOX\n *\n * /cities/search\n * RequestBody: SearchCriteria\n * Response: List of CityCombobox\n */\nexport interface CityCombobox {\n  version: number;\n  id: number;\n  code: string;\n  name: string;\n  alias1: string | null;\n  alias2: string | null;\n  alias3: string | null;\n  country: Country;\n  extName: string;\n  utc: string;\n  extView: string | boolean;\n  businessKey: string;\n  new: boolean;\n}\n\n/**\n * Screen 2: Media COMBOBOX\n *\n * @example\n * | Code | Label      |\n * |------|------------|\n * | TV   | Television |\n */\nexport enum MediaCombobox {\n  TV = 'TV',\n  TV_RADIO = 'TV_RADIO',\n  RADIO = 'RADIO',\n}\n\nexport interface Country {\n  version: number;\n  id: number;\n  code: string;\n  name: string;\n  alias1: string | null;\n  alias2: string | null;\n  alias3: string | null;\n  extName: string | null;\n  extView: boolean;\n  daylightSavingTime: boolean;\n  usRestriction: boolean;\n  area: {\n    version: number;\n    id: number;\n    sequence: number;\n    keyCode: string;\n    code: string;\n    isoCode: any;\n    externalCode: string | null;\n    label: string;\n    extView: boolean;\n    externalLabel: string | null;\n    itemStatus: string;\n    businessKey: string;\n    new: boolean;\n  };\n  businessKey: string;\n  new: boolean;\n}\n\nexport interface OrganizationSearchResultDTO {\n  id: number;\n  version: number;\n  code: string;\n  name: string;\n  country: Country | string;\n  financialStatusType: string;\n  type: string;\n  customer: string;\n  provider: string;\n  active: string;\n  defaultCity:\n    | {\n        id: number;\n        code: string;\n        name: string;\n        alias1: string;\n        alias2: string;\n        alias3: string;\n        country: Country;\n        extName: string;\n        utc: string;\n        extView: string;\n        businessKey: string;\n        new: boolean;\n      }\n    | string;\n  defaultPhone: string;\n  poRefMandatory: string;\n  billedCurrencyLocked: string;\n  defaultMail: string;\n  defaultSystem: TypeCombobox;\n}\n\nexport interface SearchCriteria {\n  first?: number;\n  max?: number;\n  orders?: {\n    identifier: string;\n    asc: boolean;\n  }[];\n  terms?: Term[];\n  relations?: Relation[];\n  values?: Record<string, any>;\n}\n\nexport interface SearchOrganizationFormValue {\n  code?: string;\n  name?: string;\n  type?: any[];\n  country?: any[];\n  defaultCity?: any[];\n  financialStatusType?: any[];\n  isCustomer?: YesNoOption[];\n  isProvider?: YesNoOption[];\n  isActive?: YesNoOption[];\n  isBilledCurrencyLocked?: YesNoOption[];\n  isPoRefMandatory?: YesNoOption[];\n}\n\nexport interface Term {\n  identifier: string;\n  value: string;\n  type: string;\n  likeType?: string;\n  operator?: boolean;\n}\n\nexport interface Relation {\n  type: string;\n  relationEntity: string;\n  terms: RelationTerm[];\n  subJoin: any;\n  joinType: string;\n}\n\nexport interface RouteData {\n  resolveItems: RequestConfig[];\n}\n\ninterface RequestConfig {\n  url: string;\n  method: string;\n  body?: SearchCriteria;\n  params?: string;\n}\n\nexport interface RelationTerm {\n  identifier: string;\n  value: string;\n  type: string;\n  privateOperator: boolean;\n}\n\nexport interface SearchOrganizationDataSource {\n  id: number;\n  version: number;\n  code: string;\n  name: string;\n  financialStatusType: string;\n  type: string;\n  customer: string;\n  provider: string;\n  active: string;\n  defaultPhone: string;\n  poRefMandatory: string;\n  billedCurrencyLocked: string;\n  country: string | undefined;\n  city: string | undefined;\n  defaultSystem: string;\n  defaultMail: string;\n}\n\nexport enum DisplayedColumns {\n  Code = 'code',\n  Name = 'name',\n  Type = 'type',\n  Country = 'country',\n  City = 'city',\n  financialStatusType = 'financialStatusType',\n  Customer = 'customer',\n  Provider = 'provider',\n  Active = 'active',\n  DefaultPhone = 'defaultPhone',\n  DefaultMail = 'defaultMail',\n  DefaultSystem = 'defaultSystem',\n  ColumnsSelector = 'columnsSelector',\n}\n\nexport enum YesNoOption {\n  Yes = 'Y',\n  No = 'N',\n}\n\nexport interface KeyValueObject {\n  key: string;\n  value: string;\n}\n\nexport enum TypeOption {\n  MEMB = 'MEMB',\n  NMEMB = 'NMEMB',\n  NA = 'N/A',\n  APPP = 'APPP',\n  ASSM = 'ASSM',\n}\n\nexport enum FinancialStatusOption {\n  BL = 'BL',\n  PP = 'PP',\n  OK = 'OK',\n}\n","import { Injectable } from '@angular/core';\nimport { TransmissionLightDTO } from '@models/transmission-light-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TransmissionsService {\n  private _endpointURL = '/transmissions';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getFilteredTransmissions(\n    searchCriteria: string,\n    limit = 1000\n  ): Observable<TransmissionLightDTO[]> {\n    return this.apiService.create<TransmissionLightDTO[]>(\n      `${this._endpointURL}/search-criteria-light`,\n      {\n        body: {\n          first: 0,\n          max: limit,\n          orders: [{ identifier: 'no', asc: true }],\n          terms: [\n            {\n              identifier: null,\n              value: null,\n              type: 'Or',\n              terms: [\n                {\n                  identifier: 'no',\n                  value: searchCriteria,\n                  type: 'Like',\n                  likeType: 'CONTAINS',\n                  operator: true,\n                },\n                {\n                  identifier: 'title',\n                  value: searchCriteria,\n                  type: 'Like',\n                  likeType: 'CONTAINS',\n                  operator: true,\n                },\n              ],\n            },\n          ],\n          relations: [],\n          values: {},\n        },\n      }\n    );\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ToggleConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss'],\n})\nexport class ToggleComponent {\n  private _field!: ToggleConfiguration;\n\n  get field(): ToggleConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: ToggleConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  *ngIf=\"!field.noFormField\"\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\"\n  floatLabel=\"always\"\n  class=\"mat-form-field--no-underline\">\n  <mat-label *ngIf=\"field.label\">{{ field.label }}</mat-label>\n\n  <input\n    matInput\n    hidden\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\" />\n\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n\n  <mat-hint align=\"start\">\n    <ng-container\n      *ngIf=\"!control.touched || (field.hintStart && control.valid)\">\n      {{ field.hintStart }}\n    </ng-container>\n\n    <!-- Fixing mat-form-field problem not show mat-error with this trick -->\n    <ng-container *ngIf=\"control.touched && control.invalid\">\n      <mat-error\n        [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n    </ng-container>\n  </mat-hint>\n\n  <mat-hint\n    *ngIf=\"!control.touched || (field.hintEnd && control.valid)\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n</mat-form-field>\n\n<div *ngIf=\"field.noFormField\">\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n</div>\n\n<!-- Default template -->\n<ng-template #default>\n  <mat-slide-toggle\n    [formControl]=\"control\"\n    [required]=\"required\"\n    [labelPosition]=\"field.labelPosition || 'after'\"\n    >{{ field.label }}</mat-slide-toggle\n  >\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { EventSearchCriteria, EventSearchResultData } from '@models/models';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventsService {\n  constructor(public apiService: ApiService) {}\n  _endpointURL = '/events';\n\n  searchEvents(\n    eventSearchCriteria: EventSearchCriteria\n  ): Observable<EventSearchResultData[]> {\n    return this.apiService.create<EventSearchResultData[]>(\n      `${this._endpointURL}/search`,\n      {\n        body: eventSearchCriteria,\n      }\n    );\n  }\n}\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpErrorDialogComponent } from './dialog/http-error-dialog.component';\nimport { HttpErrorComponent } from './http-error.component';\nimport { HttpErrorInterceptor } from './interceptor/http-error.interceptor';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [HttpErrorComponent, HttpErrorDialogComponent],\n  imports: [BrowserModule, HttpClientModule, MaterialModule],\n  exports: [HttpErrorComponent],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n  ],\n})\nexport class HttpErrorModule {}\n","/*\n * Public API Surface of dynamic-form\n */\n\nexport * from './lib/dynamic-form.component';\nexport * from './lib/dynamic-form.module';\nexport * from './lib/utils/validators/validators';\n","import { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input, OnInit } from '@angular/core';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener,\n} from '@angular/material/tree';\nimport { NGXLogger } from 'ngx-logger';\n\nexport interface NeosTreeNode {\n  name?: string;\n  nameTranslateKey?: string;\n  icon?: string;\n  callback?: Function;\n  children?: NeosTreeNode[];\n}\n\n/** Flat node with expandable and level information */\ninterface FlatNode {\n  isExpandable: boolean;\n  isEmptyParent: boolean;\n  name: string;\n  icon: string | null;\n  callback: Function | null;\n  level: number;\n}\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n})\nexport class TreeComponent implements OnInit {\n  @Input() treeData: NeosTreeNode[] = [];\n  @Input() isPanelMode: boolean = false;\n  @Input() showControls: boolean = false;\n\n  constructor(private readonly logger: NGXLogger) {}\n\n  ngOnInit() {\n    this.dataSource.data = this.treeData;\n  }\n\n  handleNodeClick(node: FlatNode, callback?: Function): void {\n    this.logger.info(`Executing tree action on ${node.name}`);\n    if (callback) {\n      callback();\n    }\n  }\n\n  private _transformer = (node: NeosTreeNode, level: number) => {\n    return {\n      isExpandable: !!node.children && node.children.length > 0,\n      isEmptyParent: !!node.children && node.children.length === 0,\n      name: node.nameTranslateKey ?? node.name!,\n      icon: node.icon ?? null,\n      callback: node.callback ?? null,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<FlatNode>(\n    (node) => node.level,\n    (node) => node.isExpandable\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    (node) => node.level,\n    (node) => node.isExpandable,\n    (node) => node.children\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  hasChild = (_: number, node: FlatNode) => node.isExpandable;\n  isEmpty = (_: number, node: FlatNode) => node.isEmptyParent;\n}\n","<div\n  class=\"container\"\n  [class.panel]=\"isPanelMode\">\n  <div\n    class=\"controls\"\n    *ngIf=\"showControls\">\n    <button\n      mat-icon-button\n      data-testid=\"expand\"\n      aria-label=\"expand all\"\n      (click)=\"treeControl.expandAll()\">\n      <mat-icon>unfold_more</mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      data-testid=\"collapse\"\n      aria-label=\"collapse all\"\n      (click)=\"treeControl.collapseAll()\">\n      <mat-icon>unfold_less</mat-icon>\n    </button>\n  </div>\n\n  <mat-tree\n    data-testid=\"mat-tree\"\n    [dataSource]=\"dataSource\"\n    [treeControl]=\"treeControl\">\n    <!-- This is the tree node template for leaf nodes -->\n    <mat-tree-node\n      *matTreeNodeDef=\"let node\"\n      matTreeNodePadding>\n      <button\n        data-testid=\"tree-leaf-button\"\n        mat-button\n        (click)=\"handleNodeClick(node, node.callback)\">\n        <mat-icon *ngIf=\"node.icon\">\n          {{ node.icon }}\n        </mat-icon>\n        {{ node.name | translate }}\n      </button>\n    </mat-tree-node>\n\n    <!-- This is the tree node template for empty parent nodes -->\n    <mat-tree-node\n      *matTreeNodeDef=\"let node; when: isEmpty\"\n      matTreeNodePadding>\n      <button\n        style=\"margin-right: 1rem\"\n        mat-icon-button\n        [attr.aria-label]=\"'Empty node ' + node.name\">\n        <mat-icon></mat-icon>\n        <mat-icon>\n          {{ node.icon ? node.icon : 'folder' }}\n        </mat-icon>\n        {{ node.name | translate }}\n      </button>\n    </mat-tree-node>\n\n    <!-- This is the tree node template for expandable nodes -->\n    <mat-tree-node\n      *matTreeNodeDef=\"let node; when: hasChild\"\n      matTreeNodePadding>\n      <button\n        style=\"margin-right: 1rem\"\n        mat-icon-button\n        matTreeNodeToggle\n        [attr.aria-label]=\"'Toggle ' + node.name\">\n        <mat-icon>\n          {{ treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right' }}\n        </mat-icon>\n        <mat-icon>\n          {{ treeControl.isExpanded(node) ? 'folder_open' : 'folder' }}\n        </mat-icon>\n        {{ node.name | translate }}\n      </button>\n    </mat-tree-node>\n  </mat-tree>\n</div>\n","<!--Root item  (trigger button) for labeled menu-->\n<button\n  id=\"root-button\"\n  *ngIf=\"isRootItem && !isIconMode\"\n  mat-button\n  [matMenuTriggerFor]=\"menu\">\n  <ng-container *ngIf=\"labelTranslateKey\">\n    {{ labelTranslateKey | translate }}\n  </ng-container>\n  <ng-container *ngIf=\"label\">\n    {{ label }}\n  </ng-container>\n</button>\n<!--Root item  (trigger button) for icon menu-->\n<button\n  id=\"root-icon-button\"\n  *ngIf=\"isRootItem && isIconMode && label\"\n  mat-icon-button\n  aria-label=\"search entities\"\n  [matMenuTriggerFor]=\"menu\">\n  <mat-icon>{{ label }}</mat-icon>\n</button>\n<!--Menu item with children menu-->\n<button\n  id=\"expandable-button\"\n  *ngIf=\"!isRootItem\"\n  mat-menu-item\n  [matMenuTriggerFor]=\"menu\"\n  (menuOpened)=\"(items)\">\n  <ng-container *ngIf=\"labelTranslateKey\">\n    {{ labelTranslateKey | translate }}\n  </ng-container>\n  <ng-container *ngIf=\"label\">\n    {{ label }}\n  </ng-container>\n</button>\n\n<mat-menu #menu=\"matMenu\">\n  <ng-container *ngFor=\"let item of items; let i = index\">\n    <!--Item with children-->\n    <app-menu\n      [label]=\"item.label\"\n      [labelTranslateKey]=\"item.labelTranslateKey\"\n      [items]=\"item.children!\"\n      [isRootItem]=\"false\"\n      *ngIf=\"isExpandable(item); else menuItem\"></app-menu>\n\n    <ng-template #menuItem>\n      <!--Divider item-->\n      <mat-divider *ngIf=\"isDivider(item)\"></mat-divider>\n      <!--Final menu item-->\n      <button\n        *ngIf=\"!isDivider(item)\"\n        mat-menu-item\n        id=\"action-button\"\n        (click)=\"handleItemCallback(item)\">\n        <span>\n          <mat-icon\n            id=\"icon\"\n            *ngIf=\"item.icon\"\n            [ngStyle]=\"{ color: item.iconColor }\"\n            >{{ item.icon }}</mat-icon\n          >\n          <ng-container *ngIf=\"item.labelTranslateKey\">\n            {{ item.labelTranslateKey | translate }}\n          </ng-container>\n          <ng-container *ngIf=\"item.label\">\n            {{ item.label }}\n          </ng-container>\n        </span>\n      </button>\n    </ng-template>\n  </ng-container>\n</mat-menu>\n","import { Component, Input } from '@angular/core';\nimport { TabsService } from '@services/tabs/tabs.service';\n\nexport interface NeosMenuItem {\n  icon?: string;\n  iconColor?: string;\n  label?: string;\n  labelTranslateKey?: string;\n  callback?: Function;\n  children?: NeosMenuItem[];\n}\n\nconst DIVIDER_IDENTIFIER = 'divider';\nexport const MenuDivider: NeosMenuItem = { label: DIVIDER_IDENTIFIER };\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent {\n  constructor(private tabsService: TabsService) {}\n  @Input() items: NeosMenuItem[] = [];\n  @Input() isRootItem = true;\n  @Input() isIconMode = false;\n  @Input() label?: string;\n  @Input() labelTranslateKey?: string;\n\n  isExpandable(item: NeosMenuItem) {\n    return item.children && item.children.length > 0;\n  }\n\n  isDivider(item: NeosMenuItem) {\n    return item.label === DIVIDER_IDENTIFIER;\n  }\n\n  handleItemCallback(item: NeosMenuItem) {\n    if (!item.callback) {\n      return;\n    }\n\n    item.callback(this.tabsService, item.label);\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormGroupDirective } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganizationEmbeddedDTO } from '@models/organization-embedded-dto.model';\nimport { ResourceLightBase } from '@models/resource-light-base.model';\nimport { ResourceLightDTO } from '@models/resource-light-dto.model';\nimport { ResourceWithProfileAndEventLightDTO } from '@models/resource-with-profile-and-event-light-dto.model';\nimport { TransmissionLightDTO } from '@models/transmission-light-dto.model';\nimport { ColumnConfiguration } from '@shared/components/add-remove-table/add-remove-table.component';\nimport { Subject } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport {\n  AddOrganizationDialogComponent,\n  OrganizationDialogData,\n} from '../add-organization-dialog/add-organization-dialog.component';\nimport {\n  AddResourceDialogComponent,\n  ResourceDialogData,\n} from '../add-resource-dialog/add-resource-dialog.component';\nimport { AddTransmissionDialogComponent } from '../add-transmission-dialog/add-transmission-dialog.component';\n\n@Component({\n  selector: 'app-incident-summary',\n  templateUrl: './incident-summary.component.html',\n  styleUrls: ['./incident-summary.component.scss'],\n})\nexport class IncidentSummaryComponent implements OnInit, OnDestroy {\n  @Input() formGroupName!: string;\n  private _onDestroy$ = new Subject<void>();\n  form!: FormGroup;\n  transmissionNoColumns: ColumnConfiguration[] = [\n    {\n      accesor: 'no',\n      headerTranslateKey: 'trxNo',\n    },\n    {\n      accesor: 'title',\n      headerTranslateKey: 'title',\n    },\n    {\n      accesor: 'description',\n      headerTranslateKey: 'txmDesc',\n    },\n    {\n      accesor: 'eventNo',\n      headerTranslateKey: 'eventNo',\n    },\n    {\n      accesor: 'eventDesc',\n      headerTranslateKey: 'eventDesc',\n    },\n  ];\n\n  resourceCodeColumns: ColumnConfiguration[] = [\n    {\n      accesor: 'rscCode',\n      headerTranslateKey: 'rscCode',\n    },\n    {\n      accesor: 'title',\n      headerTranslateKey: 'title',\n    },\n  ];\n\n  organizationCodeColumns: ColumnConfiguration[] = [\n    {\n      accesor: 'orgCode',\n      headerTranslateKey: 'orgCode',\n    },\n    {\n      accesor: 'name',\n      headerTranslateKey: 'name',\n    },\n  ];\n\n  constructor(\n    private readonly rootFormGroup: FormGroupDirective,\n    private readonly dialog: MatDialog\n  ) {}\n\n  get selectedTransmissions() {\n    return this.form\n      .get('transmissions')!\n      .value.map((tx: TransmissionLightDTO) => ({\n        no: tx.no,\n        title: tx.title,\n        description: tx.description || '',\n        eventNo: tx.event?.no || '',\n        eventDesc: tx.event?.description || '',\n      }));\n  }\n\n  set selectedTransmissions(newValue) {\n    this.form.get('transmissions')!.patchValue(newValue);\n  }\n\n  get selectedResources() {\n    return this.form\n      .get('resources')!\n      .value.map((resource: ResourceLightBase) => ({\n        rscCode: resource.code,\n        title: resource.name,\n      }));\n  }\n\n  set selectedResources(newValue) {\n    this.form.get('resources')!.setValue(newValue);\n  }\n\n  get selectedOrganizations() {\n    return this.form\n      .get('organizations')!\n      .value.map((organization: OrganizationEmbeddedDTO) => ({\n        orgCode: organization.code,\n        name: organization.name,\n      }));\n  }\n\n  get selectedTransmissionsIds() {\n    return this.form\n      .get('transmissions')!\n      .value.map((tx: TransmissionLightDTO) => tx.id);\n  }\n\n  set selectedOrganizations(newValue) {\n    this.form.get('organizations')!.setValue(newValue);\n  }\n\n  ngOnInit(): void {\n    this.form = this.rootFormGroup.control.get(this.formGroupName) as FormGroup;\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  openAddTxDialog(): Promise<TransmissionLightDTO> {\n    const confirmationDialogRef = this.dialog.open(\n      AddTransmissionDialogComponent,\n      {\n        width: '800px',\n      }\n    );\n\n    return confirmationDialogRef\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n\n  openAddResourceDialog(): Promise<\n    (ResourceLightDTO | ResourceWithProfileAndEventLightDTO)[]\n  > {\n    const confirmationDialogRef = this.dialog.open(AddResourceDialogComponent, {\n      width: '800px',\n      data: {\n        selectedTransmissionsIds: this.selectedTransmissionsIds,\n        selectedResources: this.form.get('resources')!.value,\n      } as ResourceDialogData,\n    });\n\n    return confirmationDialogRef\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n\n  openAddOrganizationDialog(): Promise<OrganizationEmbeddedDTO[]> {\n    const confirmationDialogRef = this.dialog.open(\n      AddOrganizationDialogComponent,\n      {\n        width: '800px',\n        data: {\n          selectedTransmissionsIds: this.selectedTransmissionsIds,\n          selectedOrganizations: this.form.get('organizations')!.value,\n        } as OrganizationDialogData,\n      }\n    );\n\n    return confirmationDialogRef\n      .afterClosed()\n      .pipe(tap(() => takeUntil(this._onDestroy$)))\n      .toPromise();\n  }\n\n  async addTransmissionNo() {\n    const selectedTX = await this.openAddTxDialog();\n    if (selectedTX) {\n      this.selectedTransmissions = [\n        ...this.form.get('transmissions')!.value,\n        selectedTX,\n      ];\n    }\n  }\n\n  removeTransmissionNo() {\n    this.selectedTransmissions = this.form\n      .get('transmissions')!\n      .value.slice(0, this.form.get('transmissions')!.value.length - 1);\n  }\n\n  async addResourceCode() {\n    const selectedResourceCodes = await this.openAddResourceDialog();\n    if (selectedResourceCodes && selectedResourceCodes.length > 0) {\n      this.selectedResources = selectedResourceCodes;\n    }\n  }\n\n  removeResourceCode() {\n    this.selectedResources = this.form\n      .get('resources')!\n      .value.slice(0, this.form.get('resources')!.value.length - 1);\n  }\n\n  async addOrganizationCode() {\n    const selectedOrganizationCodes = await this.openAddOrganizationDialog();\n    if (selectedOrganizationCodes && selectedOrganizationCodes.length > 0) {\n      this.selectedOrganizations = selectedOrganizationCodes;\n    }\n  }\n\n  removeOrganizationCode() {\n    this.selectedOrganizations = this.form\n      .get('organizations')!\n      .value.slice(0, this.form.get('organizations')!.value.length - 1);\n  }\n}\n","<form\n  [formGroup]=\"form\"\n  class=\"summary\">\n  <div class=\"summary-tables\">\n    <app-add-remove-table\n      id=\"table-transmissions\"\n      labelTranslateKey=\"transmissionNo\"\n      [columnsConfiguration]=\"transmissionNoColumns\"\n      [data]=\"selectedTransmissions\"\n      (onAdd)=\"addTransmissionNo()\"\n      (onRemove)=\"removeTransmissionNo()\"\n      addButtonTooltip=\"addTransmission\"\n      removeButtonTooltip=\"removeTransmission\"\n      [canRemove]=\"selectedTransmissions.length > 0\"></app-add-remove-table>\n\n    <app-add-remove-table\n      id=\"table-resources\"\n      labelTranslateKey=\"resourceCode\"\n      [columnsConfiguration]=\"resourceCodeColumns\"\n      [data]=\"selectedResources\"\n      (onAdd)=\"addResourceCode()\"\n      (onRemove)=\"removeResourceCode()\"\n      addButtonTooltip=\"addResource\"\n      removeButtonTooltip=\"removeResource\"\n      [canRemove]=\"selectedResources.length > 0\"></app-add-remove-table>\n\n    <app-add-remove-table\n      id=\"table-organizations\"\n      labelTranslateKey=\"organizationCode\"\n      [columnsConfiguration]=\"organizationCodeColumns\"\n      [data]=\"selectedOrganizations\"\n      (onAdd)=\"addOrganizationCode()\"\n      (onRemove)=\"removeOrganizationCode()\"\n      addButtonTooltip=\"addOrganization\"\n      removeButtonTooltip=\"removeOrganization\"\n      [canRemove]=\"selectedOrganizations.length > 0\"></app-add-remove-table>\n  </div>\n\n  <div class=\"summary-text-areas\">\n    <mat-form-field>\n      <mat-label>{{ 'description' | translate | uppercase }}</mat-label>\n\n      <textarea\n        id=\"input-description\"\n        formControlName=\"description\"\n        matInput\n        rows=\"5\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>{{ 'informationToCaller' | translate | uppercase }}</mat-label>\n\n      <textarea\n        id=\"input-caller\"\n        formControlName=\"informationToCaller\"\n        matInput\n        rows=\"5\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>{{ 'actionToBeTaken' | translate | uppercase }}</mat-label>\n\n      <textarea\n        id=\"input-action\"\n        formControlName=\"action\"\n        matInput\n        rows=\"5\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>{{ 'resolution' | translate | uppercase }}</mat-label>\n\n      <textarea\n        id=\"input-resolution\"\n        formControlName=\"resolution\"\n        matInput\n        rows=\"8\"></textarea>\n    </mat-form-field>\n  </div>\n</form>\n","import { Component, Input } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { AuditsService } from '@services/audits/audits.service';\nimport { localDateToDate } from '@shared/utils/helpers';\nimport { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ColumnsConfiguration,\n  DataColumnName,\n  PaginatorOptions,\n  TableOptions,\n} from 'table-generator';\n\n@Component({\n  selector: 'app-incident-update-history',\n  templateUrl: './incident-update-history.component.html',\n  styleUrls: ['./incident-update-history.component.scss'],\n})\nexport class IncidentUpdateHistoryComponent {\n  @Input() incidentId?: number | null;\n\n  data: any[] = [];\n\n  allColumns: DataColumnName[] = [\n    'revision',\n    'time',\n    'user',\n    'actionPerformed',\n  ];\n\n  tableOptions: Partial<TableOptions> = {\n    showFilter: false,\n    showResult: false,\n  };\n\n  paginatorOptions: Partial<PaginatorOptions> = {\n    show: false,\n  };\n\n  columnsConfiguration: ColumnsConfiguration = {\n    revision: {\n      translateKey: 'revision',\n      type: 'number',\n      width: '100px',\n    },\n    time: {\n      translateKey: 'date',\n      type: 'date',\n      format: 'dd/MM/yyyy HH:mm:ss',\n    },\n    user: {\n      translateKey: 'user',\n      type: 'string',\n    },\n    actionPerformed: {\n      translateKey: 'action',\n      type: 'string',\n    },\n  };\n\n  constructor(private readonly auditsService: AuditsService) {}\n\n  get audits() {\n    if (!this.incidentId) {\n      return of([]);\n    }\n\n    return this.auditsService\n      .getAuditsByEntityId(EntityType.INCIDENT, this.incidentId!)\n      .pipe(\n        map((incidentAudits) =>\n          incidentAudits.map((audit) => ({\n            ...audit,\n            time: localDateToDate(audit.time),\n          }))\n        )\n      );\n  }\n}\n","<talan-table-generator\n  id=\"table-audit\"\n  [paginatorOptions]=\"paginatorOptions\"\n  [tableOptions]=\"tableOptions\"\n  [data]=\"(audits | async) || []\"\n  [allColumns]=\"allColumns\"\n  [columnsConfiguration]=\"columnsConfiguration\"></talan-table-generator>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DynamicFormModule } from 'dynamic-form';\nimport { TableGeneratorModule } from 'table-generator';\nimport { MaterialModule } from '../material.module';\nimport { AddRemoveTableComponent } from './components/add-remove-table/add-remove-table.component';\nimport { AutocompleteAsyncComponent } from './components/autocomplete-async/autocomplete-async.component';\nimport { ClockComponent } from './components/clock/clock.component';\nimport { ConfirmationDialogComponent } from './components/confirmation-dialog/confirmation-dialog.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { QuickSearchComponent } from './components/quick-search/quick-search.component';\nimport { TabbedContainerComponent } from './components/tabbed-container/tabbed-container.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { TreeComponent } from './components/tree/tree.component';\nimport { ChangeRolesDialogComponent } from './components/change-roles-dialog/change-roles-dialog.component';\nimport { UserGroupDialogComponent } from './components/user-group-dialog/user-group-dialog.component';\nimport { DiscountManagerDialogComponent } from './components/discount-manager-dialog/discount-manager-dialog.component';\n\n@NgModule({\n  declarations: [\n    AddRemoveTableComponent,\n    ClockComponent,\n    ConfirmationDialogComponent,\n    AutocompleteAsyncComponent,\n    MenuComponent,\n    QuickSearchComponent,\n    TabbedContainerComponent,\n    ToolbarComponent,\n    TreeComponent,\n    ChangeRolesDialogComponent,\n    UserGroupDialogComponent,\n    DiscountManagerDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    TableGeneratorModule,\n    DynamicFormModule,\n  ],\n  exports: [\n    // Modules\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    MaterialModule,\n    TableGeneratorModule,\n    DynamicFormModule,\n    // Components\n    AddRemoveTableComponent,\n    ClockComponent,\n    ConfirmationDialogComponent,\n    ToolbarComponent,\n    ClockComponent,\n    TreeComponent,\n    QuickSearchComponent,\n    MenuComponent,\n    TabbedContainerComponent,\n    ToolbarComponent,\n    TranslateModule,\n    TreeComponent,\n    AddRemoveTableComponent,\n    AutocompleteAsyncComponent,\n  ],\n})\nexport class SharedModule {}\n","import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectionList } from '@angular/material/list';\nimport { OrganizationEmbeddedDTO } from '@models/organization-embedded-dto.model';\nimport { OrganizationsService } from '@services/organizations/organizations.service';\nimport { Subject, of } from 'rxjs';\nimport { catchError, takeUntil, tap } from 'rxjs/operators';\n\nexport interface OrganizationDialogData {\n  selectedTransmissionsIds: number[];\n  selectedOrganizations: OrganizationEmbeddedDTO[];\n}\n\n@Component({\n  selector: 'app-add-organization-dialog',\n  templateUrl: './add-organization-dialog.component.html',\n  styleUrls: ['./add-organization-dialog.component.scss'],\n})\nexport class AddOrganizationDialogComponent implements OnInit, OnDestroy {\n  @ViewChild('suggestedOrganizationsList')\n  suggestedOrganizationsList!: MatSelectionList;\n  private _onDestroy$ = new Subject<void>();\n  autocompleteControl = new FormControl();\n  suggestedOrganizations: OrganizationEmbeddedDTO[] = [];\n  selectedOrganizations: OrganizationEmbeddedDTO[] = [];\n\n  loadingSuggestions = false;\n  suggestionLoadError = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<void>,\n    @Inject(MAT_DIALOG_DATA) public data: OrganizationDialogData,\n    private readonly organizationsService: OrganizationsService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.selectedTransmissionsIds.length > 0) {\n      this.organizationsService\n        .getOrganizationsByTransmissionIdList(\n          this.data.selectedTransmissionsIds\n        )\n        .pipe(\n          tap(() => {\n            this.loadingSuggestions = true;\n            this.suggestionLoadError = false;\n            this.suggestedOrganizations = [];\n          }),\n          takeUntil(this._onDestroy$),\n          catchError(() => {\n            this.loadingSuggestions = false;\n            this.suggestionLoadError = true;\n\n            return of([] as OrganizationEmbeddedDTO[]);\n          })\n        )\n        .subscribe((organizationList) => {\n          this.loadingSuggestions = false;\n          this.suggestedOrganizations = [...organizationList];\n\n          if (\n            this.data.selectedOrganizations &&\n            this.data.selectedOrganizations.length > 0\n          ) {\n            const manuallyAddedTransmissions =\n              this.data.selectedOrganizations.filter(\n                (elem) =>\n                  !organizationList.map((org) => org.id).includes(elem.id)\n              );\n            this.suggestedOrganizations = [\n              ...manuallyAddedTransmissions,\n              ...organizationList,\n            ];\n          }\n\n          this.selectedOrganizations = this.data.selectedOrganizations || [];\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  getFilteredOrganizations = (query: string) =>\n    this.organizationsService.getFilteredOrganizations(query);\n\n  getOrganizationDisplayValue(option: OrganizationEmbeddedDTO) {\n    if (!option) {\n      return '';\n    }\n\n    let displayValue = option.code;\n\n    if (option.name) {\n      displayValue += ` - ${option.name}`;\n    }\n\n    return displayValue;\n  }\n\n  setOptionSelected(option: OrganizationEmbeddedDTO) {\n    this.suggestedOrganizations = [option, ...this.suggestedOrganizations];\n    this.selectedOrganizations = [option, ...this.selectedOrganizations];\n  }\n\n  onSuggestionSelectionChange() {\n    this.selectedOrganizations =\n      this.suggestedOrganizationsList.selectedOptions.selected.map(\n        (org) => org.value\n      );\n  }\n\n  isOrganizationSelected(organization: OrganizationEmbeddedDTO): boolean {\n    return this.selectedOrganizations\n      .map((org) => org.id)\n      .includes(organization.id);\n  }\n}\n","<div class=\"add-organization-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'addOrganizationToIncident' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <app-autocomplete-async\n      id=\"field-autocomplete\"\n      labelTranslateKey=\"selectOrganization\"\n      [searchMethod]=\"getFilteredOrganizations\"\n      [displayValueFormatter]=\"getOrganizationDisplayValue\"\n      (onSelectedOption)=\"setOptionSelected($event)\"></app-autocomplete-async>\n\n    <ng-container *ngIf=\"suggestedOrganizations.length > 0\">\n      <h4>Suggested organizations</h4>\n\n      <mat-selection-list\n        id=\"list-selection\"\n        #suggestedOrganizationsList\n        (selectionChange)=\"onSuggestionSelectionChange()\">\n        <mat-list-option\n          *ngFor=\"let organization of suggestedOrganizations\"\n          [selected]=\"isOrganizationSelected(organization)\"\n          [value]=\"organization\"\n          checkboxPosition=\"before\">\n          {{ organization.name }}\n        </mat-list-option>\n      </mat-selection-list>\n    </ng-container>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"selectedOrganizations.length == 0\"\n      [mat-dialog-close]=\"selectedOrganizations\"\n      cdkFocusInitial>\n      {{ 'add' | translate }}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { HttpErrorDialogComponent } from './dialog/http-error-dialog.component';\nimport { HttpErrorService } from './service/http-error.service';\n\n@Component({\n  selector: 'talan-http-error',\n  templateUrl: './http-error.component.html',\n  styleUrls: ['./http-error.component.scss'],\n})\nexport class HttpErrorComponent implements OnInit {\n  constructor(private dialog: MatDialog, private service: HttpErrorService) {}\n\n  private dialogRef!: MatDialogRef<HttpErrorDialogComponent, string>;\n\n  ngOnInit(): void {\n    this.service.message$.subscribe((message: string) => {\n      this.openDialog(message);\n    });\n  }\n\n  openDialog(message: string) {\n    this.dialogRef = this.dialog.open(HttpErrorDialogComponent, {\n      width: '50%',\n      data: message,\n    });\n\n    this.dialogRef.afterClosed().subscribe(() => {\n      this.service.modalAfterClosed(message);\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DomainListsResponseDTO } from '@models/domain-lists-response-dto.model';\nimport { DomainMapping } from '@models/domain-mapping.model';\nimport { DomainParameter } from '@models/domain-parameter.model';\nimport { DomainsService } from '@services/domains/domains.service';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-domain-manager',\n  templateUrl: './domain-manager.component.html',\n  styleUrls: ['./domain-manager.component.scss'],\n})\nexport class DomainManagerComponent implements OnInit, OnDestroy {\n  onDestroy$ = new Subject();\n  domainMappings: DomainMapping[] = [];\n  domainParameters: DomainParameter[] = [];\n  body: string = 'home';\n\n  constructor(\n    private readonly domainsService: DomainsService,\n    private readonly tabsService: TabsService,\n    private readonly snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    const tabContextData = this.tabsService.getActiveTabData().contextData;\n    if (tabContextData?.domains) {\n      this.domainMappings = [...tabContextData.domains.domainMappings];\n      this.domainParameters = [...tabContextData.domains.domainParameters];\n    } else {\n      this.fetchDomains();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.snackbar.dismiss();\n    this.onDestroy$.next();\n  }\n\n  handleDataChanged(updatedDomainParameters: DomainParameter[]) {\n    this.domainParameters = [...updatedDomainParameters];\n    this.tabsService.patchActiveTabContext({\n      domains: {\n        domainMappings: [...this.domainMappings],\n        domainParameters: [...this.domainParameters],\n      },\n    });\n    this.tabsService.setTabEditing(this.tabsService.activeTabId, true);\n  }\n\n  saveDomains() {\n    const saveDto: DomainListsResponseDTO = {\n      domainMappings: this.domainMappings,\n      domainParameters: this.domainParameters,\n    };\n\n    this.domainsService\n      .saveAll(saveDto)\n      .pipe(\n        tap(() => {\n          this.snackbar.dismiss();\n        }),\n        take(1)\n      )\n      .subscribe(\n        (response) => {\n          this.tabsService.setTabEditing(this.tabsService.activeTabId, false);\n          this.snackbar.open('Saved successfully!', 'Close');\n          this.domainMappings = response.domainMappings;\n          this.domainParameters = response.domainParameters;\n          this.tabsService.patchActiveTabContext({\n            domains: {\n              domainMappings: [...response.domainMappings],\n              domainParameters: [...response.domainParameters],\n            },\n          });\n        },\n        (data) => {\n          const errorMessage =\n            data.error?.errors[0]?.messages[0]?.description ??\n            'Unexpected error';\n          this.snackbar.open(errorMessage, 'Close');\n        }\n      );\n  }\n\n  fetchDomains() {\n    this.domainsService\n      .listAll()\n      .pipe(\n        tap(() => {\n          this.tabsService.setTabEditing(this.tabsService.activeTabId, false);\n          this.domainMappings = [];\n          this.domainParameters = [];\n        }),\n        take(1),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((response) => {\n        this.domainMappings = response.domainMappings;\n        this.domainParameters = response.domainParameters;\n        this.tabsService.patchActiveTabContext({\n          domains: {\n            domainMappings: [...response.domainMappings],\n            domainParameters: [...response.domainParameters],\n          },\n        });\n      });\n  }\n\n  closePage() {\n    this.tabsService.removeTab(this.tabsService.activeTabId);\n  }\n}\n","<div class=\"domain-manager\">\n  <div class=\"header\">\n    <h1\n      *ngIf=\"body === 'home'\"\n      class=\"title\">\n      {{ 'Domains (' + domainParameters.length + ')' }}\n    </h1>\n    <h1\n      *ngIf=\"body === 'mappings'\"\n      class=\"title\">\n      {{ 'Domains Mappings (' + domainMappings.length + ')' }}\n    </h1>\n    <div class=\"actions\">\n      <button\n        [matTooltip]=\"'save' | translate\"\n        (click)=\"saveDomains()\"\n        mat-mini-fab\n        id=\"button-save\"\n        type=\"submit\"\n        color=\"primary\">\n        <mat-icon>save</mat-icon>\n      </button>\n      <button\n        [matTooltip]=\"'reload' | translate\"\n        id=\"button-reload-tab\"\n        (click)=\"fetchDomains()\"\n        type=\"button\"\n        mat-mini-fab\n        color=\"primary\">\n        <mat-icon>sync</mat-icon>\n      </button>\n      <button\n        [matTooltip]=\"'close' | translate\"\n        id=\"button-close-tab\"\n        type=\"button\"\n        mat-mini-fab\n        (click)=\"closePage()\"\n        color=\"primary\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"body\">\n    <div class=\"body-selectors\">\n      <span\n        [matTooltip]=\"'displayDashboard' | translate\"\n        (click)=\"body = 'home'\"\n        class=\"selector\"\n        [ngClass]=\"{ active: body === 'home' }\"\n        ><mat-icon>home</mat-icon></span\n      >\n      <span\n        [matTooltip]=\"'displayDomainMapping' | translate\"\n        class=\"selector\"\n        (click)=\"body = 'mappings'\"\n        [ngClass]=\"{ active: body === 'mappings' }\"\n        ><mat-icon>analytics</mat-icon></span\n      >\n    </div>\n    <div class=\"body-container\">\n      <app-domain-parameters\n        *ngIf=\"body === 'home'\"\n        [data]=\"domainParameters\"\n        (onDataChanged)=\"handleDataChanged($event)\"></app-domain-parameters>\n      <app-domain-mappings\n        *ngIf=\"body === 'mappings'\"\n        [data]=\"domainMappings\"></app-domain-mappings>\n    </div>\n  </div>\n</div>\n","export enum EntityType {\n  EVENT = 'event',\n  ORGANIZATION = 'organization',\n  TRANSMISSION = 'transmission',\n  CUSTOMER_ORDER = 'customer-order',\n  RESOURCE = 'resource',\n  INCIDENT = 'incident',\n  PACKAGES = 'packages',\n  CITY = 'city',\n  CONTACT = 'contact',\n  RESOURCE_PROFILE = 'resource-profile',\n  CONTRACT = 'contract',\n  RATE_COST_CARD = 'rate-cost-card',\n  INVOICE = 'invoice',\n  BASIC_UNIT = 'basic-unit',\n  PRODUCT = 'product',\n  SCHEDULE = 'schedule',\n  EVC_VIEW = 'evc-view',\n  TOOLS = 'tools',\n  DISCOUNT_MANAGER = 'discount-manager',\n}\n\ninterface EntityProperties {\n  color: string;\n  icon: string;\n}\n\nexport const EVENT_PROPERTIES: EntityProperties = {\n  color: '#7ec9e9',\n  icon: 'stadium',\n};\n\nexport const ORGANIZATION_PROPERTIES: EntityProperties = {\n  color: '#0170a5',\n  icon: 'foundation',\n};\n\nexport const TRANSMISSION_PROPERTIES: EntityProperties = {\n  color: '#1b4098',\n  icon: 'settings_input_antenna',\n};\n\nexport const CUSTOMER_ORDER_PROPERTIES: EntityProperties = {\n  color: '#e21560',\n  icon: 'shopping_cart_checkout',\n};\n\nexport const RESOURCE_PROPERTIES: EntityProperties = {\n  color: '#01a475',\n  icon: 'cell_tower',\n};\n\nexport const INCIDENT_PROPERTIES: EntityProperties = {\n  color: '#ff0000',\n  icon: 'leak_remove',\n};\n\nexport const PACKAGES_PROPERTIES: EntityProperties = {\n  color: '#e3f5e7',\n  icon: 'savings',\n};\n\nexport const CITY_PROPERTIES: EntityProperties = {\n  color: '#ffb226',\n  icon: 'location_city',\n};\n\nexport const CONTACT_PROPERTIES: EntityProperties = {\n  color: '#a46c55',\n  icon: 'phone',\n};\n\nexport const RESOURCE_PROFILE_PROPERTIES: EntityProperties = {\n  color: '#e17c1a',\n  icon: 'extension',\n};\n\nexport const CONTRACT_PROPERTIES: EntityProperties = {\n  color: '#1ab11d',\n  icon: 'history_edu',\n};\n\nexport const RATE_COST_CARD_PROPERTIES: EntityProperties = {\n  color: '#884690',\n  icon: 'currency_exchange',\n};\n\nexport const INVOICE_PROPERTIES: EntityProperties = {\n  color: '#006666',\n  icon: 'euro',\n};\n\nexport const BASIC_UNIT_PROPERTIES: EntityProperties = {\n  color: '#0077bb',\n  icon: 'save',\n};\n\nexport const PRODUCT_PROPERTIES: EntityProperties = {\n  color: '#e11a2f',\n  icon: 'shopping_cart',\n};\n\nexport const SCHEDULE_PROPERTIES: EntityProperties = {\n  color: '#e14314',\n  icon: 'calendar_month',\n};\n\nexport const EVC_VIEW_PROPERTIES: EntityProperties = {\n  color: '#05525c',\n  icon: 'satellite_alt',\n};\n\nexport const TOOLS_PROPERTIES: EntityProperties = {\n  color: '#7b7b7d',\n  icon: 'settings',\n};\n\nexport const propertiesByEntityType: Map<EntityType, EntityProperties> =\n  new Map([\n    [EntityType.EVENT, EVENT_PROPERTIES],\n    [EntityType.ORGANIZATION, ORGANIZATION_PROPERTIES],\n    [EntityType.TRANSMISSION, TRANSMISSION_PROPERTIES],\n    [EntityType.CUSTOMER_ORDER, CUSTOMER_ORDER_PROPERTIES],\n    [EntityType.RESOURCE, RESOURCE_PROPERTIES],\n    [EntityType.PACKAGES, PACKAGES_PROPERTIES],\n    [EntityType.CITY, CITY_PROPERTIES],\n    [EntityType.CONTACT, CONTACT_PROPERTIES],\n    [EntityType.RESOURCE_PROFILE, RESOURCE_PROFILE_PROPERTIES],\n    [EntityType.CONTRACT, CONTRACT_PROPERTIES],\n    [EntityType.RATE_COST_CARD, RATE_COST_CARD_PROPERTIES],\n    [EntityType.INVOICE, INVOICE_PROPERTIES],\n    [EntityType.BASIC_UNIT, BASIC_UNIT_PROPERTIES],\n    [EntityType.PRODUCT, PRODUCT_PROPERTIES],\n    [EntityType.SCHEDULE, SCHEDULE_PROPERTIES],\n    [EntityType.EVC_VIEW, EVC_VIEW_PROPERTIES],\n    [EntityType.INCIDENT, INCIDENT_PROPERTIES],\n    [EntityType.TOOLS, TOOLS_PROPERTIES],\n  ]);\n","export enum UserGroup {\n  EVC = 'EVC',\n  FINANCE = 'FINANCE',\n  CUSTOMER_SERVICE_DESK = 'CSD',\n  PLANNING = 'PLANNING',\n  PROJECT_MANAGER = 'PM',\n  NEWS = 'NEWS',\n  RADIO = 'RADIO',\n}\n","import { appRoutes } from '@constants/app-routes';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { SearchEventComponent } from 'src/app/pages/search-event/search-event.component';\nimport { SearchOrganizationComponent } from 'src/app/pages/search-organization/search-organization.component';\nimport {\n  EVENT_PROPERTIES,\n  EntityType,\n  PRODUCT_PROPERTIES,\n  TRANSMISSION_PROPERTIES,\n} from '../../../../../constants/entities';\nimport { MenuDivider, NeosMenuItem } from '../../menu/menu.component';\n\nexport const getSearchMenu = (tabsService: TabsService): NeosMenuItem[] => [\n  // {\n  //   icon: CUSTOMER_ORDER_PROPERTIES.icon,\n  //   iconColor: CUSTOMER_ORDER_PROPERTIES.color,\n  //   labelTranslateKey: 'searchCustomerOrder',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: TRANSMISSION_PROPERTIES.icon,\n  //   iconColor: TRANSMISSION_PROPERTIES.color,\n  //   labelTranslateKey: 'searchTransmission',\n  // },\n  // {\n  //   icon: 'star',\n  //   iconColor: TRANSMISSION_PROPERTIES.color,\n  //   labelTranslateKey: 'searchTransmissionFavourites',\n  // },\n  MenuDivider,\n  {\n    icon: EVENT_PROPERTIES.icon,\n    iconColor: EVENT_PROPERTIES.color,\n    labelTranslateKey: 'searchEvent',\n    callback: () => {\n      tabsService.addTab(\n        'searchEvent',\n        SearchEventComponent,\n        EntityType.EVENT,\n        {},\n        [appRoutes.SEARCH]\n      );\n    },\n  },\n  {\n    icon: PRODUCT_PROPERTIES.icon,\n    iconColor: PRODUCT_PROPERTIES.color,\n    labelTranslateKey: 'searchOrganization',\n    callback: () => {\n      tabsService.addTab(\n        'searchOrganization',\n        SearchOrganizationComponent,\n        EntityType.ORGANIZATION,\n        {},\n        [appRoutes.SEARCH]\n      );\n    },\n  },\n  MenuDivider,\n  {\n    icon: TRANSMISSION_PROPERTIES.icon,\n    iconColor: TRANSMISSION_PROPERTIES.color,\n    labelTranslateKey: 'searchPackages',\n  },\n\n  // {\n  //   icon: CONTACT_PROPERTIES.icon,\n  //   iconColor: CONTACT_PROPERTIES.color,\n  //   labelTranslateKey: 'searchContact',\n  // },\n  // {\n  //   icon: CITY_PROPERTIES.icon,\n  //   iconColor: CITY_PROPERTIES.color,\n  //   labelTranslateKey: 'searchCity',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: RESOURCE_PROPERTIES.icon,\n  //   iconColor: RESOURCE_PROPERTIES.color,\n  //   labelTranslateKey: 'searchResource',\n  // },\n  // {\n  //   icon: RESOURCE_PROFILE_PROPERTIES.icon,\n  //   iconColor: RESOURCE_PROFILE_PROPERTIES.color,\n  //   labelTranslateKey: 'searchResourceProfile',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: CONTRACT_PROPERTIES.icon,\n  //   iconColor: CONTRACT_PROPERTIES.color,\n  //   labelTranslateKey: 'searchContract',\n  // },\n  // {\n  //   icon: RATE_COST_CARD_PROPERTIES.icon,\n  //   iconColor: RATE_COST_CARD_PROPERTIES.color,\n  //   labelTranslateKey: 'searchRateCostCard',\n  // },\n  // {\n  //   icon: INVOICE_PROPERTIES.icon,\n  //   iconColor: INVOICE_PROPERTIES.color,\n  //   labelTranslateKey: 'searchInvoice',\n  // },\n  // {\n  //   icon: INVOICE_PROPERTIES.icon,\n  //   iconColor: INVOICE_PROPERTIES.color,\n  //   labelTranslateKey: 'searchInvoiceFavourites',\n  // },\n  // {\n  //   icon: BASIC_UNIT_PROPERTIES.icon,\n  //   iconColor: BASIC_UNIT_PROPERTIES.color,\n  //   labelTranslateKey: 'searchBasicUnit',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: PRODUCT_PROPERTIES.icon,\n  //   iconColor: PRODUCT_PROPERTIES.color,\n  //   labelTranslateKey: 'searchProduct',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: SCHEDULE_PROPERTIES.icon,\n  //   iconColor: SCHEDULE_PROPERTIES.color,\n  //   labelTranslateKey: 'searchSchedule',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: EVC_VIEW_PROPERTIES.icon,\n  //   iconColor: EVC_VIEW_PROPERTIES.color,\n  //   labelTranslateKey: 'searchEVCViewFavourite',\n  // },\n  // MenuDivider,\n  // {\n  //   icon: INCIDENT_PROPERTIES.icon,\n  //   iconColor: INCIDENT_PROPERTIES.color,\n  //   labelTranslateKey: 'searchIncident',\n  // },\n];\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DatetimeConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-datetime',\n  templateUrl: './datetime.component.html',\n  styleUrls: ['./datetime.component.scss'],\n})\nexport class DatetimeComponent {\n  private _field!: DatetimeConfiguration;\n\n  get field(): DatetimeConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: DatetimeConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\">\n  <mat-label>{{ field.label }}</mat-label>\n\n  <mat-datetimepicker-toggle\n    [for]=\"datetimePicker\"\n    matSuffix></mat-datetimepicker-toggle>\n  <mat-datetimepicker\n    #datetimePicker\n    [type]=\"field.pickerType || 'date'\"\n    [multiYearSelector]=\"field.multiYearSelector || false\"\n    [twelvehour]=\"field.twelvehour || false\"\n    [startView]=\"field.startView || 'month'\"\n    [mode]=\"field.mode || 'portrait'\"\n    [timeInterval]=\"field.timeInterval || 1\"\n    [ariaNextMonthLabel]=\"field.ariaNextMonthLabel || 'Next month'\"\n    [ariaPrevMonthLabel]=\"field.ariaPrevMonthLabel || 'Previous month'\"\n    [ariaNextYearLabel]=\"field.ariaNextYearLabel || 'Next year'\"\n    [ariaPrevYearLabel]=\"field.ariaPrevYearLabel || 'Previous year'\"\n    [preventSameDateTimeSelection]=\"field.preventSameDateTimeSelection || false\"\n    [panelClass]=\"field.panelClass || ''\"\n    [startAt]=\"field.startAt\"\n    [openOnFocus]=\"field.openOnFocus || false\">\n  </mat-datetimepicker>\n\n  <input\n    matInput\n    talanSetDateOnKeyPress\n    [formControl]=\"control\"\n    [matDatetimepicker]=\"datetimePicker\"\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\"\n    autocomplete=\"false\" />\n\n  <mat-hint\n    *ngIf=\"field.hintStart\"\n    align=\"start\"\n    >{{ field.hintStart }}</mat-hint\n  >\n  <mat-hint\n    *ngIf=\"field.hintEnd\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n\n  <mat-error\n    *ngIf=\"control.invalid\"\n    [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n</mat-form-field>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { NeosMenuItem } from '@shared/components/menu/menu.component';\nimport { ToolbarMenuItemsService } from '@shared/components/toolbar/toolbar-menu-items.service';\n\nexport interface ToolbarMenuConfig {\n  name?: string;\n  translateKey?: string;\n  elements: NeosMenuItem[];\n}\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent {\n  @Output() onGearClick = new EventEmitter<void>();\n  labeledMenus: ToolbarMenuConfig[] = [];\n  iconMenus: ToolbarMenuConfig[] = [];\n\n  constructor(\n    private readonly toolbarMenuItemService: ToolbarMenuItemsService\n  ) {\n    this.labeledMenus = this.toolbarMenuItemService.getLabeledMenus();\n    this.iconMenus = this.toolbarMenuItemService.getIconMenus();\n  }\n}\n","<div class=\"toolbar-container\">\n  <div class=\"left-actions\">\n    <button\n      id=\"gears-menu\"\n      mat-icon-button\n      aria-label=\"settings menu\"\n      (click)=\"onGearClick.emit()\">\n      <mat-icon>settings</mat-icon>\n    </button>\n    <ng-container *ngFor=\"let labelMenu of labeledMenus\">\n      <app-menu\n        [id]=\"labelMenu.translateKey!.toLocaleLowerCase() + '-menu'\"\n        [labelTranslateKey]=\"labelMenu.translateKey!\"\n        [items]=\"labelMenu.elements\">\n      </app-menu>\n    </ng-container>\n  </div>\n\n  <div class=\"clocks\">\n    <app-clock\n      class=\"washington\"\n      clockTimezone=\"-4\"\n      timeZoneLabel=\"WHST\"></app-clock\n    ><app-clock\n      class=\"geneve\"\n      clockTimezone=\"+2\"\n      timeZoneLabel=\"GNVE\"></app-clock\n    ><app-clock\n      class=\"singapore\"\n      clockTimezone=\"+8\"\n      timeZoneLabel=\"SGPR\"></app-clock>\n  </div>\n\n  <div class=\"right-actions\">\n    <app-quick-search></app-quick-search>\n\n    <!--TODO: Program real behaviour of this badged button-->\n    <button\n      mat-icon-button\n      aria-label=\"warnings count 0\"\n      [matBadge]=\"0\"\n      [matBadgeHidden]=\"true\"\n      disabled>\n      <mat-icon>warning</mat-icon>\n    </button>\n\n    <app-clock\n      class=\"date\"\n      [showDate]=\"true\"\n      [showSeconds]=\"true\"></app-clock>\n\n    <ng-container *ngFor=\"let iconMenu of iconMenus\">\n      <app-menu\n        [id]=\"iconMenu.name!.toLocaleLowerCase() + '-menu'\"\n        [label]=\"iconMenu.name\"\n        [items]=\"iconMenu.elements\"\n        [isIconMode]=\"true\">\n      </app-menu>\n    </ng-container>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { RadioConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n})\nexport class RadioComponent {\n  private _field!: RadioConfiguration;\n\n  get field(): RadioConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: RadioConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  *ngIf=\"!field.noFormField\"\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\"\n  floatLabel=\"always\"\n  class=\"mat-form-field--no-underline\">\n  <mat-label *ngIf=\"field.label\">{{ field.label }}</mat-label>\n\n  <input\n    matInput\n    hidden\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\" />\n\n  <ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n\n  <mat-hint align=\"start\">\n    <ng-container\n      *ngIf=\"!control.touched || (field.hintStart && control.valid)\">\n      {{ field.hintStart }}\n    </ng-container>\n\n    <!-- Fixing mat-form-field problem not show mat-error with this trick -->\n    <ng-container *ngIf=\"control.touched && control.invalid\">\n      <mat-error\n        [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n    </ng-container>\n  </mat-hint>\n\n  <mat-hint\n    *ngIf=\"!control.touched || (field.hintEnd && control.valid)\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n</mat-form-field>\n\n<div *ngIf=\"field.noFormField\">\n  <label>{{ field.label }} </label\n  ><ng-template [ngTemplateOutlet]=\"default\"></ng-template>\n</div>\n\n<!-- Default template -->\n<ng-template #default>\n  <mat-radio-group\n    [formControl]=\"control\"\n    [required]=\"required\">\n    <mat-radio-button\n      *ngFor=\"let option of field.options\"\n      [labelPosition]=\"field.labelPosition || 'after'\"\n      [value]=\"option.value\"\n      >{{ option.text }}</mat-radio-button\n    >\n  </mat-radio-group>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    const browserLang = translate.getBrowserLang();\n\n    translate.setDefaultLang('en');\n    translate.use(browserLang.match(/en/) ? browserLang : 'en');\n  }\n}\n","<talan-http-error></talan-http-error>\n\n<router-outlet></router-outlet>\n","const ngDevMode = undefined;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Subject } from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nexport class SelectionModel<T> {\n  /** Currently-selected values. */\n  private _selection = new Set<T>();\n\n  /** Keeps track of the deselected options that haven't been emitted by the change event. */\n  private _deselectedToEmit: T[] = [];\n\n  /** Keeps track of the selected options that haven't been emitted by the change event. */\n  private _selectedToEmit: T[] = [];\n\n  /** Cache for the array value of the selected items. */\n  private _selected!: T[] | null;\n\n  /** Selected values. */\n  get selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n\n  /** Event emitted when the value has changed. */\n  readonly changed = new Subject<SelectionChange<T>>();\n\n  constructor(\n    private _multiple = false,\n    initiallySelectedValues?: T[],\n    private _emitChanges = true,\n    public compareWith?: (o1: T, o2: T) => boolean\n  ) {\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach((value) => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n\n  /**\n   * Selects a value or an array of values.\n   * @param values The values to select\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  select(...values: T[]): boolean | void {\n    this._verifyValueAssignment(values);\n    values.forEach((value) => this._markSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n\n  /**\n   * Deselects a value or an array of values.\n   * @param values The values to deselect\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  deselect(...values: T[]): boolean | void {\n    this._verifyValueAssignment(values);\n    values.forEach((value) => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n\n  /**\n   * Sets the selected values\n   * @param values The new selected values\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  setSelection(...values: T[]): boolean | void {\n    this._verifyValueAssignment(values);\n    const oldValues = this.selected;\n    const newSelectedSet = new Set(values);\n    values.forEach((value) => this._markSelected(value));\n    oldValues\n      .filter((value) => !newSelectedSet.has(value))\n      .forEach((value) => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n\n  /**\n   * Toggles a value between selected and deselected.\n   * @param value The value to toggle\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  toggle(value: T): boolean | void {\n    return this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n\n  /**\n   * Clears all of the selected values.\n   * @param flushEvent Whether to flush the changes in an event.\n   *   If false, the changes to the selection will be flushed along with the next event.\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  clear(flushEvent = true): boolean | void {\n    this._unmarkAll();\n    const changed = this._hasQueuedChanges();\n    if (flushEvent) {\n      this._emitChangeEvent();\n    }\n    return changed;\n  }\n\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value: T): boolean {\n    return this._selection.has(this._getConcreteValue(value));\n  }\n\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue(): boolean {\n    return !this.isEmpty();\n  }\n\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate?: (a: T, b: T) => number): void {\n    if (this._multiple && this.selected) {\n      this._selected!.sort(predicate);\n    }\n  }\n\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n\n  /** Emits a change event and clears the records of selected and deselected values. */\n  private _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit,\n      });\n\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n\n  /** Selects a value. */\n  private _markSelected(value: T) {\n    value = this._getConcreteValue(value);\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n\n      if (!this.isSelected(value)) {\n        this._selection.add(value);\n      }\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Deselects a value. */\n  private _unmarkSelected(value: T) {\n    value = this._getConcreteValue(value);\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n\n  /** Clears out the selected values. */\n  private _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach((value) => this._unmarkSelected(value));\n    }\n  }\n\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  private _verifyValueAssignment(values: T[]) {\n    if (\n      values.length > 1 &&\n      !this._multiple &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)\n    ) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n\n  /** Whether there are queued up change to be emitted. */\n  private _hasQueuedChanges() {\n    return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n  }\n\n  /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n  private _getConcreteValue(inputValue: T): T {\n    if (!this.compareWith) {\n      return inputValue;\n    } else {\n      for (let selectedValue of this._selection) {\n        if (this.compareWith!(inputValue, selectedValue)) {\n          return selectedValue;\n        }\n      }\n      return inputValue;\n    }\n  }\n}\n\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * @docs-private\n */\nexport interface SelectionChange<T> {\n  /** Model that dispatched the event. */\n  source: SelectionModel<T>;\n  /** Options that were added to the model. */\n  added: T[];\n  /** Options that were removed from the model. */\n  removed: T[];\n}\n\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nexport function getMultipleValuesInSingleSelectionError() {\n  return Error(\n    'Cannot pass multiple values into SelectionModel with single-value mode.'\n  );\n}\n","import { AbstractControl, FormGroup } from '@angular/forms';\n\n/**\n * mat-hint & mat-error inside mat-form-field not working\n *\n * It's a Angular Material < 12 bug\n *\n * Instead use this function\n */\nexport const errorControlMessage = (control: AbstractControl) => {\n  if (!control || !control.errors) {\n    return '';\n  }\n\n  if (control.errors && control.hasError('minlength')) {\n    return `Min length is <span class=\"error-minlength\">${control.errors.minlength.requiredLength}</span>, actual length: ${control.errors.minlength.actualLength}`;\n  }\n\n  if (control.errors && control.hasError('maxlength')) {\n    return `Max length is ${control.errors.maxlength.requiredLength}, actual length: ${control.errors.maxlength.actualLength}`;\n  }\n\n  if (control.errors && control.hasError('min')) {\n    return `Minimum value is ${control.errors.min.requiredLength}, actual length: ${control.errors.min.actualLength}`;\n  }\n\n  if (control.errors && control.hasError('max')) {\n    return `Maximum value is ${control.errors.max.requiredLength}, actual length: ${control.errors.max.actualLength}`;\n  }\n\n  if (control.errors && control.hasError('email')) {\n    return `The email \"${control.value}\" is not valid`;\n  }\n\n  if (control.errors && control.hasError('pattern')) {\n    return `Pattern is not valid, required pattern is ${control.errors.pattern.requiredPattern}`;\n  }\n\n  if (control.errors && control.hasError('required')) {\n    return `Required`;\n  }\n\n  return 'There is an uknown error';\n};\n\nexport const getFormValidationErrors = (form: FormGroup) => {\n  Object.keys(form.controls).forEach((key) => {\n    const controlErrors = form.get(key)?.errors;\n\n    if (controlErrors) {\n      Object.keys(controlErrors).forEach((keyError) => {\n        console.log(\n          'Key control: ' + key + ', keyError: ' + keyError + ', err value: ',\n          controlErrors[keyError]\n        );\n      });\n    }\n  });\n};\n","import { AfterViewInit, Component, Input, OnDestroy } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { EventSearchCriteria, EventSearchResultData } from '@models/models';\nimport { Note } from '@models/note.model';\nimport { EventsService } from '@services/events/events.service';\nimport { NotesService } from '@services/notes/notes.service';\nimport { TabDetail, TabsService } from '@services/tabs/tabs.service';\nimport { Observable, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport {\n  ColumnsConfiguration,\n  DataColumnName,\n  NoDataColumnName,\n} from 'table-generator';\n\n@Component({\n  selector: 'app-search-event',\n  templateUrl: './search-event.component.html',\n  styleUrls: ['./search-event.component.scss'],\n})\nexport class SearchEventComponent implements AfterViewInit, OnDestroy {\n  @Input() tabData!: TabDetail;\n\n  private _onDestroy$ = new Subject<void>();\n\n  data: EventSearchResultData[] = [];\n  allColumns: DataColumnName[] = [\n    'notes',\n    'no',\n    'periodBegin',\n    'periodEnd',\n    'description',\n    'eventType',\n    'city',\n    'status',\n    'deadline',\n    'category',\n    'subCategory',\n    'office',\n    'quoteId',\n    'isPMO',\n    NoDataColumnName.columnsSelector,\n  ];\n\n  columnsConfiguration: ColumnsConfiguration = {\n    notes: {\n      translateKey: 'notes',\n      type: 'tooltip',\n      searchMethod: (row: EventSearchResultData) =>\n        this.getNoteDescriptionsbyId(row.id),\n      icon: 'assignment',\n    },\n    no: {\n      translateKey: 'eventNo',\n      type: 'number',\n    },\n\n    periodBegin: {\n      translateKey: 'startDate',\n      type: 'date',\n      format: 'dd/MM/yyyy',\n    },\n    periodEnd: {\n      translateKey: 'endDate',\n      type: 'date',\n      format: 'dd/MM/yyyy',\n    },\n    description: {\n      translateKey: 'description',\n      type: 'string',\n    },\n    eventType: {\n      translateKey: 'type',\n      type: 'string',\n    },\n    city: {\n      translateKey: 'city',\n      type: 'string',\n    },\n    status: {\n      translateKey: 'status',\n      type: 'string',\n    },\n    deadline: {\n      type: 'date',\n      format: 'dd/MM/yyyy',\n      translateKey: 'deadline',\n    },\n    category: {\n      translateKey: 'category',\n      type: 'string',\n    },\n    subCategory: {\n      translateKey: 'subCategory',\n      type: 'string',\n    },\n    office: {\n      translateKey: 'office',\n      type: 'string',\n    },\n    quoteId: {\n      translateKey: 'quoteId',\n      type: 'string',\n    },\n    isPMO: {\n      translateKey: 'isPMO',\n      type: 'boolean',\n    },\n  };\n\n  constructor(\n    readonly tabsService: TabsService,\n    private eventsService: EventsService,\n    private notesService: NotesService\n  ) {}\n\n  ngAfterViewInit(): void {\n    const tabContext = this.tabsService.getActiveTabData().contextData;\n    if (tabContext) {\n      if (tabContext.results) {\n        this.data = tabContext.results;\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  getNoteDescriptionsbyId(id: number): Observable<string> {\n    return this.notesService.getNotesByEntityId(id, EntityType.EVENT).pipe(\n      map((notes: Note[]) => {\n        let formattedNoteDescriptions: string = '';\n        notes.forEach((note, index) => {\n          formattedNoteDescriptions += note.description;\n          if (index !== notes.length - 1) {\n            formattedNoteDescriptions += '\\n --------- \\n';\n          }\n        });\n\n        formattedNoteDescriptions +=\n          '\\n --------- \\nThere is at least one attachment in the notes';\n\n        return formattedNoteDescriptions;\n      })\n    );\n  }\n\n  fetchDataSource(formValue: EventSearchCriteria) {\n    this.eventsService\n      .searchEvents(formValue)\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((results) => {\n        this.tabsService.patchActiveTabContext({\n          results,\n        });\n        this.data = results;\n      });\n  }\n}\n","<app-form (onSearch)=\"fetchDataSource($event)\"></app-form>\n\n<talan-table-generator\n  [data]=\"data\"\n  [allColumns]=\"allColumns\"\n  [columnsConfiguration]=\"columnsConfiguration\"></talan-table-generator>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'talan-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent {\n  constructor() {}\n}\n","<mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface ConfirmationDialogData {\n  titleTranslateKey: string;\n  contentTranslateKey?: string;\n  titleIcon?: string;\n}\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss'],\n})\nexport class ConfirmationDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogData>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogData\n  ) {}\n}\n","<div class=\"confirmation-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>\n      {{ data.titleTranslateKey | translate }}\n    </span>\n\n    <mat-icon\n      *ngIf=\"data.titleIcon\"\n      color=\"primary\"\n      class=\"title-icon\"\n      >{{ data.titleIcon }}</mat-icon\n    >\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <h3>{{ data.contentTranslateKey || 'wantToContinue' | translate }}</h3>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"false\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <button\n      id=\"button-accept\"\n      mat-raised-button\n      color=\"primary\"\n      [mat-dialog-close]=\"true\"\n      cdkFocusInitial>\n      {{ 'ok' | translate }}\n    </button>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  AsyncValidatorFn,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormGroupDirective,\n  ValidatorFn,\n} from '@angular/forms';\nimport { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { DatetimeComponent } from './components/datetime/datetime.component';\nimport { EmptyComponent } from './components/empty/empty.component';\nimport { InputComponent } from './components/input/input.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport {\n  AutocompleteConfiguration,\n  CheckboxConfiguration,\n  DatetimeConfiguration,\n  EmptyConfiguration,\n  FieldConfiguration,\n  InputConfiguration,\n  RadioConfiguration,\n  SelectConfiguration,\n  SliderConfiguration,\n  TextareaConfiguration,\n  ToggleConfiguration,\n} from './models/models';\n\nconst DEFAULT_MAP_COMPONENTS = {\n  autocomplete: AutocompleteComponent,\n  checkbox: CheckboxComponent,\n  datetime: DatetimeComponent,\n  empty: EmptyComponent,\n  input: InputComponent,\n  radio: RadioComponent,\n  select: SelectComponent,\n  slider: SliderComponent,\n  textarea: TextareaComponent,\n  toggle: ToggleComponent,\n};\n\n@Component({\n  selector: 'talan-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss'],\n})\nexport class DynamicFormComponent {\n  /**\n   * The root formGroup\n   */\n  formGroup!: FormGroup;\n\n  /**\n   * The form root directive (allow all form abilities)\n   *\n   * - `form.control` is the root `formGroup`\n   * - `form.ngSubmit.emit()` triggers `formSubmit` event\n   */\n  private _form!: FormGroupDirective;\n\n  @Output() changes = new EventEmitter<FormGroupDirective>();\n\n  @ViewChild(FormGroupDirective) set form(form: FormGroupDirective) {\n    this._form = form;\n    this.changes.emit(form);\n  }\n\n  get form() {\n    return this._form;\n  }\n\n  // Form submit\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() submit = new EventEmitter<FormGroupDirective>();\n\n  onSubmit() {\n    if (this.formGroup.invalid) {\n      // validate DOM fields\n      this.formGroup.markAllAsTouched();\n    } else {\n      this.submit.emit(this.form);\n    }\n  }\n\n  private _preventEnterSubmit = false;\n\n  @Input() set preventEnterSubmit(value: boolean) {\n    this._preventEnterSubmit = value;\n  }\n\n  get preventEnterSubmit() {\n    return this._preventEnterSubmit;\n  }\n\n  @Output() enter = new EventEmitter<FormGroupDirective>();\n\n  onEnter() {\n    this.enter.emit(this.form);\n\n    if (!this.preventEnterSubmit) {\n      this.onSubmit();\n    } else {\n      if (this.formGroup.invalid) {\n        // validate DOM fields\n        this.form.control.markAllAsTouched();\n      }\n    }\n  }\n\n  /**\n   * The root form updateOn\n   *\n   * Property order is importamt\n   *\n   * @example\n   * // Error\n   * <talan-dynamic-form [fields]=\"fields\" updateOn=\"blur\"></talan-dynamic-form>\n   *\n   * // Good\n   * <talan-dynamic-form updateOn=\"blur\" [fields]=\"fields\"></talan-dynamic-form>\n   *\n   */\n  private _updateOn: 'change' | 'blur' | 'submit' = 'change';\n\n  @Input() set updateOn(value: 'change' | 'blur' | 'submit') {\n    this._updateOn = value || 'change';\n  }\n\n  get updateOn(): 'change' | 'blur' | 'submit' {\n    return this._updateOn;\n  }\n\n  /**\n   * The root form validators\n   *\n   * @see ValidatorFn\n   */\n  private _validators!: ValidatorFn[];\n\n  @Input() set validators(value: ValidatorFn[]) {\n    this._validators = value;\n  }\n\n  get validators(): ValidatorFn[] {\n    return this._validators;\n  }\n\n  /**\n   * The root form asyncValidators\n   *\n   * @see AsyncValidatorFn\n   */\n  private _asyncValidators!: AsyncValidatorFn[];\n\n  set asyncValidators(value: AsyncValidatorFn[]) {\n    this._asyncValidators = value;\n  }\n\n  get asyncValidators(): AsyncValidatorFn[] {\n    return this._asyncValidators;\n  }\n\n  /**\n   * The root form fields configuration\n   *\n   * @see FieldConfiguration\n   */\n  private _fields!: FieldConfiguration[];\n\n  @Input() set fields(value: FieldConfiguration[]) {\n    if (!Array.isArray(value)) {\n      // value should be an array\n      value = [];\n\n      console.warn(\n        'Invalid `fields` format, should be an array. `fields` is an empty array now.\\nYou should control this warning initializing `fields = []` or use `<talan-dynamic-form *ngIf=\"fields\" [fields]=\"fields\">`'\n      );\n    }\n\n    value.forEach((field: FieldConfiguration) => {\n      this.isValidField(field);\n    });\n\n    this._fields = value;\n\n    this.formGroup = this.updateFormGroup();\n  }\n\n  get fields(): FieldConfiguration[] {\n    return this._fields;\n  }\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  /**\n   * Create FormGroup with the fields configuration\n   *\n   * _Note: The 'empty' component has no control_\n   */\n  private updateFormGroup() {\n    const group: { [key: string]: FormControl } = {};\n\n    this.fields.forEach((field) => {\n      this.isValidField(field);\n\n      if (field.type === 'empty') {\n        // console.warn(\"'empty' component does not CREATE control\");\n        return;\n      }\n\n      // In the future it will be able to create other AbstractControl --> FormArray & FormGroup inside this.form\n      group[field.name] = new FormControl(\n        { value: field.value || null, disabled: field.disabled },\n        {\n          validators: field.validators,\n          asyncValidators: field.asyncValidators,\n          updateOn: field.updateOn,\n        }\n      );\n    });\n\n    return this.formBuilder.group(group, {\n      validators: this.validators,\n      asyncValidators: this.asyncValidators,\n      updateOn: this.updateOn,\n    });\n  }\n\n  /**\n   * Validates if it is a valid field\n   */\n  isValidField(field: Pick<FieldConfiguration, 'type'>) {\n    if (!field.type || !DEFAULT_MAP_COMPONENTS[field.type]) {\n      throw new Error(`Invalid field type ${field.type}`);\n    }\n\n    return true;\n  }\n\n  /**\n   * @returns Component instance\n   */\n  getComponent(field: FieldConfiguration) {\n    this.isValidField(field);\n\n    return DEFAULT_MAP_COMPONENTS[field.type];\n  }\n\n  /**\n   * Casting FieldConfiguration\n   */\n  getFieldConfiguration(field: FieldConfiguration) {\n    this.isValidField(field);\n\n    if (field.type === 'checkbox') {\n      return field as CheckboxConfiguration;\n    }\n\n    if (field.type === 'datetime') {\n      return field as DatetimeConfiguration;\n    }\n\n    if (field.type === 'radio') {\n      return field as RadioConfiguration;\n    }\n\n    if (field.type === 'input') {\n      return field as InputConfiguration;\n    }\n\n    if (field.type === 'select') {\n      return field as SelectConfiguration;\n    }\n\n    if (field.type === 'slider') {\n      return field as SliderConfiguration;\n    }\n\n    if (field.type === 'textarea') {\n      return field as TextareaConfiguration;\n    }\n\n    if (field.type === 'toggle') {\n      return field as ToggleConfiguration;\n    }\n\n    if (field.type === 'autocomplete') {\n      return field as AutocompleteConfiguration;\n    }\n\n    // 'empty'\n    return field as EmptyConfiguration;\n  }\n\n  /**\n   * Casting FormControl\n   */\n  getFormControl(field: FieldConfiguration) {\n    this.isValidField(field);\n\n    if (field.type === 'empty') {\n      // console.warn(\"'empty' component does not GET control\");\n\n      return;\n    }\n\n    return this.formGroup.get(field.name) as FormControl;\n  }\n}\n","<form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"onSubmit()\"\n  novalidate\n  (keyup.enter)=\"onEnter()\">\n  <ng-container *ngFor=\"let field of fields; let index = index\">\n    <ng-container\n      *ngIf=\"isValidField(field)\"\n      talanDynamicComponent\n      [index]=\"index\"\n      [component]=\"getComponent(field)\"\n      [inputs]=\"{\n        field: getFieldConfiguration(field),\n        control: getFormControl(field)\n      }\">\n    </ng-container>\n\n    <!-- <talan-empty\n      *ngIf=\"field.type === 'empty'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"></talan-empty>\n\n    <talan-input\n      *ngIf=\"field.type === 'input'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-input>\n\n    <talan-textarea\n      *ngIf=\"field.type === 'textarea'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-textarea>\n\n    <talan-select\n      *ngIf=\"field.type === 'select'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-select>\n\n    <talan-checkbox\n      *ngIf=\"field.type === 'checkbox'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-checkbox>\n\n    <talan-toggle\n      *ngIf=\"field.type === 'toggle'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-toggle>\n\n    <talan-radio\n      *ngIf=\"field.type === 'radio'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-radio>\n\n    <talan-slider\n      *ngIf=\"field.type === 'slider'\"\n      [ngClass]=\"computeClasses(field, index)\"\n      [style.width]=\"field.width\"\n      [field]=\"field\"\n      [control]=\"$any(form.get($any(field).name))\"></talan-slider> -->\n  </ng-container>\n</form>\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DomainItem } from '@models/domain-item.model';\nimport { Subject } from 'rxjs';\n\nexport interface DomainParameterItemDialogData {\n  domainItem?: DomainItem | null;\n  sequenceId: number;\n}\n\n@Component({\n  selector: 'app-domain-parameter-item-dialog',\n  templateUrl: './domain-parameter-item-dialog.component.html',\n  styleUrls: ['./domain-parameter-item-dialog.component.scss'],\n})\nexport class DomainParameterItemDialogComponent implements OnInit, OnDestroy {\n  private _onDestroy$ = new Subject<void>();\n  form!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<void>,\n    @Inject(MAT_DIALOG_DATA) public data: DomainParameterItemDialogData,\n    private readonly formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      sequence: new FormControl(this.data.sequenceId, [Validators.required]),\n      code: new FormControl(),\n      isoCode: new FormControl(),\n      externalCode: new FormControl(),\n      label: new FormControl(),\n      extView: new FormControl(false, [Validators.required]),\n      externalLabel: new FormControl(),\n      status: new FormControl('ACTIVE', [Validators.required]),\n    });\n\n    if (this.data.domainItem) {\n      this.form.patchValue(this.data.domainItem);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  formValueToDomainParameter() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const formValue = this.form.value;\n    const inputDomainItem = this.data.domainItem;\n\n    this.dialogRef.close({\n      code: formValue.code,\n      externalCode: formValue.externalCode,\n      externalLabel: formValue.externalLabel,\n      extView: formValue.extView,\n      id: inputDomainItem?.id ?? null,\n      isModified: true,\n      isoCode: formValue.isoCode,\n      itemStatus: formValue.status,\n      keyCode: inputDomainItem?.keyCode ?? null,\n      label: formValue.label,\n      name: formValue.label,\n      new: !inputDomainItem, // If no domain item is given, we are adding\n      sequence: formValue.sequence,\n      version: inputDomainItem?.version ?? 0,\n      isRemoved: false,\n    } as DomainItem);\n  }\n}\n","<form\n  [formGroup]=\"form\"\n  (ngSubmit)=\"formValueToDomainParameter()\"\n  class=\"add-domain-parameter-item-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'domainItem' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <div class=\"form-container\">\n      <mat-form-field>\n        <mat-label>{{ 'sequence' | translate | uppercase }}</mat-label>\n        <input\n          formControlName=\"sequence\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'code' | translate | uppercase }}</mat-label>\n        <input\n          formControlName=\"code\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'isoCode' | translate | uppercase }}</mat-label>\n        <input\n          formControlName=\"isoCode\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'label' | translate | uppercase }}</mat-label>\n        <input\n          formControlName=\"label\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'externalLabel' | translate | uppercase }}</mat-label>\n        <input\n          formControlName=\"externalLabel\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'status' | translate | uppercase }}</mat-label>\n        <mat-select\n          required\n          formControlName=\"status\">\n          <mat-option value=\"ACTIVE\">ACTIVE</mat-option>\n          <mat-option value=\"INACTIVE\">INACTIVE</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-checkbox\n        color=\"primary\"\n        labelPosition=\"before\"\n        formControlName=\"extView\"\n        >{{ 'published' | translate }}</mat-checkbox\n      >\n    </div>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <!-- @TRICK: Hidden trigger validation on enter -->\n    <button\n      *ngIf=\"form.invalid\"\n      type=\"submit\"\n      hidden>\n      {{ 'ok' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"form.invalid\"\n      type=\"submit\"\n      cdkFocusInitial>\n      {{ 'ok' | translate }}\n    </button>\n  </div>\n</form>\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserGroup } from '@constants/app-user-groups';\nimport { DomainEntity } from '@constants/domain-entities';\nimport { DomainItem } from '@models/domain-item.model';\nimport {\n  CityCombobox,\n  EventSearchCriteria,\n  MediaCombobox,\n  StatusCombobox,\n  YesNoOption,\n} from '@models/models';\nimport { DomainsService } from '@services/domains/domains.service';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport {\n  dateToLocalDate,\n  filterObjectArrayByProperty,\n} from '@shared/utils/helpers';\nimport { dateGreaterThan } from '@shared/validators/date-greater-than-validator';\nimport { Subject } from 'rxjs';\nimport { debounceTime, map, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Output() onSearch: EventEmitter<EventSearchCriteria> = new EventEmitter();\n  @Output() onClear: EventEmitter<void> = new EventEmitter();\n\n  form: FormGroup;\n  cities: CityCombobox[] = [];\n  eventTypes: DomainItem[] = [];\n  bureaus: DomainItem[] = [];\n  filteredCities!: CityCombobox[];\n  statuses = StatusCombobox;\n  medias = MediaCombobox;\n  optionsYesNo = YesNoOption;\n\n  private _onDestroy$ = new Subject<void>();\n  private _initialFormValue = {\n    no: null,\n    periodBegin: null,\n    periodEnd: null,\n    city: '',\n    eventTypeList: [],\n    statusList: [],\n    bureauList: [],\n    mediaList: [],\n    isParent: null,\n    IsPMO: null,\n    parent: null,\n    quoteId: '',\n    userGroups: [],\n  };\n\n  constructor(\n    private formBuilder: FormBuilder,\n    readonly tabsService: TabsService,\n    private route: ActivatedRoute,\n    private domainsService: DomainsService\n  ) {\n    this.form = this.formBuilder.group({\n      no: new FormControl(),\n      periodBegin: new FormControl(),\n      periodEnd: new FormControl(null, [dateGreaterThan('periodBegin')]),\n      city: new FormControl(),\n      eventTypeList: new FormControl(),\n      statusList: new FormControl(),\n      bureauList: new FormControl(),\n      mediaList: new FormControl(),\n      isParent: new FormControl(),\n      IsPMO: new FormControl(),\n      parent: new FormControl(),\n      quoteId: new FormControl(),\n      userGroups: new FormControl(),\n    });\n    this.form.setValue(this._initialFormValue);\n  }\n\n  ngOnInit(): void {\n    this.cities = this.route.snapshot.data.masterDataResolver.cities;\n\n    this.domainsService\n      .searchDomainEntityItems(DomainEntity.EVENT_TYPE)\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((eventTypes: DomainItem[]) => {\n        this.eventTypes = eventTypes;\n      });\n\n    this.domainsService\n      .searchDomainEntityItems(DomainEntity.BUREAU)\n      .pipe(takeUntil(this._onDestroy$))\n      .subscribe((bureaus: DomainItem[]) => {\n        this.bureaus = bureaus;\n      });\n\n    this.form\n      .get('city')!\n      .valueChanges.pipe(\n        map((inputData) =>\n          filterObjectArrayByProperty<CityCombobox>(\n            inputData,\n            this.cities,\n            'name'\n          )\n        ),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe((filteredCities) => {\n        this.filteredCities = filteredCities;\n      });\n  }\n\n  ngAfterViewInit(): void {\n    const tabContext = this.tabsService.getActiveTabData().contextData;\n    if (tabContext) {\n      if (tabContext.searchEventForm) {\n        this.form.patchValue(tabContext.searchEventForm);\n      }\n    }\n\n    this.form.valueChanges\n      .pipe(\n        debounceTime(500),\n        tap(() => {\n          this.tabsService.patchActiveTabContext({\n            searchEventForm: this.form.value,\n          });\n        }),\n        takeUntil(this._onDestroy$)\n      )\n      .subscribe();\n  }\n\n  search() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const eventSearchDto = this.form.value;\n    eventSearchDto.periodBegin = eventSearchDto.periodBegin\n      ? dateToLocalDate(eventSearchDto.periodBegin).splice(0, 3)\n      : null;\n    eventSearchDto.periodEnd = eventSearchDto.periodEnd\n      ? dateToLocalDate(eventSearchDto.periodEnd).splice(0, 3)\n      : null;\n    if (eventSearchDto.isParent === null) {\n      eventSearchDto.isParent = false;\n    }\n\n    if (eventSearchDto.parent === null) {\n      eventSearchDto.parent = false;\n    }\n    eventSearchDto.userGroups = [\n      UserGroup.CUSTOMER_SERVICE_DESK,\n      UserGroup.FINANCE,\n    ];\n\n    this.onSearch.emit(eventSearchDto);\n  }\n\n  clear(event: Event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.form.reset(this._initialFormValue);\n    this.onClear.emit();\n  }\n\n  closeTab(event: Event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.tabsService.removeTab(this.tabsService.activeTabId);\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n}\n","<form\n  [formGroup]=\"form\"\n  (ngSubmit)=\"search()\">\n  <mat-accordion multi>\n    <mat-expansion-panel\n      displayMode=\"flat\"\n      togglePosition=\"before\"\n      [expanded]=\"true\">\n      <mat-expansion-panel-header>\n        <div class=\"expansion-panel-header\">\n          <mat-panel-title>\n            <div class=\"form-title\">\n              <span>{{ 'searchCriteria' | translate }}</span>\n            </div>\n          </mat-panel-title>\n\n          <mat-panel-description>\n            <div class=\"button-wrapper\">\n              <button\n                (click)=\"$event.stopPropagation()\"\n                type=\"submit\"\n                [matTooltip]=\"'search' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>search</mat-icon>\n              </button>\n\n              <button\n                type=\"button\"\n                (click)=\"clear($event)\"\n                [matTooltip]=\"'eraseForm' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>search_off</mat-icon>\n              </button>\n\n              <button\n                type=\"button\"\n                (click)=\"closeTab($event)\"\n                [matTooltip]=\"'close' | translate\"\n                mat-mini-fab\n                color=\"primary\">\n                <mat-icon>close</mat-icon>\n              </button>\n            </div>\n          </mat-panel-description>\n        </div>\n      </mat-expansion-panel-header>\n\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>{{ 'event' | translate }}</mat-label>\n\n          <input\n            type=\"string\"\n            name=\"no\"\n            formControlName=\"no\"\n            matInput />\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'dateFrom' | translate }}</mat-label>\n\n          <input\n            matInput\n            talanSetDateOnKeyPress\n            [matDatepicker]=\"periodBegin\"\n            formControlName=\"periodBegin\"\n            [max]=\"form.get('periodEnd')?.value\" />\n\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"periodBegin\"></mat-datepicker-toggle>\n          <mat-datepicker #periodBegin></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'dateTo' | translate }}</mat-label>\n\n          <input\n            matInput\n            talanSetDateOnKeyPress\n            [matDatepicker]=\"periodEnd\"\n            formControlName=\"periodEnd\"\n            [min]=\"form.get('periodBegin')?.value\" />\n\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"periodEnd\"></mat-datepicker-toggle>\n          <mat-datepicker #periodEnd></mat-datepicker>\n          <mat-error *ngIf=\"form.get('periodEnd')?.hasError('dateGreaterThan')\">\n            {{\n              form.get('periodEnd')?.getError('dateGreaterThan').message\n                | translate\n            }}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'city' | translate }}</mat-label>\n\n          <input\n            matInput\n            formControlName=\"city\"\n            [matAutocomplete]=\"autoCity\" />\n\n          <mat-autocomplete #autoCity=\"matAutocomplete\">\n            <mat-option\n              *ngFor=\"let city of filteredCities\"\n              [value]=\"city.code\">\n              {{ city.code }} - {{ city.name }}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n\n        <mat-checkbox\n          name=\"parent\"\n          class=\"vertically-centered\"\n          formControlName=\"parent\">\n          {{ 'searchParentsEventOnly' | translate }}\n        </mat-checkbox>\n\n        <mat-form-field>\n          <mat-label>{{ 'pmoEventsOnly' | translate }}</mat-label>\n\n          <mat-select\n            formControlName=\"IsPMO\"\n            multiple>\n            <mat-option\n              *ngFor=\"let option of optionsYesNo | keyvalue\"\n              [value]=\"option.value\">\n              {{ option.key | translate }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>{{ 'type' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"type\"\n            name=\"type\"\n            formControlName=\"eventTypeList\">\n            <mat-option\n              *ngFor=\"let type of eventTypes\"\n              [value]=\"type.code\">\n              {{ type.label }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'status' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"status\"\n            name=\"status\"\n            formControlName=\"statusList\">\n            <mat-option\n              *ngFor=\"let status of statuses | keyvalue\"\n              [value]=\"status.value\"\n              >{{ status.value }}</mat-option\n            >\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'bureau' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"bureau\"\n            name=\"bureau\"\n            formControlName=\"bureauList\">\n            <mat-option\n              *ngFor=\"let bureau of bureaus\"\n              [value]=\"bureau.label\">\n              {{ bureau.label }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'media' | translate }}</mat-label>\n\n          <mat-select\n            multiple\n            id=\"media\"\n            name=\"media\"\n            formControlName=\"mediaList\">\n            <mat-option\n              *ngFor=\"let media of medias | keyvalue\"\n              [value]=\"media.value\">\n              {{ media.value }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>{{ 'quoteId' | translate }}</mat-label>\n\n          <input\n            type=\"text\"\n            id=\"quoteId\"\n            name=\"quoteId\"\n            formControlName=\"quoteId\"\n            matInput />\n        </mat-form-field>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</form>\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpErrorModule } from 'http-error';\nimport { LoadingModule } from 'loading';\nimport { LoggerModule } from 'ngx-logger';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    SharedModule,\n    LoggerModule.forRoot(environment.logger),\n    LoadingModule.forRoot({\n      excludeUrls: [],\n    }),\n    HttpErrorModule,\n  ],\n  bootstrap: [AppComponent],\n  providers: [],\n  exports: [TranslateModule],\n})\nexport class AppModule {}\n","import { NeosMenuItem } from '../../menu/menu.component';\n\nexport const aboutMenu: NeosMenuItem[] = [\n  {\n    labelTranslateKey: 'neosWiki',\n    callback: () => {\n      window.open(\n        'https://workspace.ebu.ch/x/gQYNB',\n        '_blank',\n        'noopener, noreferrer'\n      );\n    },\n  },\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AutocompleteComponent } from './components/autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { DatetimeComponent } from './components/datetime/datetime.component';\nimport { EmptyComponent } from './components/empty/empty.component';\nimport { InputComponent } from './components/input/input.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { SliderComponent } from './components/slider/slider.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { DynamicComponentDirective } from './directives/dynamic-component.directive';\nimport { SetDateOnKeyPressDirective } from './directives/set-date-on-key-press.directive';\nimport { DynamicFormComponent } from './dynamic-form.component';\nimport { MaterialModule } from './material.module';\nimport { GetPipe } from './pipe/get/get.pipe';\nimport { SafeHtmlPipe } from './pipe/safe-html/safe-html.pipe';\n\n@NgModule({\n  declarations: [\n    DynamicFormComponent,\n    AutocompleteComponent,\n    CheckboxComponent,\n    DatetimeComponent,\n    EmptyComponent,\n    InputComponent,\n    RadioComponent,\n    SelectComponent,\n    SliderComponent,\n    TextareaComponent,\n    ToggleComponent,\n    GetPipe,\n    SafeHtmlPipe,\n    DynamicComponentDirective,\n    SetDateOnKeyPressDirective,\n  ],\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule, TranslateModule],\n  exports: [DynamicFormComponent, SetDateOnKeyPressDirective],\n})\nexport class DynamicFormModule {}\n","import { Component, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectionList } from '@angular/material/list';\nimport { ResourceLightDTO } from '@models/resource-light-dto.model';\nimport { ResourceWithProfileAndEventLightDTO } from '@models/resource-with-profile-and-event-light-dto.model';\nimport { ResourcesService } from '@services/resources/resources.service';\nimport { Subject, of } from 'rxjs';\nimport { catchError, takeUntil, tap } from 'rxjs/operators';\n\nexport interface ResourceDialogData {\n  selectedTransmissionsIds: number[];\n  selectedResources: (ResourceLightDTO | ResourceWithProfileAndEventLightDTO)[];\n}\n@Component({\n  selector: 'app-add-resource-dialog',\n  templateUrl: './add-resource-dialog.component.html',\n  styleUrls: ['./add-resource-dialog.component.scss'],\n})\nexport class AddResourceDialogComponent implements OnInit, OnDestroy {\n  @ViewChild('suggestedResourcesList')\n  suggestedResourcesList!: MatSelectionList;\n\n  private _onDestroy$ = new Subject<void>();\n\n  autocompleteControl = new FormControl();\n\n  suggestedResources: (\n    | ResourceLightDTO\n    | ResourceWithProfileAndEventLightDTO\n  )[] = [];\n\n  selectedResources: (\n    | ResourceLightDTO\n    | ResourceWithProfileAndEventLightDTO\n  )[] = [];\n\n  loadingSuggestions = false;\n  suggestionLoadError = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<void>,\n    @Inject(MAT_DIALOG_DATA) public data: ResourceDialogData,\n    private readonly resourcesService: ResourcesService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.data.selectedTransmissionsIds.length > 0) {\n      this.resourcesService\n        .getResourcesByTransmissionIdList(this.data.selectedTransmissionsIds)\n        .pipe(\n          tap(() => {\n            this.loadingSuggestions = true;\n            this.suggestionLoadError = false;\n            this.suggestedResources = [];\n          }),\n          takeUntil(this._onDestroy$),\n          catchError(() => {\n            this.loadingSuggestions = false;\n            this.suggestionLoadError = true;\n\n            return of([] as ResourceWithProfileAndEventLightDTO[]);\n          })\n        )\n        .subscribe((resourceList) => {\n          this.loadingSuggestions = false;\n          this.suggestedResources = [...resourceList];\n          if (\n            this.data.selectedResources &&\n            this.data.selectedResources.length > 0\n          ) {\n            const manuallyAddedTransmissions =\n              this.data.selectedResources.filter(\n                (elem) =>\n                  !resourceList.map((resource) => resource.id).includes(elem.id)\n              );\n            this.suggestedResources = [\n              ...manuallyAddedTransmissions,\n              ...resourceList,\n            ];\n          }\n\n          this.selectedResources = this.data.selectedResources || [];\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  getFilteredResources = (query: string) =>\n    this.resourcesService.getFilteredResources(query);\n\n  getResourceDisplayValue(option: ResourceLightDTO) {\n    if (!option) {\n      return '';\n    }\n\n    let displayValue = option.code;\n\n    if (option.name) {\n      displayValue += ` - ${option.name}`;\n    }\n\n    return displayValue;\n  }\n\n  setOptionSelected(option: ResourceLightDTO) {\n    this.suggestedResources = [option, ...this.suggestedResources];\n    this.selectedResources = [option, ...this.selectedResources];\n  }\n\n  onSuggestionSelectionChange() {\n    this.selectedResources =\n      this.suggestedResourcesList.selectedOptions.selected.map(\n        (res) => res.value\n      );\n  }\n\n  isResourceSelected(\n    resource: ResourceLightDTO | ResourceWithProfileAndEventLightDTO\n  ): boolean {\n    return this.selectedResources.map((res) => res.id).includes(resource.id);\n  }\n}\n","<div class=\"add-resource-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'addResourceToIncident' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <app-autocomplete-async\n      id=\"field-autocomplete\"\n      labelTranslateKey=\"selectResource\"\n      [searchMethod]=\"getFilteredResources\"\n      [displayValueFormatter]=\"getResourceDisplayValue\"\n      (onSelectedOption)=\"setOptionSelected($event)\"></app-autocomplete-async>\n\n    <ng-container *ngIf=\"suggestedResources.length > 0\">\n      <h4>Suggested resources</h4>\n\n      <mat-selection-list\n        id=\"list-selection\"\n        #suggestedResourcesList\n        (selectionChange)=\"onSuggestionSelectionChange()\">\n        <mat-list-option\n          *ngFor=\"let resource of suggestedResources\"\n          [selected]=\"isResourceSelected(resource)\"\n          [value]=\"resource\"\n          checkboxPosition=\"before\">\n          {{ resource.name }}\n        </mat-list-option>\n      </mat-selection-list>\n    </ng-container>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"selectedResources.length == 0\"\n      [mat-dialog-close]=\"selectedResources\"\n      cdkFocusInitial>\n      {{ 'add' | translate }}\n    </button>\n  </div>\n</div>\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport {\n  LOADING_CONFIGURATION,\n  LoadingConfiguration,\n} from '../configuration/loading.configuration';\nimport { LoadingService } from '../service/loading.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  private count = 0;\n\n  constructor(\n    private loadingService: LoadingService,\n    @Inject(LOADING_CONFIGURATION) private configuration: LoadingConfiguration\n  ) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // Uses configuration.excludeUrls to prevent loading component\n    if (\n      this.configuration.excludeUrls.length > 0 &&\n      new RegExp(`(${this.configuration.excludeUrls.join('|')})$`).test(\n        request.url.split('?')[0]\n      )\n    ) {\n      return next.handle(request);\n    }\n\n    // Uses custom request.headers to prevent loading component\n    if (request.headers.get(this.configuration.skipLoadingHeaderName)) {\n      return next.handle(\n        request.clone({\n          headers: request.headers.delete(\n            this.configuration.skipLoadingHeaderName\n          ),\n        })\n      );\n    }\n\n    // Negative loadingService.useInterceptor to prevent loading component\n    if (!this.loadingService.useInterceptor) {\n      return next.handle(request);\n    }\n\n    if (this.count === 0) {\n      this.loadingService.show();\n    }\n\n    this.count++;\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.count--;\n\n        if (this.count === 0) {\n          this.loadingService.hide();\n        }\n      })\n    );\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n/**\n * Greater or equal than\n */\nexport const gte = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (isNaN(+control.value)) {\n      return { gte: true, message: `${control.value} isNaN` };\n    }\n\n    if (+control.value <= +value) {\n      return {\n        gte: true,\n        message: `${control.value} < ${value}`,\n      };\n    }\n\n    return null;\n  };\n};\n\n/**\n * Greater than\n */\nexport const gt = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (isNaN(+control.value)) {\n      return { gte: true, message: `${control.value} isNaN` };\n    }\n\n    if (+control.value < +value) {\n      return {\n        gt: true,\n        message: `${control.value} <= ${value}`,\n      };\n    }\n\n    return null;\n  };\n};\n\n/**\n * Less or equal than\n */\nexport const lte = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (isNaN(+control.value)) {\n      return { gte: true, message: `${control.value} isNaN` };\n    }\n\n    if (+control.value >= +value) {\n      return {\n        lte: true,\n        message: `${control.value} > ${value}`,\n      };\n    }\n\n    return null;\n  };\n};\n\n/**\n * Less than\n */\nexport const lt = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (isNaN(+control.value)) {\n      return { gte: true, message: `${control.value} isNaN` };\n    }\n\n    if (+control.value > +value) {\n      return {\n        lt: true,\n        message: `${control.value} >= ${value}`,\n      };\n    }\n\n    return null;\n  };\n};\n\n/**\n * Equal to\n */\nexport const eq = (value: number): ValidatorFn => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (control.value === value) {\n      return {\n        eq: true,\n        message: `${control.value} != ${value}`,\n      };\n    }\n\n    return null;\n  };\n};\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { aboutMenu } from './config/aboutMenu';\nimport { getAddMenu } from './config/addMenu';\nimport { getSearchMenu } from './config/searchMenu';\nimport { getToolsMenu } from './config/toolsMenu';\nimport { ToolbarMenuConfig } from './toolbar.component';\n\nexport enum LabeledToolbarItem {\n  Tools = 'tools',\n  About = 'about',\n}\n\nexport enum IconToolbarItem {\n  Search = 'search',\n  Add = 'add',\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ToolbarMenuItemsService {\n  constructor(\n    private readonly tabsService: TabsService,\n    private readonly dialog: MatDialog\n  ) {}\n\n  labeledMenus = new Map([\n    [LabeledToolbarItem.Tools, getToolsMenu(this.tabsService, this.dialog)],\n    [LabeledToolbarItem.About, aboutMenu],\n  ]);\n\n  iconMenus = new Map([\n    [IconToolbarItem.Search, getSearchMenu(this.tabsService)],\n    [IconToolbarItem.Add, getAddMenu(this.tabsService)],\n  ]);\n\n  getLabeledMenus(): ToolbarMenuConfig[] {\n    const menuKeys = [...this.labeledMenus.keys()];\n    return menuKeys.map((menuKey) => ({\n      translateKey: menuKey.toString(),\n      elements: this.labeledMenus.get(menuKey) || [],\n    }));\n  }\n\n  getIconMenus(): ToolbarMenuConfig[] {\n    const menuKeys = [...this.iconMenus.keys()];\n    return menuKeys.map((menuKey) => ({\n      name: menuKey.toString(),\n      elements: this.iconMenus.get(menuKey) || [],\n    }));\n  }\n}\n","export const appRoutes = {\n  HOME: '',\n  NOT_FOUND: '404',\n  DOMAIN_MANAGER: 'domain-manager',\n  SEARCH: 'search',\n  DISCOUNT_MANAGER: 'discount-manager',\n};\n","import { NgxLoggerLevel } from 'ngx-logger';\nimport { LoggerConfig } from 'ngx-logger/lib/logger.config';\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://stargazer-server.onrender.com',\n  logger: {\n    serverLoggingUrl: undefined,\n    level: NgxLoggerLevel.DEBUG,\n    serverLogLevel: NgxLoggerLevel.ERROR,\n    disableConsoleLogging: true,\n  } as LoggerConfig,\n};\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function dateGreaterThan(dateToCompare: string): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const dateToCompareValue = control.parent?.get(dateToCompare)?.value;\n\n    if (\n      dateToCompareValue &&\n      control.value &&\n      dateToCompareValue > control.value\n    ) {\n      return {\n        dateGreaterThan: {\n          message: `Date should be greater than ${dateToCompareValue}`,\n        },\n      };\n    }\n\n    return null;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpErrorService {\n  message$ = new Subject<string>();\n  modalClosed$ = new Subject<string>();\n\n  retry = 0;\n\n  constructor() {}\n\n  getHttpRetry() {\n    return this.retry;\n  }\n\n  setHttpRetry(retry: number) {\n    this.retry = retry;\n  }\n\n  add(message: string) {\n    this.message$.next(message);\n  }\n\n  modalAfterClosed(message: string) {\n    this.modalClosed$.next(message);\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { UserGroup } from '@constants/app-user-groups';\nimport { DomainEntity } from '@constants/domain-entities';\nimport { DomainItem } from '@models/domain-item.model';\nimport { UserPermissionDTO } from '@models/user-permission-dto';\nimport { DomainsService } from '@services/domains/domains.service';\nimport { UsersService } from '@services/users/users.service';\nimport { Subscription } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-user-group-dialog',\n  templateUrl: './user-group-dialog.component.html',\n  styleUrls: ['./user-group-dialog.component.scss'],\n})\nexport class UserGroupDialogComponent implements OnInit, OnDestroy {\n  groupsControl: FormControl = new FormControl(\n    [],\n    [Validators.required, Validators.maxLength(2)]\n  );\n\n  currentUserPermissions!: UserPermissionDTO;\n\n  availableGroups: DomainItem[] = [];\n\n  userGroupsTranslateKey = new Map<UserGroup, string>([\n    [UserGroup.EVC, 'evc'],\n    [UserGroup.CUSTOMER_SERVICE_DESK, 'customerServiceDesk'],\n    [UserGroup.PROJECT_MANAGER, 'projectManagers'],\n    [UserGroup.FINANCE, 'finance'],\n    [UserGroup.NEWS, 'news'],\n    [UserGroup.RADIO, 'radio'],\n    [UserGroup.PLANNING, 'planning'],\n  ]);\n\n  domainServiceSubscription: Subscription = new Subscription();\n\n  userServicesSubscription: Subscription = new Subscription();\n\n  constructor(\n    private readonly dialogRef: MatDialogRef<UserGroupDialogComponent>,\n    private readonly usersService: UsersService,\n    private readonly domainsService: DomainsService\n  ) {}\n\n  ngOnInit(): void {\n    this.domainServiceSubscription = this.domainsService\n      .searchDomainEntityItems(DomainEntity.USER_GROUP)\n      .pipe(\n        tap((domainItems: DomainItem[]) => {\n          this.availableGroups = domainItems;\n        }),\n        switchMap(() => this.usersService.getCurrentUserAuthentication()),\n        tap((currentUserPermissions: UserPermissionDTO) => {\n          this.currentUserPermissions = currentUserPermissions;\n        }),\n        switchMap((currentUserPermissions: UserPermissionDTO) =>\n          this.usersService.getUserGroupsByEmail(currentUserPermissions.email)\n        )\n      )\n      .subscribe((groups: UserGroup[]) => {\n        const userGroups = groups.map((groupCode) =>\n          this.availableGroups.find(\n            (domainItem) => domainItem.code === groupCode\n          )\n        );\n\n        this.groupsControl.setValue(userGroups);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.domainServiceSubscription.unsubscribe();\n    this.userServicesSubscription.unsubscribe();\n  }\n\n  onGroupsSelectionChange(event: MatSelectChange): void {\n    this.groupsControl.setValue(event.value);\n  }\n\n  getGroupTranslateKey(group: DomainItem): string {\n    return (\n      this.userGroupsTranslateKey.get(group.code as UserGroup) ?? group.code\n    );\n  }\n\n  saveChanges(): void {\n    const saveDTO: DomainItem[] = this._generateSaveDTO();\n\n    this.userServicesSubscription = this.usersService\n      .updateUserGroupsByEmail(this.currentUserPermissions.email, saveDTO)\n      .subscribe(() => {\n        this.dialogRef.close();\n      });\n  }\n\n  private _generateSaveDTO(): DomainItem[] {\n    return this.groupsControl.value.map((group: DomainItem) => {\n      const { businessKey, ...groupNoBusinessKey } = group;\n\n      return {\n        ...groupNoBusinessKey,\n        name: group.label,\n        entityTrackerIdBean: null,\n        isRemoved: false,\n        entityNameEnum: null,\n        new: false,\n        isModified: false,\n      };\n    });\n  }\n}\n","<form\n  class=\"user-group-dialog\"\n  (ngSubmit)=\"saveChanges()\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'userGroups' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <mat-form-field class=\"group-select\">\n      <mat-label>{{ 'Roles' | translate }}</mat-label>\n\n      <mat-select\n        (selectionChange)=\"onGroupsSelectionChange($event)\"\n        [formControl]=\"groupsControl\"\n        multiple\n        maxlength=\"2\">\n        <mat-option\n          *ngFor=\"let group of availableGroups\"\n          [value]=\"group\"\n          >{{ getGroupTranslateKey(group) | translate }}</mat-option\n        >\n      </mat-select>\n\n      <mat-error> It's mandatory to choose a User group (2 Max.) </mat-error>\n    </mat-form-field>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <!-- @TRICK: Hidden trigger validation on enter -->\n    <button\n      *ngIf=\"groupsControl.invalid\"\n      type=\"submit\"\n      hidden>\n      {{ 'ok' | translate }}\n    </button>\n\n    <button\n      id=\"button-send\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"groupsControl.invalid\"\n      type=\"submit\"\n      cdkFocusInitial>\n      {{ 'send' | translate }}\n    </button>\n  </div>\n</form>\n","import { Component } from '@angular/core';\nimport { EntityType } from '@constants/entities';\nimport { SaveAttachmentResponseDTO } from '@models/save-attachment-response-dto.model';\nimport { AttachmentsService } from '@services/attachments/attachments.service';\nimport { fileToBase64 } from '@shared/utils/helpers';\nimport { switchMap } from 'rxjs/operators';\nimport {\n  ColumnsConfiguration,\n  DataColumnName,\n  TableOptions,\n} from 'table-generator';\n\n@Component({\n  selector: 'app-incident-attachments',\n  templateUrl: './incident-attachments.component.html',\n  styleUrls: ['./incident-attachments.component.scss'],\n})\nexport class IncidentAttachmentsComponent {\n  selectedFiles: SaveAttachmentResponseDTO[] = [];\n\n  allColumns: DataColumnName[] = [\n    'attachmentDate',\n    'receptionDate',\n    'fileType',\n    'subjectTitle',\n    'event',\n    'ouBookingConfirmation',\n    'recipients',\n    'sender',\n    'attachedBy',\n    'type',\n  ];\n  tableOptions: Partial<TableOptions> = {\n    showFilter: false,\n    showResult: false,\n  };\n  columnsConfiguration: ColumnsConfiguration = {\n    attachmentDate: {\n      translateKey: 'attachmentDate',\n      type: 'string',\n    },\n    receptionDate: {\n      translateKey: 'receptionDate',\n      type: 'string',\n    },\n    fileType: {\n      translateKey: 'fileType',\n      type: 'string',\n    },\n    subjectTitle: {\n      translateKey: 'subjectTitle',\n      type: 'string',\n    },\n    event: {\n      translateKey: 'event',\n      type: 'string',\n    },\n    ouBookingConfirmation: {\n      translateKey: 'ouBookingConfirmation',\n      type: 'string',\n    },\n    recipients: {\n      translateKey: 'recipients',\n      type: 'string',\n    },\n    sender: {\n      translateKey: 'sender',\n      type: 'string',\n    },\n    attachedBy: {\n      translateKey: 'attachedBy',\n      type: 'string',\n    },\n    type: {\n      translateKey: 'type',\n      type: 'string',\n    },\n  };\n\n  constructor(private readonly attachmentsService: AttachmentsService) {}\n\n  onFileSelected() {\n    const inputNode: any = document.querySelector('input[type=file]');\n    const [fileToUpload]: File[] = inputNode.files;\n    fileToBase64(fileToUpload)\n      .pipe(\n        switchMap((fileBase64) => {\n          return this.attachmentsService.saveAttachmentsByEntityId(\n            fileBase64,\n            fileToUpload.name,\n            EntityType.INCIDENT,\n            0\n          );\n        })\n      )\n      .subscribe((response) => {\n        // TODO: Complete this functionality when we receive documentation on edit\n        // I guess we might need to add this response to the table and something else\n        this.selectedFiles.push(response);\n      });\n  }\n}\n","<div class=\"file-uploader\">\n  <button\n    id=\"button-upload\"\n    type=\"button\"\n    mat-raised-button\n    color=\"primary\"\n    (click)=\"fileInput.click()\">\n    Upload File\n  </button>\n  <input\n    (change)=\"onFileSelected()\"\n    #fileInput\n    type=\"file\"\n    id=\"file\" />\n</div>\n\n<talan-table-generator\n  [data]=\"selectedFiles\"\n  [paginatorOptions]=\"{ show: false }\"\n  [allColumns]=\"allColumns\"\n  [tableOptions]=\"tableOptions\"\n  [columnsConfiguration]=\"columnsConfiguration\"></talan-table-generator>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { get } from '../../utils/helpers/get';\n\n@Pipe({\n  name: 'get',\n})\nexport class GetPipe implements PipeTransform {\n  transform(value: any, path: string, defaultValue?: any): any {\n    return get(value, path, defaultValue);\n  }\n}\n","import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DomainParameter } from '@models/domain-parameter.model';\nimport { Subject } from 'rxjs';\n\nexport interface DomainParameterDialogData {\n  domainParameter?: DomainParameter | null;\n}\n\n@Component({\n  selector: 'app-domain-parameter-dialog',\n  templateUrl: './domain-parameter-dialog.component.html',\n  styleUrls: ['./domain-parameter-dialog.component.scss'],\n})\nexport class DomainParameterDialogComponent implements OnInit, OnDestroy {\n  private _onDestroy$ = new Subject<void>();\n\n  form!: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<void>,\n    @Inject(MAT_DIALOG_DATA) public data: DomainParameterDialogData,\n    private readonly formBuilder: FormBuilder\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      groupCode: new FormControl(null, [Validators.required]),\n      code: new FormControl(null, [Validators.required]),\n      label: new FormControl(null, [Validators.required]),\n      externalLabel: new FormControl(),\n      domainStatus: new FormControl(null, [Validators.required]),\n    });\n\n    if (this.data.domainParameter) {\n      this.form.patchValue(this.data.domainParameter);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n\n  formValueToDomainParameter(): void {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const formValue = this.form.value;\n    const inputDomainParameter = this.data.domainParameter;\n\n    this.dialogRef.close({\n      version: inputDomainParameter?.version ?? 0,\n      id: inputDomainParameter?.id ?? null,\n      keyCode: inputDomainParameter?.keyCode ?? null,\n      code: formValue.code,\n      label: formValue.label,\n      groupCode: formValue.groupCode,\n      externalLabel: formValue.externalLabel,\n      domainStatus: formValue.domainStatus,\n      items: inputDomainParameter?.items ?? [],\n      businessKey: inputDomainParameter?.businessKey ?? '',\n      new: !inputDomainParameter, // If no domain item is given, we are adding\n      isModified: !!inputDomainParameter, // If a domain item is passed, we are editingzz\n      isRemoved: false,\n    } as DomainParameter);\n  }\n}\n","<form\n  [formGroup]=\"form\"\n  (ngSubmit)=\"formValueToDomainParameter()\"\n  class=\"add-domain-parameter-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'domainParameter' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <div class=\"form-container\">\n      <mat-form-field>\n        <mat-label>{{ 'groupCode' | translate | uppercase }}</mat-label>\n\n        <mat-select\n          required\n          formControlName=\"groupCode\">\n          <mat-option value=\"PROPERTY PARAMETER\">PROPERTY PARAMETER</mat-option>\n          <mat-option value=\"DOMAIN PARAMETER\">DOMAIN PARAMETER</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'code' | translate | uppercase }}</mat-label>\n\n        <input\n          formControlName=\"code\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'label' | translate | uppercase }}</mat-label>\n\n        <input\n          formControlName=\"label\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'externalLabel' | translate | uppercase }}</mat-label>\n\n        <input\n          formControlName=\"externalLabel\"\n          matInput />\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{ 'domainStatus' | translate | uppercase }}</mat-label>\n\n        <mat-select\n          required\n          formControlName=\"domainStatus\">\n          <mat-option value=\"ACTIVE\">ACTIVE</mat-option>\n          <mat-option value=\"INACTIVE\">INACTIVE</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <!-- @TRICK: Hidden trigger validation on enter -->\n    <button\n      *ngIf=\"form.invalid\"\n      type=\"submit\"\n      hidden>\n      {{ 'ok' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"form.invalid\"\n      type=\"submit\"\n      cdkFocusInitial>\n      {{ 'ok' | translate }}\n    </button>\n  </div>\n</form>\n","import { Observable } from 'rxjs';\n\nexport interface ColumnsConfiguration {\n  [key: string]:\n    | CommonConfiguartion &\n        (\n          | StringConfiguration\n          | NumberConfiguration\n          | DateConfiguration\n          | BooleanConfiguration\n          | TooltipConfiguration\n          | ObjectConfiguration\n          | CHeckboxConfiguration\n        );\n}\n\nexport interface TooltipConfiguration {\n  icon?: string;\n  searchMethod: (rowData: any) => Observable<string>;\n  type: 'tooltip';\n}\n\nexport interface CHeckboxConfiguration {\n  type: 'checkbox';\n}\nexport interface StringConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'string';\n}\n\nexport interface NumberConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'number';\n}\n\nexport interface BooleanConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'boolean';\n\n  /**\n   * Icon when value is `true`\n   */\n  iconTrue?: string;\n\n  /**\n   * Icon when value is `undefined` or `false`\n   */\n  iconFalse?: string;\n}\n\nexport interface DateConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'date';\n\n  /**\n   * Date format. Use https://angular.io/api/common/DatePipe\n   */\n  format: string;\n}\n\nexport interface TooltipConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'tooltip';\n\n  /**\n   * Cell icon for tooltip\n   *\n   * @default 'info'\n   */\n  icon?: string;\n\n  /**\n   * Fetching data request\n   */\n  searchMethod: (row: any) => Observable<string>;\n}\n\nexport interface ObjectConfiguration {\n  /**\n   * Cell data type\n   */\n  type: 'object';\n\n  /**\n   * How to display an object\n   */\n  displayWith: (object: any) => string;\n}\n\nexport interface CommonConfiguartion {\n  /**\n   * Cell data type\n   */\n  type:\n    | 'string'\n    | 'number'\n    | 'boolean'\n    | 'date'\n    | 'tooltip'\n    | 'object'\n    | 'checkbox';\n\n  /**\n   * The translate key from i18n folder (if you don't have the key en i18n folder, component use the inserted word)\n   */\n  translateKey: string;\n\n  /**\n   * Column width\n   *\n   * @example\n   * 100% | '100px'\n   */\n  width?: string;\n}\n\n/**\n * The paginator options\n *\n * @default\n * {\n *  show: true,\n *  pageSizeOptions: [10, 20, 50, 100],\n *  pageSize: 10,\n *  pageIndex: 0,\n *  showFirstLastButtons: true\n * }\n */\nexport interface PaginatorOptions {\n  show?: boolean;\n  pageSizeOptions: number[];\n  pageSize?: number;\n  pageIndex?: number;\n  showFirstLastButtons?: boolean;\n}\n\n/**\n * The Table Generator options\n *\n * @default\n * {\n *  showHeaderWhenContentNoData: true,\n *  showMenuActions:true,\n *  showFilter: true,\n *  showResult: true,\n *  markRowSelected: true,\n *  showRowsSelector: true,\n *  multipleRowsSelected: true,\n *  showColumnsSelector: true,\n *  showTableActions: true,\n *  showRowActions: true\n * }\n */\nexport interface TableOptions {\n  /**\n   * Show table ' th' element when there is no data\n   */\n  showHeaderWhenContentNoData: boolean;\n\n  /**\n   * Show menu actions (right click)\n   */\n  showMenuActions: boolean;\n\n  /**\n   * Show filter input for table\n   */\n  showFilter: boolean;\n\n  /**\n   * Show result text\n   */\n  showResult: boolean;\n\n  /**\n   * Add color to row selected\n   */\n  markRowSelected: boolean;\n\n  /**\n   * Show column `rowsSelector`\n   */\n  showRowsSelector: boolean;\n\n  /**\n   * if can select multiple rows\n   */\n  multipleRowsSelected: boolean;\n\n  /**\n   * Show column `columnsSelector`\n   */\n  showColumnsSelector: boolean;\n\n  /**\n   * Show table `tableActions`\n   */\n  showTableActions: boolean;\n\n  /**\n   * Show column `rowActions`\n   */\n  showRowActions: boolean;\n}\n\n/**\n * The object key string\n *\n * Reserved word:\n * - `columnsSelector` is a reserved word to pick the visible columns and show actions per row\n * - `rowsSelector` is a reserved word to select the rows\n */\nexport type DataColumnName = string | NoDataColumnName;\n\n/**\n * Reserved word:\n * - `columnsSelector` is a reserved word to pick the visible columns and show actions per row\n * - `rowsSelector` is a reserved word to select the rows\n */\nexport enum NoDataColumnName {\n  columnsSelector = 'columnsSelector',\n  rowsSelector = 'rowsSelector',\n}\n\n/**\n * Menu per row\n */\nexport interface RowMenuAction<T> {\n  /**\n   * Action idertifier\n   */\n  id?: string;\n\n  /**\n   * The translate key from i18n folder (if you don't have the key en i18n folder, component use the inserted word)\n   */\n  translateKey: string;\n\n  /**\n   * Disable action\n   */\n  isDisabled?: (row: T) => boolean;\n}\n\n/**\n * The emit when click on an action per menu per row\n */\nexport interface RowMenuActionEvent<T> {\n  /**\n   * The row data\n   */\n  row: T;\n\n  /**\n   * The menu per row\n   */\n  action: RowMenuAction<T>;\n\n  /**\n   * The action click event\n   */\n  event?: Event;\n}\n\n/**\n * Table action\n */\nexport interface TableAction {\n  /**\n   * Action idertifier\n   */\n  id: string;\n\n  /**\n   * The translate key from i18n folder (if you don't have the key en i18n folder, component use the inserted word)\n   */\n  translateKey?: string;\n\n  /**\n   * The action icon\n   */\n  icon: string;\n\n  /**\n   * The action background color\n   */\n  bgColor?: string;\n\n  /**\n   * The action color\n   */\n  color?: string;\n\n  /**\n   * Disable action\n   */\n  disabled?: boolean;\n}\n\n/**\n * Table action event\n */\nexport interface TableActionEvent {\n  /**\n   * The table action\n   */\n  action: TableAction;\n\n  /**\n   * The action click event\n   */\n  event?: Event;\n}\n\n/**\n * Row action\n */\nexport interface RowAction<T> {\n  /**\n   * Action idertifier\n   */\n  id: string;\n\n  /**\n   * The translate key from i18n folder (if you don't have the key en i18n folder, component use the inserted word)\n   */\n  translateKey?: string;\n\n  /**\n   * The action icon\n   */\n  icon: string;\n\n  /**\n   * The action background color\n   */\n  bgColor?: string;\n\n  /**\n   * The action color\n   */\n  color?: string;\n\n  /**\n   * Disable action\n   */\n  isDisabled?: (row: T) => boolean;\n}\n\n/**\n * Row action event\n */\nexport interface RowActionEvent<T> {\n  /**\n   * The row data\n   */\n  row: T;\n\n  /**\n   * The menu per row\n   */\n  action: RowAction<T>;\n\n  /**\n   * The action click event\n   */\n  event?: Event;\n}\n\n/**\n * Row click and double click events\n */\nexport interface RowEvent<T> {\n  /**\n   * The row data\n   */\n  row: T;\n\n  /**\n   * The action click event\n   */\n  event?: Event;\n}\n\nexport interface tooltipMenuPosition {\n  /**\n   * The x position of the tooltip menu\n   */\n  x: string;\n\n  /**\n   * The y position of the tooltip menu\n   */\n  y: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { InputConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  private _field!: InputConfiguration;\n\n  get field(): InputConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: InputConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\">\n  <mat-label>{{ field.label }}</mat-label>\n\n  <input\n    matInput\n    [formControl]=\"control\"\n    [required]=\"required\"\n    [attr.type]=\"field.inputType\"\n    [placeholder]=\"field.placeholder || ''\" />\n\n  <mat-hint\n    *ngIf=\"field.hintStart\"\n    align=\"start\"\n    >{{ field.hintStart }}</mat-hint\n  >\n  <mat-hint\n    *ngIf=\"field.hintEnd\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n\n  <mat-error\n    *ngIf=\"control.invalid\"\n    [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n</mat-form-field>\n","import { Component, Input } from '@angular/core';\nimport { DomainMapping } from '@models/domain-mapping.model';\nimport {\n  ColumnsConfiguration,\n  DataColumnName,\n  TableOptions,\n} from 'table-generator';\n\n@Component({\n  selector: 'app-domain-mappings',\n  templateUrl: './domain-mappings.component.html',\n  styleUrls: ['./domain-mappings.component.scss'],\n})\nexport class DomainMappingsComponent {\n  @Input() data!: DomainMapping[];\n\n  mainTableColumns: DataColumnName[] = ['id', 'version', 'mappingType'];\n  mainTableOptions: Partial<TableOptions> = {\n    showResult: false,\n  };\n  mainTableConfiguration: ColumnsConfiguration = {\n    id: {\n      translateKey: 'id',\n      type: 'string',\n    },\n    version: {\n      translateKey: 'version',\n      type: 'string',\n    },\n    mappingType: {\n      translateKey: 'mappingType',\n      type: 'string',\n    },\n  };\n}\n","<div class=\"domain-mappings\">\n  <talan-table-generator\n    [data]=\"data\"\n    [tableOptions]=\"mainTableOptions\"\n    [allColumns]=\"mainTableColumns\"\n    [columnsConfiguration]=\"mainTableConfiguration\"></talan-table-generator>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Role } from '@constants/app-roles';\nimport { DomainItem } from '@models/domain-item.model';\nimport { DomainListsResponseDTO } from '@models/domain-lists-response-dto.model';\nimport { DomainParameter } from '@models/domain-parameter.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DomainsService {\n  private _endpointURL = '/domains';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getDomains(): Observable<DomainParameter[]> {\n    return this.apiService.read<DomainParameter[]>(`${this._endpointURL}`);\n  }\n\n  listAll(): Observable<DomainListsResponseDTO> {\n    return this.apiService.read<DomainListsResponseDTO>(\n      `${this._endpointURL}/list-all`\n    );\n  }\n\n  saveAll(saveDto: DomainListsResponseDTO) {\n    return this.apiService.update<DomainListsResponseDTO>(\n      `${this._endpointURL}/save-all`,\n      { body: saveDto, headers: { ROLES: Object.values(Role).join() } }\n    );\n  }\n\n  searchDomainEntityItems(\n    domainEntity: string\n  ): Observable<DomainItem[] | any[]> {\n    return this.apiService.read<DomainItem[]>(\n      `${this._endpointURL}/domain/${encodeURIComponent(domainEntity)}/items`\n    );\n  }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  MAT_MENU_DEFAULT_OPTIONS,\n  MatMenuTrigger,\n} from '@angular/material/menu';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {\n  ColumnsConfiguration,\n  CommonConfiguartion,\n  DataColumnName,\n  NoDataColumnName,\n  PaginatorOptions,\n  RowAction,\n  RowActionEvent,\n  RowEvent,\n  RowMenuAction,\n  RowMenuActionEvent,\n  TableAction,\n  TableActionEvent,\n  TableOptions,\n  TooltipConfiguration,\n  tooltipMenuPosition,\n} from './models/models';\n\nconst DEFAULT_PAGINATOR_OPTIONS: PaginatorOptions = {\n  show: true,\n  pageSizeOptions: [10, 20, 50, 100],\n  pageSize: 10,\n  pageIndex: 0,\n  showFirstLastButtons: true,\n};\n\nconst DEFAULT_TABLE_OPTIONS: TableOptions = {\n  showHeaderWhenContentNoData: true,\n  showMenuActions: true,\n  showFilter: true,\n  showResult: true,\n  markRowSelected: true,\n  showRowsSelector: true,\n  multipleRowsSelected: true,\n  showColumnsSelector: true,\n  showTableActions: true,\n  showRowActions: true,\n};\n\nconst DEFAULT_ROW_CLICK_DELAY = 200;\n\n@Component({\n  selector: 'talan-table-generator',\n  templateUrl: 'table-generator.component.html',\n  styleUrls: ['table-generator.component.scss'],\n  providers: [\n    {\n      provide: MAT_MENU_DEFAULT_OPTIONS,\n      useValue: {\n        // `overlayPanelClass` not working for individual mat-menu (bug Angular 11)\n        overlayPanelClass: 'table-generator-menu-overlay-panel',\n      },\n    },\n  ],\n})\nexport class TableGeneratorComponent<T> implements OnInit, AfterViewInit {\n  constructor() {}\n\n  ngOnInit(): void {\n    this.initCurrentDisplayedColumns();\n    this.initColumnsSelected();\n  }\n\n  // Paginator & sort\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngAfterViewInit(): void {\n    this.currentDataSource.sort = this.sort;\n\n    if (this.currentPaginatorOptions.show) {\n      this.currentDataSource.paginator = this.paginator;\n    }\n  }\n\n  currentPaginatorOptions: PaginatorOptions = DEFAULT_PAGINATOR_OPTIONS;\n  @Input() set paginatorOptions(value: Partial<PaginatorOptions>) {\n    this.currentPaginatorOptions = { ...DEFAULT_PAGINATOR_OPTIONS, ...value };\n\n    if (this.currentPaginatorOptions.show) {\n      this.currentDataSource.paginator = this.paginator;\n    } else {\n      this.currentDataSource.paginator = null;\n    }\n  }\n\n  @Output() pageChange = new EventEmitter<PageEvent>();\n\n  onPageChange(event: PageEvent) {\n    this.pageChange.emit(event);\n  }\n\n  @Input() columnsConfiguration: ColumnsConfiguration = {};\n\n  // Table Options\n  currentTableOptions = DEFAULT_TABLE_OPTIONS;\n\n  @Input() set tableOptions(value: Partial<TableOptions>) {\n    this.currentTableOptions = { ...DEFAULT_TABLE_OPTIONS, ...value };\n\n    // Next code solves setter dependency of tableOptions with rowsSelected\n    if (value.hasOwnProperty('multipleRowsSelected')) {\n      this.currentRowsSelected = new SelectionModel(\n        value.multipleRowsSelected,\n        this.currentRowsSelected.selected\n      );\n    }\n  }\n\n  // Table DataSource\n  currentDataSource = new MatTableDataSource<T>();\n\n  /**\n   * Set Table DataSource & filter by input filter\n   */\n  @Input() set data(value: T[]) {\n    this.currentDataSource.data = value;\n    this.currentDataSource.sort = this.sort;\n    this.applyFilter();\n  }\n\n  // Table filter behaviour\n  @Input() filterValue = '';\n\n  tooltipData!: string;\n\n  applyFilter(): void {\n    this.currentDataSource.filter = this.filterValue.trim().toLowerCase();\n\n    if (this.currentDataSource.paginator) {\n      this.currentDataSource.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Displayed columns\n   */\n  currentDisplayedColumns: string[] = [];\n\n  @Input() allColumns!: string[];\n\n  initCurrentDisplayedColumns() {\n    this.currentDisplayedColumns = this.allColumns;\n  }\n\n  NoDataColumnName = NoDataColumnName;\n\n  // TODO: Provider in module this property\n  noDataColumnNames: NoDataColumnName[] = [\n    NoDataColumnName.columnsSelector,\n    NoDataColumnName.rowsSelector,\n  ];\n\n  getDataColumnNames(columns?: string[]) {\n    if (!columns) {\n      return [];\n    }\n\n    return columns.filter(\n      (column) => !(this.noDataColumnNames as DataColumnName[]).includes(column)\n    );\n  }\n\n  // RowsSelector\n  @Output() rowsSelectedChange = new EventEmitter<T[]>();\n  @Input() set rowsSelected(values: T[]) {\n    this.currentRowsSelected = new SelectionModel<T>(\n      this.currentTableOptions.multipleRowsSelected,\n      values\n    );\n  }\n  currentRowsSelected = new SelectionModel<T>(\n    this.currentTableOptions.multipleRowsSelected,\n    []\n  );\n\n  onRowSelectedChange(row: T) {\n    this.currentRowsSelected.toggle(row);\n    this.rowsSelectedChange.emit(this.currentRowsSelected.selected);\n  }\n\n  isAllSelected() {\n    const numSelected = this.currentRowsSelected.selected.length;\n    const numRows = this.currentDataSource.data.length;\n\n    return numSelected === numRows;\n  }\n\n  masterToggle() {\n    this.isAllSelected()\n      ? this.currentRowsSelected.clear()\n      : this.currentDataSource.data.forEach((row) =>\n          this.currentRowsSelected.select(row)\n        );\n  }\n\n  // ColumnsSelector\n  /**\n   * show menu\n   */\n  columnsSelectorIcon: 'expand_less' | 'expand_more' = 'expand_more';\n\n  /**\n   * The calculate columnsMenu position\n   */\n  columnsSelectorMenuPosition = { x: '0px', y: '0px' };\n\n  @ViewChild('columnsSelectorMenuTrigger', { read: MatMenuTrigger })\n  columnsSelectorMenu!: MatMenuTrigger;\n\n  showColumnsMenuClick(event: MouseEvent) {\n    this.columnsSelectorMenuPosition.x = event.clientX + 'px';\n    this.columnsSelectorMenuPosition.y = event.clientY + 'px';\n\n    this.columnsSelectorMenu.menuData = {\n      columns: this.allColumns,\n    };\n    this.columnsSelectorMenu.menu.focusFirstItem('mouse');\n    this.columnsSelectorMenu.openMenu();\n  }\n\n  /**\n   * columns selected model\n   */\n  columnsSelected: string[] = [];\n  isColumnSelected(column: string) {\n    return this.columnsSelected.includes(column);\n  }\n  initColumnsSelected() {\n    this.columnsSelected = this.getDataColumnNames(this.allColumns);\n  }\n\n  columnsSelectorMenuChange(selectedColumns: string[]) {\n    const displayedColumns = selectedColumns.concat(this.noDataColumnNames);\n\n    // Respects `allColumns` columns order\n    this.currentDisplayedColumns = this.allColumns.filter((column) => {\n      return displayedColumns.includes(column);\n    });\n  }\n\n  // Menu per row\n  @ViewChild('contextMenuTrigger', { read: MatMenuTrigger })\n  contextMenu!: MatMenuTrigger;\n  contextMenuPosition = { x: '0px', y: '0px' };\n  onContextMenu(row: T, event: MouseEvent) {\n    event.preventDefault();\n\n    this.contextMenuPosition.x = event.clientX + 'px';\n    this.contextMenuPosition.y = event.clientY + 'px';\n\n    this.contextMenu.menuData = { row };\n    this.contextMenu.menu.focusFirstItem('mouse');\n    this.contextMenu.openMenu();\n  }\n\n  // Actions per menu row\n  @Input() set rowMenuActions(value: RowMenuAction<T>[]) {\n    this.currentRowMenuActions = value;\n  }\n  currentRowMenuActions: RowMenuAction<T>[] = [];\n\n  @Output() rowMenuAction = new EventEmitter<RowMenuActionEvent<T>>();\n  onRowMenuAction(row: T, action: RowMenuAction<T>, event: Event) {\n    this.rowMenuAction.emit({ row, action, event });\n  }\n\n  // Prevents default contextmenu when action menu is showing\n  hasContextMenu = false;\n  @HostListener('document:contextmenu', ['$event'])\n  contextMenuIn(event: MouseEvent) {\n    if (this.hasContextMenu) {\n      event.preventDefault();\n    }\n  }\n\n  // Table Actions\n  @Input() set tableActions(value: TableAction[]) {\n    this.currentTableActions = value;\n  }\n  currentTableActions: TableAction[] = [];\n\n  @Output() tableActionEvent = new EventEmitter<TableActionEvent>();\n  onTableAction(action: TableAction, event: Event) {\n    this.tableActionEvent.emit({ action, event });\n  }\n\n  // Row Actions\n  @Input() set rowActions(value: RowAction<T>[]) {\n    this.currentRowActions = value;\n  }\n  currentRowActions: RowAction<T>[] = [];\n\n  @Output() rowActionEvent = new EventEmitter<RowActionEvent<T>>();\n  onRowAction(row: T, action: RowAction<T>, event: Event) {\n    this.rowActionEvent.emit({ row, action, event });\n  }\n\n  // Row click & double click\n  @Input() rowClickDelay = DEFAULT_ROW_CLICK_DELAY;\n  private noRowClick = false;\n  private timer!: ReturnType<typeof setTimeout>;\n\n  @Output() rowClick = new EventEmitter<RowEvent<T>>();\n  onRowClick(row: T, event: Event) {\n    this.timer = setTimeout(() => {\n      if (!this.noRowClick) {\n        this.onRowSelectedChange(row);\n        this.rowClick.emit({ row, event });\n      }\n\n      this.noRowClick = false;\n    }, this.rowClickDelay);\n  }\n\n  @Output() rowDblClick = new EventEmitter<RowEvent<T>>();\n  onRowDblClick(row: T, event: Event) {\n    this.noRowClick = true;\n    clearTimeout(this.timer);\n\n    this.rowDblClick.emit({ row, event });\n  }\n\n  @ViewChild('tooltipTrigger', { read: MatMenuTrigger })\n  tooltipTrigger!: MatMenuTrigger;\n  tooltipMenuPosition: tooltipMenuPosition = { x: '0px', y: '0px' };\n\n  // Feching data in a tooltip cell\n  tooltipFetchAsyncData(\n    row: T,\n    columnConfigurationObject: CommonConfiguartion & TooltipConfiguration,\n    event: MouseEvent\n  ) {\n    event.stopPropagation();\n    columnConfigurationObject\n      .searchMethod(row)\n      .subscribe((tooltipData: string) => {\n        this.tooltipData = tooltipData;\n\n        this.tooltipMenuPosition.x = event.clientX + 'px';\n        this.tooltipMenuPosition.y = event.clientY + 'px';\n\n        this.tooltipTrigger.openMenu();\n      });\n  }\n}\n","<div class=\"table-header\">\n  <div class=\"table-header-left\">\n    <mat-form-field\n      [hidden]=\"!currentTableOptions.showFilter\"\n      class=\"table-filter\">\n      <mat-label>{{ 'tableFilter' | translate }}</mat-label>\n\n      <div class=\"input-container\">\n        <input\n          matInput\n          [(ngModel)]=\"filterValue\"\n          (keyup)=\"applyFilter()\" />\n\n        <div class=\"clear-button\">\n          <button\n            mat-button\n            *ngIf=\"filterValue\"\n            matSuffix\n            mat-icon-button\n            aria-label=\"Clear\"\n            (click)=\"filterValue = ''; applyFilter()\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </div>\n      </div>\n    </mat-form-field>\n  </div>\n\n  <div class=\"table-header-right\">\n    <span\n      [hidden]=\"!currentTableOptions.showResult\"\n      class=\"table-result\"\n      >{{ currentDataSource.filteredData.length }} result(s)\n    </span>\n\n    <div\n      [hidden]=\"!currentTableOptions.showTableActions\"\n      class=\"table-actions\">\n      <button\n        *ngFor=\"let action of currentTableActions\"\n        mat-raised-button\n        (click)=\"onTableAction(action, $event)\"\n        [disabled]=\"action.disabled\"\n        [matTooltip]=\"\n          action.translateKey ? (action.translateKey | translate) : ''\n        \"\n        [color]=\"action.color\"\n        [style.color]=\"action.color\"\n        [style.backgroundColor]=\"action.bgColor\">\n        <mat-icon>{{ action.icon }}</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n\n<table\n  mat-table\n  matSort\n  [dataSource]=\"currentDataSource\"\n  class=\"table-content\">\n  <ng-container [matColumnDef]=\"NoDataColumnName.rowsSelector\">\n    <th\n      mat-header-cell\n      *matHeaderCellDef\n      class=\"row-selector-cell custom-table-header-cell\"\n      [hidden]=\"!currentTableOptions.showRowsSelector\">\n      <mat-checkbox\n        *ngIf=\"currentTableOptions.multipleRowsSelected\"\n        (change)=\"$event ? masterToggle() : null\"\n        [checked]=\"currentRowsSelected.hasValue() && isAllSelected()\"\n        [indeterminate]=\"currentRowsSelected.hasValue() && !isAllSelected()\">\n      </mat-checkbox>\n    </th>\n\n    <td\n      mat-cell\n      *matCellDef=\"let row\"\n      class=\"row-selector-cell custom-table-cell\"\n      [hidden]=\"!currentTableOptions.showRowsSelector\">\n      <mat-checkbox\n        (click)=\"$event.stopPropagation()\"\n        (change)=\"$event ? currentRowsSelected.toggle(row) : null\"\n        [checked]=\"currentRowsSelected.isSelected(row)\">\n      </mat-checkbox>\n    </td>\n  </ng-container>\n\n  <ng-container [matColumnDef]=\"NoDataColumnName.columnsSelector\">\n    <th\n      mat-header-cell\n      *matHeaderCellDef\n      class=\"column-selector-cell custom-table-header-cell\"\n      [hidden]=\"!currentTableOptions.showColumnsSelector\">\n      <mat-icon\n        (click)=\"showColumnsMenuClick($event)\"\n        class=\"column-selector-icon\"\n        >{{ columnsSelectorIcon }}</mat-icon\n      >\n    </th>\n\n    <td\n      mat-cell\n      *matCellDef=\"let row\"\n      class=\"column-selector-cell custom-table-cell\"\n      [hidden]=\"!currentTableOptions.showRowActions\">\n      <button\n        *ngFor=\"let action of currentRowActions\"\n        mat-icon-button\n        (click)=\"onRowAction(row, action, $event)\"\n        [disabled]=\"action.isDisabled ? action.isDisabled(row) : false\"\n        [matTooltip]=\"\n          action.translateKey ? (action.translateKey | translate) : ''\n        \"\n        [color]=\"action.color\"\n        [style.color]=\"action.color\"\n        [style.backgroundColor]=\"action.bgColor\">\n        <mat-icon>{{ action.icon }}</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <ng-container\n    *ngFor=\"let column of getDataColumnNames(currentDisplayedColumns)\"\n    [matColumnDef]=\"column\">\n    <th\n      mat-header-cell\n      mat-sort-header\n      *matHeaderCellDef\n      [style.width]=\"columnsConfiguration[column].width\"\n      class=\"custom-table-header-cell\">\n      {{ columnsConfiguration[column].translateKey | translate }}\n    </th>\n\n    <td\n      mat-cell\n      class=\"custom-table-cell\"\n      *matCellDef=\"let row\"\n      (contextmenu)=\"\n        currentTableOptions.showMenuActions &&\n          currentRowMenuActions.length &&\n          onContextMenu(row, $event)\n      \">\n      <div [ngSwitch]=\"columnsConfiguration[column].type\">\n        <div *ngIf=\"columnsConfiguration[column].type === 'date'\">\n          {{ row[column] | date : $any(columnsConfiguration[column]).format }}\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'number'\">\n          <!-- TODO: numberPipe -->\n          {{ row[column] }}\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'boolean'\">\n          <mat-icon\n            *ngIf=\"!row[column]\"\n            color=\"warn\"\n            >{{\n              $any(columnsConfiguration[column]).iconFalse\n                ? $any(columnsConfiguration[column]).iconFalse\n                : 'close'\n            }}</mat-icon\n          >\n\n          <mat-icon\n            *ngIf=\"row[column]\"\n            color=\"primary\"\n            >{{\n              $any(columnsConfiguration[column]).iconTrue\n                ? $any(columnsConfiguration[column]).iconTrue\n                : 'check'\n            }}</mat-icon\n          >\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'tooltip'\">\n          <mat-icon\n            id=\"tooltip-button\"\n            *ngIf=\"row[column]\"\n            color=\"primary\"\n            (click)=\"\n              tooltipFetchAsyncData(\n                row,\n                $any(columnsConfiguration[column]),\n                $event\n              )\n            \"\n            >{{\n              $any(columnsConfiguration[column]).icon\n                ? $any(columnsConfiguration[column]).icon\n                : 'info'\n            }}</mat-icon\n          >\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'string'\">\n          <!-- TODO: stringPipe -->\n          {{ row[column] }}\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'object'\">\n          {{ $any(columnsConfiguration[column]).displayWith(row[column]) }}\n        </div>\n\n        <div *ngIf=\"columnsConfiguration[column].type === 'checkbox'\">\n          <mat-checkbox\n            color=\"primary\"\n            (click)=\"\n              tooltipFetchAsyncData(\n                row,\n                $any(columnsConfiguration[column]),\n                $event\n              )\n            \"></mat-checkbox>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr\n    [hidden]=\"\n      currentDataSource.data.length === 0 &&\n      !currentTableOptions.showHeaderWhenContentNoData\n    \"\n    mat-header-row\n    *matHeaderRowDef=\"currentDisplayedColumns\"></tr>\n\n  <tr\n    [hidden]=\"currentDataSource.data.length === 0\"\n    mat-row\n    *matRowDef=\"let row; columns: currentDisplayedColumns\"\n    [ngClass]=\"{\n      'row-selected':\n        currentTableOptions.markRowSelected &&\n        currentRowsSelected.isSelected(row)\n    }\"\n    (click)=\"onRowClick(row, $event)\"\n    (dblclick)=\"onRowDblClick(row, $event)\"></tr>\n\n  <tr\n    class=\"mat-row\"\n    *matNoDataRow>\n    <td\n      class=\"mat-cell text-center custom-table-cell\"\n      colspan=\"100%\">\n      {{\n        currentDataSource.data.length === 0\n          ? ('tableNoData' | translate)\n          : ('tableNoFilteredData' | translate)\n      }}\n    </td>\n  </tr>\n</table>\n\n<mat-paginator\n  [hidden]=\"\n    !currentPaginatorOptions.show || currentDataSource.data.length === 0\n  \"\n  [pageSizeOptions]=\"currentPaginatorOptions.pageSizeOptions\"\n  [pageSize]=\"\n    currentPaginatorOptions.pageSize ||\n    currentPaginatorOptions.pageSizeOptions[0]\n  \"\n  [showFirstLastButtons]=\"currentPaginatorOptions.showFirstLastButtons || false\"\n  [pageIndex]=\"currentPaginatorOptions.pageIndex || 0\"\n  (page)=\"onPageChange($event)\"></mat-paginator>\n\n<!-- START columnsSelector -->\n<span\n  #columnsSelectorMenuTrigger\n  style=\"visibility: hidden; position: fixed\"\n  [style.left]=\"columnsSelectorMenuPosition.x\"\n  [style.top]=\"columnsSelectorMenuPosition.y\"\n  [matMenuTriggerFor]=\"columnsSelectorMenu\"\n  (menuOpened)=\"columnsSelectorIcon = 'expand_less'\"\n  (menuClosed)=\"columnsSelectorIcon = 'expand_more'\"></span>\n\n<mat-menu\n  #columnsSelectorMenu=\"matMenu\"\n  backdropClass=\"columns-selector-menu-backdrop\"\n  class=\"columns-selector-menu\">\n  <ng-template\n    matMenuContent\n    let-columns=\"columns\">\n    <mat-selection-list\n      [(ngModel)]=\"columnsSelected\"\n      (ngModelChange)=\"columnsSelectorMenuChange($event)\">\n      <mat-list-option\n        *ngFor=\"let column of getDataColumnNames(columns)\"\n        [ngClass]=\"{ 'column-selected': isColumnSelected(column) }\"\n        [value]=\"column\"\n        (click)=\"$event.stopPropagation()\">\n        {{ columnsConfiguration[column].translateKey | translate }}\n      </mat-list-option>\n    </mat-selection-list>\n  </ng-template>\n</mat-menu>\n<!-- END columnsSelector -->\n\n<!-- START Menu per row -->\n<span\n  #contextMenuTrigger\n  style=\"visibility: hidden; position: fixed\"\n  [style.left]=\"contextMenuPosition.x\"\n  [style.top]=\"contextMenuPosition.y\"\n  [matMenuTriggerFor]=\"contextMenu\"\n  (menuOpened)=\"hasContextMenu = true\"\n  (menuClosed)=\"hasContextMenu = false\"></span>\n\n<mat-menu\n  #contextMenu=\"matMenu\"\n  backdropClass=\"actions-selector-menu-backdrop\"\n  class=\"actions-selector-menu\">\n  <ng-template\n    matMenuContent\n    let-row=\"row\">\n    <button\n      mat-menu-item\n      *ngFor=\"let rowMenuAction of currentRowMenuActions\"\n      (click)=\"onRowMenuAction(row, rowMenuAction, $event)\"\n      [disabled]=\"\n        rowMenuAction.isDisabled ? rowMenuAction.isDisabled(row) : false\n      \">\n      {{ rowMenuAction.translateKey | translate }}\n    </button>\n  </ng-template>\n</mat-menu>\n<!-- END Menu per row -->\n\n<span\n  #tooltipTrigger\n  style=\"visibility: hidden; position: fixed\"\n  [style.left]=\"tooltipMenuPosition.x\"\n  [style.top]=\"tooltipMenuPosition.y\"\n  mat-icon-button\n  [matMenuTriggerFor]=\"tooltipMenu\"\n  (menuClosed)=\"tooltipData = ''\">\n</span>\n\n<mat-menu #tooltipMenu=\"matMenu\">\n  <ng-container *ngIf=\"tooltipData\">\n    <div class=\"tooltip-wrapper\">\n      <div [innerHTML]=\"tooltipData\"></div>\n    </div>\n  </ng-container>\n</mat-menu>\n","/*\n * Public API Surface of table-generator\n */\n\nexport * from './lib/models/models';\nexport * from './lib/table-generator.component';\nexport * from './lib/table-generator.module';\n","import {\n  LocalDate,\n  QuickSearchEntity,\n  QuickSearchEntityType,\n} from '@models/models';\nimport { ReplaySubject } from 'rxjs';\n\nexport const dateToLocalDate = (date: Date): LocalDate => {\n  return [\n    date.getFullYear(),\n    date.getMonth() + 1,\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n  ];\n};\n\nexport const localDateToDate = (localDate: LocalDate) => {\n  const [year, month, date, hours, minutes, seconds] = localDate;\n\n  return new Date(year, month - 1, date, hours, minutes, seconds);\n};\n\nexport const fileToBase64 = (file: File) => {\n  const result = new ReplaySubject<string>(1);\n  const reader = new FileReader();\n\n  reader.readAsBinaryString(file);\n  reader.onload = (event) =>\n    result.next(btoa(event.target?.result?.toString() || ''));\n  return result;\n};\n\nexport function constructUrlWithParams(url: string, paramsObj: any): string {\n  if (!paramsObj) {\n    return url;\n  }\n\n  let constructedUrl = url + '?';\n\n  for (const key in paramsObj) {\n    if (paramsObj.hasOwnProperty(key)) {\n      constructedUrl += `${key}=${encodeURIComponent(paramsObj[key])}&`;\n    }\n  }\n\n  return constructedUrl.slice(0, -1);\n}\n\nexport function sortResultsByTypeOrder(\n  results: QuickSearchEntity[]\n): QuickSearchEntity[] {\n  const typeOrder: Record<QuickSearchEntityType, number> = {\n    EVT: 1,\n    PAR_EVT: 2,\n    TXM: 3,\n    NTXM: 4,\n    CO: 5,\n  };\n\n  return results.sort((a, b) => typeOrder[a.type] - typeOrder[b.type]);\n}\n\nexport function arrayEquals(a: any[], b: any[]) {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  );\n}\n\nexport function filterObjectArrayByProperty<T>(\n  filterValue: string,\n  list: Array<T>,\n  filterBy: string\n): T[] {\n  if (!filterValue || !(typeof filterValue === 'string')) {\n    return list;\n  }\n\n  return list.filter((element: any) =>\n    element[filterBy].toLowerCase().includes(filterValue.toLowerCase())\n  );\n}\n\nexport function sortArrayByObjectKey(\n  unsortedArray: any[],\n  key: string,\n  reversed: boolean = false\n) {\n  const sortedArray = [...unsortedArray];\n\n  if (reversed) {\n    sortedArray.sort((a, b) => b[key].localeCompare(a[key]));\n  } else {\n    sortedArray.sort((a, b) => a[key].localeCompare(b[key]));\n  }\n\n  return sortedArray;\n}\n","import { Injectable } from '@angular/core';\nimport { Role } from '@constants/app-roles';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RolesService {\n  private _endpointURL = '/roles';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getAllRoles(): Observable<Role[]> {\n    return this.apiService.read<Role[]>(`${this._endpointURL}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Role } from '@constants/app-roles';\nimport { UserGroup } from '@constants/app-user-groups';\nimport { DomainItem } from '@models/domain-item.model';\nimport { UserPermissionDTO } from '@models/user-permission-dto';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  private _endpointURL = '/users';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getCurrentUserAuthentication(): Observable<UserPermissionDTO> {\n    return this.apiService.read<UserPermissionDTO>(\n      `${this._endpointURL}/authentication`\n    );\n  }\n\n  updateCurrentUserRoles(rolesToSet: Role[]): Observable<UserPermissionDTO> {\n    return this.apiService.read<UserPermissionDTO>(\n      `${this._endpointURL}/authentication`,\n      { headers: { ROLES: rolesToSet } }\n    );\n  }\n\n  getUserGroupsByEmail(email: string): Observable<UserGroup[]> {\n    return this.apiService.read<UserGroup[]>(\n      `${this._endpointURL}/groups/${email}`\n    );\n  }\n\n  updateUserGroupsByEmail(\n    email: string,\n    groupsToSet: DomainItem[]\n  ): Observable<void> {\n    return this.apiService.create<void>(\n      `${this._endpointURL}/groups/${email}/update`,\n      { body: groupsToSet }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityType, propertiesByEntityType } from '@constants/entities';\nimport { NavigationHistoryNode } from '@models/navigation-history-node.model';\nimport { TabDetail } from '@services/tabs/tabs.service';\nimport { NeosTreeNode } from '@shared/components/tree/tree.component';\nimport { sortArrayByObjectKey } from '@shared/utils/helpers';\nimport { Subject } from 'rxjs';\n\nconst NAVIGATION_HISTORY_STORAGE_KEY = 'neosNavigationHistory';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationHistoryService {\n  private _historyChangedSource = new Subject<void>();\n  private _navigationRequestSource = new Subject<NavigationHistoryNode>();\n\n  get historyChanged$() {\n    return this._historyChangedSource.asObservable();\n  }\n\n  get navigationRequested$() {\n    return this._navigationRequestSource.asObservable();\n  }\n\n  constructor() {\n    const initializedHistoryObject: any = {};\n    const userHistory: any = JSON.parse(\n      localStorage.getItem(NAVIGATION_HISTORY_STORAGE_KEY) ||\n        JSON.stringify(initializedHistoryObject)\n    );\n\n    if (userHistory.all) {\n      initializedHistoryObject.all = userHistory.all;\n    }\n    Object.values(EntityType).forEach((entityType) => {\n      if (userHistory[entityType]) {\n        initializedHistoryObject[entityType] = userHistory[entityType];\n      }\n    });\n\n    localStorage.setItem(\n      NAVIGATION_HISTORY_STORAGE_KEY,\n      JSON.stringify(initializedHistoryObject)\n    );\n  }\n\n  navigateToNode(navigationNode: NavigationHistoryNode): void {\n    this._navigationRequestSource.next(navigationNode);\n  }\n\n  getNavigationHistoryTree(): NeosTreeNode[] {\n    const userHistory: Record<EntityType, NavigationHistoryNode[]> = JSON.parse(\n      localStorage.getItem(NAVIGATION_HISTORY_STORAGE_KEY)!\n    );\n    const userHistoryTree: NeosTreeNode[] = sortArrayByObjectKey(\n      Object.entries(userHistory).map(([entity, children]) => {\n        let icon = '';\n        const mappedChildren = (children as NavigationHistoryNode[]).map(\n          (navigationNode) => {\n            icon =\n              propertiesByEntityType.get(navigationNode.entity)?.icon || '';\n\n            return {\n              name: navigationNode.displayLabel,\n              icon,\n              callback: () => this.navigateToNode(navigationNode),\n            } as NeosTreeNode;\n          }\n        );\n\n        return {\n          nameTranslateKey: entity,\n          children: mappedChildren,\n          icon,\n        } as NeosTreeNode;\n      }),\n      'nameTranslateKey'\n    );\n\n    return [\n      { nameTranslateKey: 'mostRecentlyUsed', children: userHistoryTree },\n    ];\n  }\n\n  addNavigationHistory(\n    entity: EntityType,\n    displayLabel: string,\n    tabDetails: TabDetail\n  ) {\n    const userHistory = JSON.parse(\n      localStorage.getItem(NAVIGATION_HISTORY_STORAGE_KEY)!\n    );\n\n    const historyElement: NavigationHistoryNode = {\n      entity,\n      displayLabel,\n      tabDetails,\n    };\n\n    if (!userHistory.all) {\n      userHistory.all = [];\n    }\n    if (!userHistory[entity]) {\n      userHistory[entity] = [];\n    }\n\n    if (\n      !userHistory.all.some(\n        (elem: NavigationHistoryNode) =>\n          historyElement.displayLabel === elem.displayLabel\n      )\n    ) {\n      userHistory.all = [historyElement, ...userHistory.all];\n      userHistory.all.splice(5);\n    }\n\n    if (\n      !userHistory[entity].some(\n        (elem: NavigationHistoryNode) =>\n          historyElement.displayLabel === elem.displayLabel\n      )\n    ) {\n      userHistory[entity] = [historyElement, ...userHistory[entity]];\n      userHistory[entity].splice(5);\n    }\n\n    localStorage.setItem(\n      NAVIGATION_HISTORY_STORAGE_KEY,\n      JSON.stringify(userHistory)\n    );\n\n    this._historyChangedSource.next();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TextareaConfiguration } from '../../models/models';\nimport { errorControlMessage } from '../../utils/errors/error-control';\nimport { hasRequiredValidator } from '../../utils/validators/has-validator';\n\n@Component({\n  selector: 'talan-textarea',\n  templateUrl: './textarea.component.html',\n  styleUrls: ['./textarea.component.scss'],\n})\nexport class TextareaComponent {\n  private _field!: TextareaConfiguration;\n\n  get field(): TextareaConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: TextareaConfiguration) {\n    this._field = value;\n  }\n\n  @Input() control!: FormControl;\n\n  get required() {\n    return hasRequiredValidator(this.control);\n  }\n\n  constructor() {}\n\n  errorControlMessage = errorControlMessage;\n}\n","<mat-form-field\n  [appearance]=\"$any(field).appearance\"\n  [hideRequiredMarker]=\"field.hideRequiredMarker\">\n  <mat-label>{{ field.label }}</mat-label>\n\n  <textarea\n    matInput\n    [attr.rows]=\"field.rows\"\n    [formControl]=\"control\"\n    [required]=\"required\"\n    [placeholder]=\"field.placeholder || ''\">\n  </textarea>\n\n  <mat-hint\n    *ngIf=\"field.hintStart\"\n    align=\"start\"\n    >{{ field.hintStart }}</mat-hint\n  >\n  <mat-hint\n    *ngIf=\"field.hintEnd\"\n    align=\"end\"\n    >{{ field.hintEnd }}</mat-hint\n  >\n\n  <mat-error\n    *ngIf=\"control.invalid\"\n    [innerHTML]=\"errorControlMessage(control) | safeHtml\"></mat-error>\n</mat-form-field>\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport {\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MatTooltipModule,\n} from '@angular/material/tooltip';\n\n@NgModule({\n  exports: [\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatMenuModule,\n    MatListModule,\n    MatButtonModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: { showDelay: 1000 },\n    },\n  ],\n})\nexport class MaterialModule {}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DiscountType } from '@constants/discount-types';\nimport { FieldConfiguration } from 'projects/dynamic-form/src/lib/models/models';\n\n@Component({\n  selector: 'app-discount-manager-dialog',\n  templateUrl: './discount-manager-dialog.component.html',\n  styleUrls: ['./discount-manager-dialog.component.scss'],\n})\nexport class DiscountManagerDialogComponent implements OnInit {\n  @Output() formSubmitted = new EventEmitter<any>();\n  form!: FormGroupDirective;\n  formDirty = false;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private dialogRef: MatDialogRef<DiscountManagerDialogComponent>\n  ) {}\n\n  fields: FieldConfiguration[] = [];\n\n  ngOnInit(): void {\n    this.fields = [\n      {\n        type: 'checkbox',\n        name: 'accumulated',\n        disabled: false,\n        updateOn: 'change',\n        labelPosition: 'before',\n        noFormField: false,\n        value: true,\n      },\n      {\n        type: 'select',\n        name: 'organization',\n        label: 'organization',\n        options: this.data.organizations,\n        value: this.data.organizations[this.data.editedIndex],\n        displayWith: (value: any) => value.name,\n        compareFn: (o1: any, o2: any) => o1.name === o2.name,\n      },\n\n      {\n        type: 'select',\n        name: 'product',\n        label: 'product',\n        options: this.data.products,\n        value: {},\n        displayWith: (value: any) => (value ? value.name : ''),\n        compareFn: (o1: any, o2: any) => o1.name === o2.name,\n      },\n\n      {\n        type: 'select',\n        name: 'discountType',\n        label: 'discountType',\n        options: Object.values(DiscountType),\n        value: Object.values(DiscountType)[0],\n      },\n\n      {\n        type: 'datetime',\n        name: 'startDate',\n        label: 'startDate',\n        value: new Date(this.data.row.startDate.split('/').reverse().join('/')),\n      },\n      {\n        type: 'datetime',\n        name: 'endDate',\n        label: 'endDate',\n        value: new Date(this.data.row.endDate.split('/').reverse().join('/')),\n      },\n\n      // offPeakstart\n      {\n        type: 'datetime',\n        name: 'offPeakStart',\n        label: 'offPeakStart',\n        value: new Date(),\n      },\n      {\n        type: 'datetime',\n        name: 'offPeakEnd',\n        label: 'offPeakEnd',\n        value: new Date(),\n      },\n      {\n        type: 'checkbox',\n        name: 'isOssOrigin',\n        disabled: false,\n        updateOn: 'change',\n        labelPosition: 'before',\n        noFormField: false,\n        value: true,\n      },\n      {\n        type: 'select',\n        name: 'isWithAssociatedProduct',\n        label: 'isWithAssociatedProduct',\n        options: Object.values(isOssOriginAndIsWithAssociatedProduct),\n        value: Object.values(isOssOriginAndIsWithAssociatedProduct)[0],\n      },\n    ];\n  }\n\n  formChanges(form: FormGroupDirective) {\n    this.form = form;\n    this.formDirty = form.dirty || false;\n  }\n\n  formSubmit(form: FormGroupDirective) {\n    this.dialogRef.close(form.value);\n  }\n\n  submit() {\n    this.form.ngSubmit.emit();\n  }\n\n  closeDialog() {\n    if (!this.form.pristine) {\n      const confirmResult = window.confirm(\n        'You have unsaved changes. Are you sure you want to close the modal?'\n      );\n      if (confirmResult) {\n        this.dialogRef.close();\n      }\n    } else {\n      this.dialogRef.close();\n    }\n  }\n}\n\n// enum DiscountType {\n//   percentage = 'PERCENTAGE',\n//   fixed = 'FIXED',\n// }\n\nenum isOssOriginAndIsWithAssociatedProduct {\n  both = 'BOTH',\n  yes = 'YES',\n  no = 'NO',\n}\n\ninterface Identifier {\n  identifier: string;\n  value: boolean;\n  type: string;\n  privateOperator: boolean;\n}\n","<talan-dynamic-form\n  [fields]=\"fields\"\n  (submit)=\"formSubmit($event)\"\n  (changes)=\"formChanges($event)\">\n</talan-dynamic-form>\n\n<div\n  class=\"actions\"\n  mat-dialog-actions>\n  <button\n    id=\"button-cancel\"\n    (click)=\"closeDialog()\"\n    mat-button>\n    {{ 'cancel' | translate }}\n  </button>\n\n  <button\n    id=\"button-add\"\n    mat-raised-button\n    color=\"primary\"\n    (click)=\"submit()\">\n    {{ 'add' | translate }}\n  </button>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\nexport interface ColumnConfiguration {\n  accesor: string;\n  headerTranslateKey: string;\n}\n\n@Component({\n  selector: 'app-add-remove-table',\n  templateUrl: './add-remove-table.component.html',\n  styleUrls: ['./add-remove-table.component.scss'],\n})\nexport class AddRemoveTableComponent implements OnInit {\n  @Input() labelTranslateKey!: string;\n  @Input() columnsConfiguration!: ColumnConfiguration[];\n  @Input() data!: any[];\n  @Input() canAdd: boolean = true;\n  @Input() canRemove: boolean = true;\n  @Output() onAdd = new EventEmitter<void>();\n  @Output() onRemove = new EventEmitter<void>();\n  @Input() addButtonTooltip: string = 'add';\n  @Input() removeButtonTooltip: string = 'remove';\n  columnsToDisplay!: string[];\n\n  ngOnInit(): void {\n    this.columnsToDisplay = this.columnsConfiguration.map(\n      (columnDefinition) => columnDefinition.accesor\n    );\n  }\n\n  addClicked() {\n    this.onAdd.emit();\n  }\n  removeClicked() {\n    this.onRemove.emit();\n  }\n}\n","<div class=\"table-container\">\n  <div class=\"table-header\">\n    <h4>{{ labelTranslateKey | translate | uppercase }}</h4>\n\n    <div class=\"add-remove-buttons\">\n      <button\n        id=\"add-button\"\n        (click)=\"addClicked()\"\n        [matTooltip]=\"addButtonTooltip | translate\"\n        [matTooltipDisabled]=\"!canAdd\"\n        [disabled]=\"!canAdd\"\n        type=\"button\"\n        color=\"primary\"\n        mat-raised-button>\n        <mat-icon>add</mat-icon>\n      </button>\n\n      <button\n        id=\"remove-button\"\n        type=\"button\"\n        [matTooltip]=\"removeButtonTooltip | translate\"\n        [matTooltipDisabled]=\"!canRemove\"\n        [disabled]=\"!canRemove\"\n        (click)=\"removeClicked()\"\n        color=\"warn\"\n        mat-raised-button>\n        <mat-icon>remove</mat-icon>\n      </button>\n    </div>\n  </div>\n\n  <table\n    mat-table\n    [dataSource]=\"data\"\n    class=\"table\">\n    <ng-container\n      *ngFor=\"let columnDefinition of columnsConfiguration\"\n      [matColumnDef]=\"columnDefinition.accesor\">\n      <th\n        mat-header-cell\n        *matHeaderCellDef>\n        {{ columnDefinition.headerTranslateKey | translate }}\n      </th>\n\n      <td\n        mat-cell\n        *matCellDef=\"let element\">\n        {{ element[columnDefinition.accesor] }}\n      </td>\n    </ng-container>\n\n    <tr\n      mat-header-row\n      *matHeaderRowDef=\"columnsToDisplay\"></tr>\n\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: columnsToDisplay\"></tr>\n  </table>\n</div>\n","import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpParams,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@environment';\nimport { NGXLogger } from 'ngx-logger';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nexport interface HttpOptions<T> {\n  body?: T;\n  headers?:\n    | HttpHeaders\n    | {\n        [header: string]: string | string[];\n      };\n  params?:\n    | HttpParams\n    | {\n        [param: string]: string | string[];\n      };\n  observe?: 'body' | 'events' | 'response';\n  reportProgress?: boolean;\n  responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  withCredentials?: boolean;\n}\n\n/**\n * Defult HttpOptions when call a ApiService request CRUD methods\n */\nexport const DEFAULT_HTTP_OPTIONS: HttpOptions<undefined> = {\n  headers: { 'Content-Type': 'application/json;charset=utf-8' },\n  observe: 'response' as 'body',\n  responseType: 'json',\n};\n\n/**\n * Default API Service\n *\n * Based on CRUD methods\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  protected baseUrl: string = '';\n  protected httpOptions: HttpOptions<any> = {};\n\n  constructor(\n    private httpClient: HttpClient,\n    private readonly logger: NGXLogger\n  ) {\n    this.setBaseUrl(environment.baseUrl);\n    this.setHttpOptions(DEFAULT_HTTP_OPTIONS);\n\n    logger.info('baseUrl', this.baseUrl, 'httpOptions', this.httpOptions);\n  }\n\n  /**\n   * Set Current HttpOptions\n   *\n   * @use Use `null` | `undefined` to restore `DEFAULT_HTTP_OPTIONS`\n   *\n   * @example\n   * setHttpOptions()\n   *\n   * // this.httpOptions is DEFAULT_HTTP_OPTIONS\n   */\n  setHttpOptions<T>(httpOptions?: HttpOptions<T>) {\n    if (!httpOptions) {\n      this.httpOptions = DEFAULT_HTTP_OPTIONS;\n    } else {\n      this.httpOptions = httpOptions;\n    }\n  }\n\n  /**\n   * Get Current HttpOptions\n   */\n  getHttpOptions() {\n    return this.httpOptions;\n  }\n\n  /**\n   * Set the baseUrl\n   */\n  setBaseUrl(baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  /**\n   * Get the baseUrl\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  /**\n   * Get the complete url\n   *\n   * @example startsWith '/'\n   *\n   * this.baseUrl = ''\n   * const criteria = '23-';\n   * getCompleteUrl(`/quick-search/search?criteria=${encodeURIComponent(JSON.stringify(criteria)}`)\n   *\n   * // '/quick-search/search?criteria=23-'\n   *\n   * @example No startsWith '/'\n   *\n   * getCompleteUrl(`quick-search/search?criteria=${encodeURIComponent(JSON.stringify(criteria)}`)\n   *\n   * // '/quick-search/search?criteria=23-'\n   */\n  getCompleteUrl(url: string) {\n    if (!url.startsWith('/')) {\n      throw new Error('URL should start with \"/\"');\n    }\n\n    return `${this.baseUrl}${url}`;\n  }\n\n  /**\n   * Create ('POST') request method\n   *\n   * @example\n   * create('/events/search', { body: { eventType: 'News (Planned)' }})\n   */\n  create<T, U = {}>(url: string, httpOptions?: HttpOptions<U>): Observable<T> {\n    return this.httpClient\n      .request('POST', this.getCompleteUrl(url), {\n        ...this.getHttpOptions(),\n        ...httpOptions,\n      })\n      .pipe(\n        map((response: HttpResponse<T>) => this.getResponseData<T>(response)),\n        catchError((error: HttpErrorResponse) => this.handleError(error))\n      );\n  }\n\n  /**\n   * Read ('GET') request method\n   *\n   * @example\n   * read(`/quick-search/search?criteria=${encodeURIComponent(JSON.stringify(criteria)}`)\n   */\n  read<T>(url: string, httpOptions?: HttpOptions<undefined>): Observable<T> {\n    return this.httpClient\n      .request('GET', this.getCompleteUrl(url), {\n        ...this.getHttpOptions(),\n        ...httpOptions,\n      })\n      .pipe(\n        map((response: HttpResponse<T>) => this.getResponseData<T>(response)),\n        catchError((error: HttpErrorResponse) => this.handleError(error))\n      );\n  }\n\n  /**\n   * Update ('PUT') request method\n   *\n   * TODO: Need to be verify if _ project uses 'PUT' methods\n   *\n   * @example\n   * update('/incidents/category/update/1', { body: { city: 'RIGA', eventType: 'Old (Planned)' }})\n   */\n  update<T, U = {}>(url: string, httpOptions?: HttpOptions<U>): Observable<T> {\n    return this.httpClient\n      .request('PUT', this.getCompleteUrl(url), {\n        ...this.getHttpOptions(),\n        ...httpOptions,\n      })\n      .pipe(\n        map((response: HttpResponse<T>) => this.getResponseData<T>(response)),\n        catchError((error: HttpErrorResponse) => this.handleError(error))\n      );\n  }\n\n  /**\n   * Delete ('DELETE') request method\n   *\n   * TODO: Need to be verify if _v2 project uses 'DELETE' methods\n   *\n   * @example\n   * delete('/incidents/category/delete/1')\n   */\n  delete<T>(url: string, httpOptions?: HttpOptions<undefined>): Observable<T> {\n    return this.httpClient\n      .request('DELETE', this.getCompleteUrl(url), {\n        ...this.getHttpOptions(),\n        ...httpOptions,\n      })\n      .pipe(\n        map((response: HttpResponse<T>) => this.getResponseData<T>(response)),\n        catchError((error: HttpErrorResponse) => this.handleError(error))\n      );\n  }\n\n  private getResponseData<T>(response: HttpResponse<T>): T {\n    this.logger.info(response);\n\n    return response.body!;\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    this.logger.info('Something wrong happened', error);\n\n    return throwError(error);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  exports: [MatProgressSpinnerModule],\n})\nexport class MaterialModule {}\n","export enum Role {\n  USERS = 'ROLE_STARGAZER_USERS',\n  ADMINISTRATORS = 'ROLE_STARGAZER_ADMINISTRATORS',\n  RESOURCE_MANAGER = 'ROLE_STARGAZER_RESOURCE_MANAGER',\n  PRICING_ADMIN = 'ROLE_STARGAZER_PRICING_ADMIN',\n  BILLING_ADMIN = 'ROLE_STARGAZER_BILLING_ADMIN',\n  VIEWER = 'ROLE_STARGAZER_VIEWER',\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { appRoutes } from '@constants/app-routes';\n\nconst routes: Routes = [\n  {\n    path: appRoutes.HOME,\n    loadChildren: () =>\n      import('./pages/pages.module').then((m) => m.PagesModule),\n  },\n  { path: '**', redirectTo: appRoutes.NOT_FOUND },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { paramsInheritanceStrategy: 'always' }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml',\n})\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private domSanitized: DomSanitizer) {}\n\n  transform(value?: string) {\n    return this.domSanitized.bypassSecurityTrustHtml(value || '');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MAT_DATE_LOCALE, MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\n  MatFormFieldDefaultOptions,\n  MatFormFieldModule,\n} from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MatTooltipModule,\n} from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { MatTimepickerModule } from 'mat-timepicker';\n\nconst matFormFieldOptions: MatFormFieldDefaultOptions = {\n  appearance: 'outline', // 'fill' | 'outline' for angular >= 12\n};\n\nconst matTooltipOptions = {\n  showDelay: 1000,\n};\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatTimepickerModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ],\n  providers: [\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: matFormFieldOptions,\n    },\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: matTooltipOptions,\n    },\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\n  ],\n})\nexport class MaterialModule {}\n","import { AbstractControl } from '@angular/forms';\n\nexport function hasRequiredValidator(control: AbstractControl): boolean {\n  if (control.validator) {\n    const validator = control.validator({} as AbstractControl);\n\n    if (validator && validator.required) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  OrganizationSearchResultDTO,\n  Relation,\n  SearchCriteria,\n  SearchOrganizationFormValue,\n  Term,\n} from '@models/models';\nimport { OrganizationEmbeddedDTO } from '@models/organization-embedded-dto.model';\nimport { ApiService } from '@services/api/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationsService {\n  private _endpointURL = '/organizations';\n\n  constructor(private readonly apiService: ApiService) {}\n\n  getOrganizationsByTransmissionIdList(\n    transmissionIds: number[]\n  ): Observable<OrganizationEmbeddedDTO[]> {\n    return this.apiService.create<OrganizationEmbeddedDTO[]>(\n      `${this._endpointURL}/findOrganizationList`,\n      {\n        body: transmissionIds,\n      }\n    );\n  }\n\n  getFilteredOrganizations(\n    searchCriteria: string,\n    limit = 1000\n  ): Observable<OrganizationEmbeddedDTO[]> {\n    return this.apiService.create<OrganizationEmbeddedDTO[]>(\n      `${this._endpointURL}/embedded/search`,\n      {\n        body: {\n          first: 0,\n          max: limit,\n          orders: [\n            {\n              identifier: 'code',\n              asc: true,\n            },\n          ],\n          terms: [\n            {\n              identifier: 'null',\n              value: null,\n              type: 'Or',\n              terms: [\n                {\n                  identifier: 'code',\n                  value: searchCriteria,\n                  type: 'Like',\n                  likeType: 'CONTAINS',\n                  operator: true,\n                },\n                {\n                  identifier: 'name',\n                  value: searchCriteria,\n                  type: 'Like',\n                  likeType: 'CONTAINS',\n                  operator: true,\n                },\n              ],\n            },\n          ],\n          relations: [],\n          values: {},\n        },\n      }\n    );\n  }\n\n  searchOrganization(\n    formValue: SearchOrganizationFormValue\n  ): Observable<OrganizationSearchResultDTO[]> {\n    let terms: Term[] = [];\n\n    // if country or city control was selected,  \"terms.value\" in \"countryRelation\" and \"citiesRelation\" will be set\n    const countryRelation: Relation = {\n      type: 'Join',\n      relationEntity: 'country',\n      terms: [\n        {\n          identifier: 'code',\n          value: '',\n          type: 'Eq',\n          privateOperator: true,\n        },\n      ],\n      subJoin: null,\n      joinType: 'INNER',\n    };\n\n    const citiesRelation: Relation = {\n      type: 'Join',\n      relationEntity: 'defaultCity',\n      terms: [\n        {\n          identifier: 'code',\n          value: '',\n          type: 'Eq',\n          privateOperator: true,\n        },\n      ],\n      subJoin: null,\n      joinType: 'INNER',\n    };\n\n    // iterating over formValue object to set body of request\n    Object.entries(formValue).forEach(([key, value]) => {\n      let formattedValue;\n      // setting value of term object\n      if (value) {\n        // if control is object -> formattedValue === value.name, else -> formattedValue = value\n        formattedValue =\n          (Array.isArray(value) && value.length > 0) ||\n          typeof value === 'string'\n            ? value\n            : value.name;\n\n        // setting like, likeType and operators\n\n        // if control is string\n        if (\n          typeof value === 'string' &&\n          key != 'country' &&\n          key != 'defaultCity'\n        ) {\n          terms.push({\n            identifier: key,\n            value: value,\n            type: 'Like',\n            likeType: 'CONTAINS',\n            operator: true,\n          });\n        }\n        // if control is Y or N type\n        if (\n          (key === 'isCustomer' ||\n            key === 'isProvider' ||\n            key === 'isActive' ||\n            key === 'isPoRefMandatory' ||\n            key === 'isBilledCurrencyLocked') &&\n          value.length > 0\n        ) {\n          terms.push({\n            identifier: key,\n            value: value,\n            type: 'In',\n          });\n        }\n\n        // if control is multiple select\n        if (\n          (key === 'type' || key === 'financialStatusType') &&\n          value.length > 0\n        ) {\n          terms.push({\n            identifier: key,\n            value: value,\n            type: 'In',\n          });\n        }\n\n        // if control is country or city\n        if (key === 'country' || key === 'defaultCity') {\n          if (key === 'country') {\n            countryRelation.terms[0].value = value.code;\n          } else {\n            citiesRelation.terms[0].value = value.code;\n          }\n        }\n      }\n    });\n\n    // default mandatory values for relations properties\n    const relations: Relation[] = [\n      {\n        type: 'Fetch',\n        relationEntity: 'country',\n        terms: [],\n        subJoin: null,\n        joinType: 'INNER',\n      },\n      {\n        type: 'Fetch',\n        relationEntity: 'defaultCity',\n        terms: [],\n        subJoin: null,\n        joinType: 'INNER',\n      },\n    ];\n\n    // Optional values for relations properties (if control is country or city)\n    countryRelation.terms[0].value && relations.push(countryRelation);\n    citiesRelation.terms[0].value && relations.push(citiesRelation);\n\n    const body: SearchCriteria = {\n      first: 0,\n      max: 1000,\n      orders: [],\n      terms: [...terms],\n      relations: [...relations],\n      values: {},\n    };\n\n    return this.apiService.create<OrganizationSearchResultDTO[]>(\n      '/organizations/result/search',\n      { body }\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment.prod';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component, HostListener } from '@angular/core';\nimport { TabsService } from '@services/tabs/tabs.service';\nimport { arrayEquals } from '@shared/utils/helpers';\n\n@Component({\n  selector: 'app-tabbed-container',\n  templateUrl: './tabbed-container.component.html',\n  styleUrls: ['./tabbed-container.component.scss'],\n})\nexport class TabbedContainerComponent {\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event: any) {\n    const urlSegments = event.target.location.pathname.split('/');\n    urlSegments.splice(0, 1);\n    const backToTabIndex = this.tabsService.openedTabs.findIndex((tab) =>\n      arrayEquals(tab.tabRoute, urlSegments)\n    );\n    this.tabsService.updateActiveTab(backToTabIndex);\n  }\n  constructor(private readonly tabsService: TabsService) {}\n\n  get activeTabIndex() {\n    return this.tabsService.activeTabIndex;\n  }\n\n  set activeTabIndex(index) {\n    this.tabsService.updateActiveTab(index);\n  }\n\n  get tabs() {\n    return this.tabsService.openedTabs;\n  }\n\n  get activeTabId() {\n    return this.tabsService.activeTabId;\n  }\n\n  get activeTabEntity() {\n    return this.tabsService.openedTabs.find(\n      (tab) => tab.id === this.activeTabId\n    )?.entity;\n  }\n\n  public tabChange(index: number) {\n    if (this.activeTabIndex !== index) {\n      this.activeTabIndex = index;\n    }\n  }\n\n  public tabClose(event: MouseEvent, id: string) {\n    this.tabsService.removeTab(id);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","<div\n  class=\"tabbed-container\"\n  [class]=\"'entity ' + activeTabEntity + '-background'\">\n  <nav mat-tab-nav-bar>\n    <a\n      mat-tab-link\n      *ngFor=\"let tab of tabs; index as i\"\n      [class]=\"'entity ' + tab.entity + '-background'\"\n      (click)=\"tabChange(i)\"\n      [active]=\"activeTabIndex === i\">\n      <mat-icon\n        style=\"font-size: 20px; margin-right: 0.5rem\"\n        *ngIf=\"tab.icon\"\n        >{{ tab.icon }}</mat-icon\n      >\n      <span\n        class=\"tab-text\"\n        [ngClass]=\"{ 'is-edited': tab.isEdited }\"\n        >{{ tab.label | translate }}</span\n      >\n      <span\n        *ngIf=\"tab.id === activeTabId\"\n        data-testid=\"close-button\"\n        style=\"font-size: 20px; margin-left: 1rem\"\n        (click)=\"tabClose($event, tab.id)\"\n        ><mat-icon style=\"font-size: 20px\">close</mat-icon></span\n      >\n    </a>\n  </nav>\n  <ng-content></ng-content>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TransmissionLightDTO } from '@models/transmission-light-dto.model';\nimport { TransmissionsService } from '@services/transmissions/transmissions.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-add-transmission-dialog',\n  templateUrl: './add-transmission-dialog.component.html',\n  styleUrls: ['./add-transmission-dialog.component.scss'],\n})\nexport class AddTransmissionDialogComponent implements OnDestroy {\n  private _onDestroy$ = new Subject<void>();\n  autocompleteControl = new FormControl();\n  filteredOptions: TransmissionLightDTO[] = [];\n  selected?: TransmissionLightDTO;\n  loading = false;\n  error = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<void>,\n    readonly transmissionsService: TransmissionsService\n  ) {}\n\n  getFilteredTransmissions = (query: string) =>\n    this.transmissionsService.getFilteredTransmissions(query);\n\n  getTransmissionDisplayValue(option: TransmissionLightDTO) {\n    if (!option) {\n      return '';\n    }\n\n    let displayValue = option.no;\n\n    if (option.title) {\n      displayValue += ` - ${option.title}`;\n    }\n    return displayValue;\n  }\n\n  setOptionSelected(option: TransmissionLightDTO) {\n    this.selected = option;\n  }\n\n  ngOnDestroy(): void {\n    this._onDestroy$.next();\n  }\n}\n","<div class=\"add-transmission-dialog\">\n  <div\n    mat-dialog-title\n    class=\"title\">\n    <span>{{ 'addTXToIncident' | translate }}</span>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <div\n    class=\"content\"\n    mat-dialog-content>\n    <app-autocomplete-async\n      id=\"field-autocomplete\"\n      labelTranslateKey=\"selectTransmission\"\n      [searchMethod]=\"getFilteredTransmissions\"\n      [displayValueFormatter]=\"getTransmissionDisplayValue\"\n      (onSelectedOption)=\"setOptionSelected($event)\"></app-autocomplete-async>\n  </div>\n\n  <div\n    class=\"actions\"\n    mat-dialog-actions>\n    <button\n      id=\"button-cancel\"\n      mat-button\n      [mat-dialog-close]=\"null\">\n      {{ 'cancel' | translate }}\n    </button>\n\n    <button\n      id=\"button-add\"\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!selected\"\n      [mat-dialog-close]=\"selected\"\n      cdkFocusInitial>\n      {{ 'add' | translate }}\n    </button>\n  </div>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Component, Input } from '@angular/core';\nimport { EmptyConfiguration } from '../../models/models';\n\n@Component({\n  selector: 'talan-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.scss'],\n})\nexport class EmptyComponent {\n  private _field!: EmptyConfiguration;\n\n  get field(): EmptyConfiguration {\n    return this._field;\n  }\n\n  @Input() set field(value: EmptyConfiguration) {\n    this._field = value;\n  }\n\n  constructor() {}\n}\n"],"sourceRoot":"webpack:///"}