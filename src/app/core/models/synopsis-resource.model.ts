import { EventDTO } from './event-dto.model';
import { CityCombobox, LocalDate } from './models';
import { NoteChanges } from './note-changes.model';
import { SynopsisResourceProfile } from './synopsis-resource-profile.model';
import { Updateable } from './updateable.interface';

export interface SynopsisResource extends Updateable {
  type: string;
  correlationId: number | string | null;
  code: string;
  codeLocal: string;
  name: string;
  resourceProfile: SynopsisResourceProfile;
  status: string;
  event: EventDTO | null;
  extView: boolean;
  externalCode: string | null;
  externalName: string;
  automaticPO: boolean;
  routingCode: string | null;
  bufferBefore: string | null;
  bufferAfter: string | null;
  scheduleSequence: number | null;
  evcViewCode: string;
  automaticallyGenerated: boolean;
  parent: SynopsisResource | null;
  city: CityCombobox | null;
  allocationControl: boolean;
  resourceWarningWhenUsed: null;
  resourceProperties: null;
  template: boolean;
  system: boolean;
  availabilityDefinitions: null;
  alwaysAvailable: boolean;
  organizationMessagings: null;
  contacts: null;
  temporaryContacts: null;
  ownerShipType: null;
  archiveDate: LocalDate | null;
  category: null;
  subCategory: null;
  address: string | null;
  description: string | null;
  noteChanges: NoteChanges;
  groupOfResources: boolean;
  blackListed: boolean;
  equipment: null;
  overallBitratePeriods: null;
  ownershipTypePeriods: null;
  satellite: null;
  originBc: null;
  destinationBc: null;
  networkResource: boolean;
  bookingResourceType: string;
  d2FPortOrService: boolean;
  d2FVideoService: boolean;
  d2FDataService: boolean;
  specificForAnEvent: boolean;
  businessKey: string;
  entityType: string;
  d2FService: boolean;
  entityIdentifier: string;
}
